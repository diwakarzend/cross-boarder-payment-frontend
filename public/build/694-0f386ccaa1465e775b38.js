"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkcross_border_payment"] = self["webpackChunkcross_border_payment"] || []).push([[694],{

/***/ 30694:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ Usersold_Users)\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n// EXTERNAL MODULE: ./src/utils/Request.js\nvar Request = __webpack_require__(66195);\n// EXTERNAL MODULE: ./src/utils/urls.js\nvar urls = __webpack_require__(2418);\n// EXTERNAL MODULE: ./src/actions/users.js\nvar actions_users = __webpack_require__(15302);\n// EXTERNAL MODULE: ./src/Components/SideBar/SideBar.js + 5 modules\nvar SideBar = __webpack_require__(83475);\n// EXTERNAL MODULE: ./src/Components/BreadCrumb/BreadCrumb.js + 2 modules\nvar BreadCrumb = __webpack_require__(63851);\n// EXTERNAL MODULE: ./src/utils/common.js\nvar common = __webpack_require__(92667);\n// EXTERNAL MODULE: ./src/Components/UI/StyledConstants.js\nvar StyledConstants = __webpack_require__(20696);\n;// CONCATENATED MODULE: ./src/Pages/Usersold/AddUserForm.js\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\nvar initialFormData = Object.freeze({\n  address1: \"\",\n  address2: \"\",\n  dob: \"YYYY-MM-DD\",\n  email: \"\",\n  firstName: \"\",\n  landmark: \"\",\n  langKey: \"en\",\n  lastName: \"\",\n  otp: \"\",\n  phoneNumber: \"\",\n  pincode: \"\",\n  qrCodeId: \"\",\n  role: \"\",\n  tenantId: 0,\n  userName: \"\"\n});\nvar AddUserForm = function AddUserForm(props) {\n  var editUserData = props.editUserData,\n    userToBeEdit = props.userToBeEdit,\n    closePopUpHandler = props.closePopUpHandler,\n    fetchUsersData = props.fetchUsersData;\n  var _useState = (0,react.useState)(initialFormData),\n    _useState2 = _slicedToArray(_useState, 2),\n    formData = _useState2[0],\n    updateFormData = _useState2[1];\n  var _useState3 = (0,react.useState)(initialFormData),\n    _useState4 = _slicedToArray(_useState3, 2),\n    editFormData = _useState4[0],\n    updateEditFormData = _useState4[1];\n  var _useState5 = (0,react.useState)([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    errors = _useState6[0],\n    updateError = _useState6[1];\n  var _useState7 = (0,react.useState)(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    success = _useState8[0],\n    updateSuccess = _useState8[1];\n  (0,react.useEffect)(function () {\n    if (editUserData) {\n      updateFormData(_objectSpread({}, editUserData));\n    }\n  }, [editUserData]);\n  var handleChange = function handleChange(event) {\n    updateFormData(_objectSpread(_objectSpread({}, formData), {}, _defineProperty({}, event.target.name, event.target.value)));\n  };\n  var updateUser = function updateUser() {\n    var api = new Request/* default */.Z(\"\", successHandler, errorHandler, false);\n    return api.post(\"\".concat(urls/* default.login.BASE_URL */.Z.login.BASE_URL).concat(urls/* default.User.UPDATE_USER */.Z.User.UPDATE_USER), formData);\n  };\n  var errorHandler = function errorHandler(error) {\n    // {\"timestamp\":\"2021-09-18T06:25:35.505+00:00\",\"status\":401,\"error\":\"Unauthorized\",\"message\":\"\",\"path\":\"/api/users\"}\n    var errors = [];\n    if (error && error.status == 400) {\n      if (error.fieldErrors && error.fieldErrors instanceof Array) {\n        error.fieldErrors.forEach(function (item) {\n          return errors.push(\"\".concat(item.field, \": \").concat(item.message));\n        });\n      }\n      if (errors.length > 0) {\n        updateError(errors);\n        window.scrollTo(100, 100);\n      }\n    } else if (error && error.status == 401) {\n      updateError([error.error]);\n      window.scrollTo(100, 100);\n    }\n  };\n  var successHandler = function successHandler(data) {\n    if (!data.success) {\n      updateError([data.msg]);\n    } else {\n      updateError([]);\n      updateSuccess(data.msg);\n      closePopUpHandler();\n      (0,common/* removeOverlay */.rG)();\n      fetchUsersData();\n    }\n  };\n  var submitFormHandler = function submitFormHandler(event) {\n    event.preventDefault();\n    if (editUserData) {\n      updateUser();\n    }\n    formData.userName = formData.phoneNumber;\n\n    // pricingToken;\n\n    var api = new Request/* default */.Z(\"\", successHandler, errorHandler, false);\n    return api.post(urls/* default.login.BASE_URL */.Z.login.BASE_URL + urls/* default.User.CREATE_NEW_USER */.Z.User.CREATE_NEW_USER, formData);\n  };\n  var errorHTML = \"\";\n  var errorStyles = \"\";\n  var successStyles = \"\";\n  if (errors.length > 0) {\n    errorHTML = errors.map(function (val) {\n      return /*#__PURE__*/react.createElement(\"li\", {\n        key: val\n      }, val);\n    });\n    errorStyles = {\n      color: \"red\",\n      fontSize: \"14px\",\n      marginTop: \"26px\"\n    };\n  } else {\n    successStyles = {\n      color: \"green\",\n      fontSize: \"14px\",\n      marginTop: \"26px\"\n    };\n  }\n  console.log(\"editUserData\", editUserData);\n  return /*#__PURE__*/react.createElement(StyledConstants/* ModalWrapper */.AB, null, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-dialog\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-content\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-header\"\n  }, /*#__PURE__*/react.createElement(\"h4\", {\n    className: \"modal-title\"\n  }, \"Add User\"), /*#__PURE__*/react.createElement(\"button\", {\n    type: \"button\",\n    className: \"close close-btn\",\n    onClick: closePopUpHandler\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, /*#__PURE__*/react.createElement(\"i\", {\n    className: \"fa fa-times\",\n    \"aria-hidden\": \"true\"\n  }), \" Cancel \"))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-body\"\n  }, /*#__PURE__*/react.createElement(\"form\", {\n    onSubmit: submitFormHandler\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"flex space-between\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"col-6\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"floating-label-group inputgroup\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"floating-label-input\"\n  }, /*#__PURE__*/react.createElement(\"input\", {\n    type: \"text\",\n    className: formData && formData.firstName !== \"\" ? \"form-control has-value\" : \"form-control\",\n    name: \"firstName\",\n    value: formData && formData.firstName,\n    onChange: handleChange\n  }), /*#__PURE__*/react.createElement(\"label\", {\n    className: \"label\",\n    \"for\": \"exampleInputEmail1\"\n  }, \"First Name\")))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"col-6\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"floating-label-group inputgroup\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"floating-label-input\"\n  }, /*#__PURE__*/react.createElement(\"input\", {\n    type: \"text\",\n    className: formData && formData.lastName !== \"\" ? \"form-control has-value\" : \"form-control\",\n    name: \"lastName\",\n    value: formData && formData.lastName,\n    onChange: handleChange\n  }), /*#__PURE__*/react.createElement(\"label\", {\n    className: \"label\",\n    \"for\": \"exampleInputEmail1\"\n  }, \"Last Name\"))))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"flex space-between\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"col-12\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"floating-label-group inputgroup\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"floating-label-input\"\n  }, /*#__PURE__*/react.createElement(\"input\", {\n    type: \"email\",\n    className: formData && formData.email !== \"\" ? \"form-control has-value\" : \"form-control\",\n    name: \"email\",\n    value: formData && formData.email,\n    required: true,\n    onChange: handleChange\n  }), /*#__PURE__*/react.createElement(\"label\", {\n    className: \"label\",\n    \"for\": \"exampleInputEmail1\"\n  }, \"Email Id\"))))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"flex space-between\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"col-6\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"floating-label-group inputgroup\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"floating-label-input\"\n  }, /*#__PURE__*/react.createElement(\"input\", {\n    type: \"date\",\n    className: formData.dob !== \"\" ? \"form-control has-value\" : \"form-control\",\n    name: \"dob\",\n    value: formData.dob,\n    min: \"1950-01-01\",\n    max: \"2000-12-31\",\n    onChange: handleChange\n  }), /*#__PURE__*/react.createElement(\"label\", {\n    className: \"label\",\n    \"for\": \"exampleInputEmail1\"\n  }, \"DOB\")))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"col-6\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"floating-label-group inputgroup\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"floating-label-input\"\n  }, /*#__PURE__*/react.createElement(\"input\", {\n    type: \"number\",\n    className: formData && formData.phoneNumber !== \"\" ? \"form-control has-value\" : \"form-control\",\n    name: \"phoneNumber\",\n    value: formData && formData.phoneNumber,\n    required: true,\n    onChange: handleChange\n  }), /*#__PURE__*/react.createElement(\"label\", {\n    className: \"label\",\n    \"for\": \"exampleInputEmail1\"\n  }, \"Mobile\"))))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"flex space-between\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"col-12\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"floating-label-group inputgroup\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"floating-label-input\"\n  }, /*#__PURE__*/react.createElement(\"input\", {\n    type: \"text\",\n    className: formData && (formData === null || formData === void 0 ? void 0 : formData.address1) !== \"\" ? \"form-control has-value\" : \"form-control\",\n    name: \"address1\",\n    value: formData && formData.address1,\n    required: true,\n    onChange: handleChange\n  }), /*#__PURE__*/react.createElement(\"label\", {\n    className: \"label\",\n    \"for\": \"exampleInputEmail1\"\n  }, \"Address1\"))))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"flex space-between\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"col-12\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"floating-label-group inputgroup\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"floating-label-input\"\n  }, /*#__PURE__*/react.createElement(\"input\", {\n    type: \"text\",\n    className: formData && (formData === null || formData === void 0 ? void 0 : formData.address2) != \"\" ? \"form-control has-value\" : \"form-control\",\n    name: \"address2\",\n    value: formData && formData.address2,\n    onChange: handleChange\n  }), /*#__PURE__*/react.createElement(\"label\", {\n    className: \"label\",\n    \"for\": \"exampleInputEmail1\"\n  }, \"Address2\"))))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"flex space-between\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"col-6\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"floating-label-group inputgroup\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"floating-label-input\"\n  }, /*#__PURE__*/react.createElement(\"input\", {\n    type: \"text\",\n    className: formData && (formData === null || formData === void 0 ? void 0 : formData.landmark) !== \"\" ? \"form-control has-value\" : \"form-control\",\n    name: \"landmark\",\n    value: formData && formData.landmark,\n    onChange: handleChange\n  }), /*#__PURE__*/react.createElement(\"label\", {\n    className: \"label\",\n    \"for\": \"exampleInputEmail1\"\n  }, \"Land Mark\")))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"col-6\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"floating-label-group inputgroup\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"floating-label-input\"\n  }, /*#__PURE__*/react.createElement(\"input\", {\n    type: \"number\",\n    className: formData && (formData === null || formData === void 0 ? void 0 : formData.pincode) !== \"\" ? \"form-control has-value\" : \"form-control\",\n    name: \"pincode\",\n    value: formData && formData.pincode,\n    required: true,\n    onChange: handleChange\n  }), /*#__PURE__*/react.createElement(\"label\", {\n    className: \"label\",\n    \"for\": \"exampleInputEmail1\"\n  }, \"Pin Code\"))))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"flex space-between\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"col-12\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"floating-label-group inputgroup\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"floating-label-input\"\n  }, /*#__PURE__*/react.createElement(\"select\", {\n    className: editUserData && editUserData.role !== \"\" ? \"form-control has-value\" : \"form-control\",\n    name: \"role\",\n    required: true,\n    onChange: handleChange\n  }, /*#__PURE__*/react.createElement(\"option\", {\n    value: \"\"\n  }, \"Choose Role\"), /*#__PURE__*/react.createElement(\"option\", {\n    value: \"PTM_VENDOR\",\n    selected: editUserData && editUserData.role == \"PTM_VENDOR\" ? true : false\n  }, \"Vendor\"), /*#__PURE__*/react.createElement(\"option\", {\n    value: \"PTM_SUB_ADMIN\",\n    selected: editUserData && editUserData.role == \"PTM_SUB_ADMIN\" ? true : false\n  }, \"Sub Admin\")), /*#__PURE__*/react.createElement(\"label\", {\n    className: \"label\",\n    \"for\": \"exampleFormControlSelect1\"\n  }, \"User Role\"))))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"flex item-center justify-center gap16\"\n  }, /*#__PURE__*/react.createElement(StyledConstants/* Button */.zx, {\n    type: \"submit\",\n    className: \"btn-success wd248\"\n  }, editUserData ? \"Update User\" : \"Save User\")))))));\n};\n/* harmony default export */ const Usersold_AddUserForm = (AddUserForm);\n\n// {modal &&\n//   <ModalWrapper>\n//     <div className=\"modal-dialog\">\n//       <div className=\"modal-content\">\n//         <div className=\"modal-header\">\n//           <h4>Change Active QR Code</h4>\n//         </div>\n//         <div className=\"modal-body\">\n//           <ChangeQrWrapper>\n//             <select\n//               name=\"qrCode\"\n//               className=\"form-control\"\n//               onChange={(e) => setQrCode(e.target.value)}\n//             >\n//               <option value=\"\">Select QR Code</option>\n//               <option value=\"QR Code 1\">QR Code 1</option>\n//               <option value=\"QR Code 2\">QR Code 2</option>\n//               <option value=\"QR Code 3\">QR Code 3</option>\n//             </select>\n//             <div className=\"qr-image flex item-center justify-center\">\n//               <img src=\"https://storage.googleapis.com/ptm-assets-prod/icons/yes-paytm.png\" alt=\"\" />\n//             </div>\n//             <div className=\"flex item-center justify-center\">\n//               <Button className=\"btn-success\">Change QR Code</Button>\n//             </div>\n//           </ChangeQrWrapper>\n//         </div>\n//       </div>\n//     </div>\n\n//   </ModalWrapper>\n// EXTERNAL MODULE: ./node_modules/axios/index.js\nvar axios = __webpack_require__(9669);\nvar axios_default = /*#__PURE__*/__webpack_require__.n(axios);\n;// CONCATENATED MODULE: ./src/Pages/Usersold/PermissionForm.js\nfunction PermissionForm_typeof(obj) { \"@babel/helpers - typeof\"; return PermissionForm_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, PermissionForm_typeof(obj); }\nfunction PermissionForm_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction PermissionForm_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? PermissionForm_ownKeys(Object(source), !0).forEach(function (key) { PermissionForm_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : PermissionForm_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction PermissionForm_defineProperty(obj, key, value) { key = PermissionForm_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction PermissionForm_toPropertyKey(arg) { var key = PermissionForm_toPrimitive(arg, \"string\"); return PermissionForm_typeof(key) === \"symbol\" ? key : String(key); }\nfunction PermissionForm_toPrimitive(input, hint) { if (PermissionForm_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (PermissionForm_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction PermissionForm_slicedToArray(arr, i) { return PermissionForm_arrayWithHoles(arr) || PermissionForm_iterableToArrayLimit(arr, i) || PermissionForm_unsupportedIterableToArray(arr, i) || PermissionForm_nonIterableRest(); }\nfunction PermissionForm_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction PermissionForm_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return PermissionForm_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return PermissionForm_arrayLikeToArray(o, minLen); }\nfunction PermissionForm_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction PermissionForm_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction PermissionForm_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\nvar PermissionForm = function PermissionForm(props) {\n  var userId = props.userId,\n    closePopUpHandler = props.closePopUpHandler;\n  var _useState = (0,react.useState)(\"\"),\n    _useState2 = PermissionForm_slicedToArray(_useState, 2),\n    permissions = _useState2[0],\n    setPermissions = _useState2[1];\n  var _useState3 = (0,react.useState)({\n      error: \"\",\n      success: \"\"\n    }),\n    _useState4 = PermissionForm_slicedToArray(_useState3, 2),\n    message = _useState4[0],\n    setMessage = _useState4[1];\n  var fetchPermissions = function fetchPermissions() {\n    var successHandler = function successHandler(res) {\n      // console.log(\"success\", res);\n      if (res) {\n        setPermissions(res);\n        updateFormData(res.activePermissions);\n      }\n    };\n    var options = {\n      headers: {\n        Authorization: (0,common/* getAuthToken */.bW)(),\n        \"api-Authorization\": (0,common/* getAuthToken */.bW)(\"api-Authorization\")\n      }\n    };\n    var promise1 = axios_default().get(\"\".concat(urls/* default.login.BASE_URL */.Z.login.BASE_URL).concat(urls/* default.User.GET_ALL_PERMISISSIONS */.Z.User.GET_ALL_PERMISISSIONS), options)[\"catch\"](function () {\n      return \"\";\n    });\n    var promise2 = axios_default().get(\"\".concat(urls/* default.login.BASE_URL */.Z.login.BASE_URL).concat(urls/* default.User.MANAGE_USER_PERMISSIONS */.Z.User.MANAGE_USER_PERMISSIONS, \"?userName=\").concat(userId), options)[\"catch\"](function () {\n      return \"\";\n    });\n    axios_default().all([promise1, promise2]).then(axios_default().spread(function () {\n      for (var _len = arguments.length, responses = new Array(_len), _key = 0; _key < _len; _key++) {\n        responses[_key] = arguments[_key];\n      }\n      var allPermissions = responses[0] && responses[0].data.data;\n      var activePermissions = responses[1] && responses[1].data.data;\n      successHandler({\n        allPermissions: allPermissions,\n        activePermissions: activePermissions\n      });\n    }))[\"catch\"](function (errors) {\n      console.log(\"responseOne errors\", errors);\n    });\n  };\n  (0,react.useEffect)(function () {\n    fetchPermissions();\n  }, []);\n  var handleClick = function handleClick(event, permKey) {\n    // console.log(\n    //   activePermissions,\n    //   permKey,\n    //   event.target.name,\n    //   event.target.checked\n    // );\n\n    var activePermissionsCopy = JSON.parse(JSON.stringify(activePermissions));\n    if (event.target.checked) {\n      if (activePermissionsCopy[permKey]) {\n        activePermissionsCopy[permKey].push(event.target.name);\n      } else {\n        activePermissionsCopy[permKey] = [event.target.name];\n      }\n    } else {\n      var filteredArray = activePermissionsCopy[permKey].filter(function (item) {\n        return item != event.target.name;\n      });\n      activePermissionsCopy[permKey] = filteredArray;\n    }\n    setPermissions(PermissionForm_objectSpread(PermissionForm_objectSpread({}, permissions), {}, {\n      activePermissions: activePermissionsCopy\n    }));\n  };\n  var submitFormHandler = function submitFormHandler(event) {\n    event.preventDefault();\n    var activePermissions = permissions.activePermissions;\n    console.log(\"submitFormHandler\", activePermissions);\n    var newPermissions = [];\n    Object.keys(activePermissions).forEach(function (key) {\n      newPermissions = newPermissions.concat(activePermissions[key]);\n    });\n    console.log(\"newPermissions\", newPermissions);\n    var formData = {\n      userName: userId,\n      addApiCode: newPermissions\n    };\n    var submitSuccess = function submitSuccess(res) {\n      if (res.success) {\n        setMessage({\n          success: res.msg,\n          error: \"\"\n        });\n      } else {\n        setMessage({\n          error: res.msg,\n          success: \"\"\n        });\n      }\n    };\n    var submitError = function submitError(res) {\n      setMessage({\n        error: res.msg,\n        success: \"\"\n      });\n    };\n    var api = new Request/* default */.Z(\"\", submitSuccess, submitError, false);\n    return api.post(urls/* default.login.BASE_URL */.Z.login.BASE_URL + urls/* default.User.MANAGE_USER_PERMISSIONS */.Z.User.MANAGE_USER_PERMISSIONS, formData);\n  };\n  var allPermissions = permissions.allPermissions,\n    activePermissions = permissions.activePermissions;\n  console.log(\"permissions\", activePermissions);\n  var data = [];\n  var permKeys = allPermissions ? Object.keys(allPermissions) : \"\";\n  return /*#__PURE__*/react.createElement(StyledConstants/* ModalWrapper */.AB, null, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-dialog\",\n    role: \"document\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-content\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-header\"\n  }, /*#__PURE__*/react.createElement(\"h4\", {\n    className: \"modal-title\",\n    id: \"exampleModalLabel\"\n  }, \"Manage Permissions\"), /*#__PURE__*/react.createElement(\"button\", {\n    type: \"button\",\n    className: \"close close-btn\",\n    onClick: closePopUpHandler\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, /*#__PURE__*/react.createElement(\"i\", {\n    className: \"fa fa-times\",\n    \"aria-hidden\": \"true\"\n  }), \" Cancel \"))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-body\"\n  }, /*#__PURE__*/react.createElement(\"form\", {\n    onSubmit: submitFormHandler\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"pb16\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: message.success ? \"done\" : \"fail\"\n  }, message.success || message.error), permKeys && Array.isArray(permKeys) ? permKeys.map(function (permKey) {\n    return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(\"h6\", {\n      className: \"py8\"\n    }, permKey), /*#__PURE__*/react.createElement(\"ul\", {\n      className: \"pl16\"\n    }, allPermissions && allPermissions[permKey] && Array.isArray(allPermissions[permKey]) ? allPermissions[permKey].map(function (item) {\n      return /*#__PURE__*/react.createElement(\"li\", {\n        className: \"py4\"\n      }, /*#__PURE__*/react.createElement(\"input\", {\n        type: \"checkbox\",\n        name: item,\n        checked: activePermissions && activePermissions[permKey] && activePermissions[permKey].includes(item) ? true : false,\n        onClick: function onClick(event) {\n          return handleClick(event, permKey);\n        },\n        style: {\n          marginRight: \"10px\"\n        }\n      }), item.replace(/_/g, \" \").replace(\"PTM \", \"\"));\n    }) : \"\"));\n  }) : /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      margin: \"167px 0 156px 0\",\n      fontSize: \"26px\",\n      textAlign: \"center\",\n      color: \"#0aaaba\"\n    }\n  }, \"Loading....\")), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"flex item-center justify-center gap16\"\n  }, /*#__PURE__*/react.createElement(StyledConstants/* Button */.zx, {\n    type: \"submit\",\n    className: \"btn-success wd248\"\n  }, \"Update Permissions\")))))));\n};\n/* harmony default export */ const Usersold_PermissionForm = (PermissionForm);\n;// CONCATENATED MODULE: ./src/Pages/Usersold/AdminFundForm.js\nfunction AdminFundForm_typeof(obj) { \"@babel/helpers - typeof\"; return AdminFundForm_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, AdminFundForm_typeof(obj); }\nfunction AdminFundForm_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction AdminFundForm_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? AdminFundForm_ownKeys(Object(source), !0).forEach(function (key) { AdminFundForm_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : AdminFundForm_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction AdminFundForm_defineProperty(obj, key, value) { key = AdminFundForm_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction AdminFundForm_toPropertyKey(arg) { var key = AdminFundForm_toPrimitive(arg, \"string\"); return AdminFundForm_typeof(key) === \"symbol\" ? key : String(key); }\nfunction AdminFundForm_toPrimitive(input, hint) { if (AdminFundForm_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (AdminFundForm_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction AdminFundForm_slicedToArray(arr, i) { return AdminFundForm_arrayWithHoles(arr) || AdminFundForm_iterableToArrayLimit(arr, i) || AdminFundForm_unsupportedIterableToArray(arr, i) || AdminFundForm_nonIterableRest(); }\nfunction AdminFundForm_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction AdminFundForm_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return AdminFundForm_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return AdminFundForm_arrayLikeToArray(o, minLen); }\nfunction AdminFundForm_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction AdminFundForm_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction AdminFundForm_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\nfunction AdminFundForm(_ref) {\n  var userId = _ref.userId,\n    closeAdminFundForm = _ref.closeAdminFundForm,\n    setStatusMsg = _ref.setStatusMsg,\n    successCallBack = _ref.successCallBack;\n  var _useState = (0,react.useState)({\n      amount: \"\",\n      remark: \"\",\n      ewalletType: \"MAIN_WALLET\",\n      userId: userId\n    }),\n    _useState2 = AdminFundForm_slicedToArray(_useState, 2),\n    formData = _useState2[0],\n    setFormData = _useState2[1];\n  var walletSelect = (0,react.useRef)();\n  var submitFormHandler = function submitFormHandler(event) {\n    event.preventDefault();\n    var walletAction = walletSelect.current.value;\n    var request = new Request/* default */.Z(\"\", successHandler, errorHandler, true);\n    var walletAPI = \"\".concat(urls/* default.login.BASE_URL */.Z.login.BASE_URL).concat(urls/* default.Wallet.MANAGE_WALLET */.Z.Wallet.MANAGE_WALLET).replace(\"{actionType}\", walletAction);\n    formData.amount = parseInt(formData.amount);\n    request.post(walletAPI, formData);\n  };\n  var successHandler = function successHandler(response, headers) {\n    if (response.success) {\n      closeAdminFundForm();\n      successCallBack();\n      setStatusMsg(\"Action to wallet is submitted successfully\");\n    }\n  };\n  var errorHandler = function errorHandler(error) {\n    console.log(\"failed call\");\n  };\n  var handleChange = function handleChange(event) {\n    setFormData(function (prevState) {\n      return AdminFundForm_objectSpread(AdminFundForm_objectSpread({}, prevState), {}, AdminFundForm_defineProperty({}, event.target.name, event.target.value));\n    });\n  };\n  console.log(\"formData\", formData);\n  return /*#__PURE__*/react.createElement(StyledConstants/* ModalWrapper */.AB, null, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-dialog\",\n    role: \"document\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-content\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-header\"\n  }, /*#__PURE__*/react.createElement(\"h4\", {\n    className: \"modal-title\"\n  }, \"Add Fund\"), /*#__PURE__*/react.createElement(\"button\", {\n    type: \"button\",\n    className: \"close close-btn\",\n    onClick: closeAdminFundForm\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, /*#__PURE__*/react.createElement(\"i\", {\n    className: \"fa fa-times\",\n    \"aria-hidden\": \"true\"\n  }), \" Cancel \"))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-body\"\n  }, /*#__PURE__*/react.createElement(\"form\", {\n    onSubmit: function onSubmit(event) {\n      return submitFormHandler(event);\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"floating-label-group inputgroup\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"flex space-between floating-label-input\"\n  }, /*#__PURE__*/react.createElement(\"input\", {\n    required: true,\n    type: \"number\",\n    className: \"form-control\",\n    name: \"amount\",\n    onChange: handleChange\n  }), /*#__PURE__*/react.createElement(\"label\", {\n    className: \"label\"\n  }, \"Amount\"))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"floating-label-group inputgroup\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"flex space-between floating-label-input\"\n  }, /*#__PURE__*/react.createElement(\"select\", {\n    required: true,\n    ref: walletSelect,\n    className: \"form-control\"\n  }, /*#__PURE__*/react.createElement(\"option\", {\n    value: \"\"\n  }, \"Choose Action\"), /*#__PURE__*/react.createElement(\"option\", {\n    value: \"deposit\"\n  }, \"Deposit\"), /*#__PURE__*/react.createElement(\"option\", {\n    value: \"debit\"\n  }, \"Withdraw\"), /*#__PURE__*/react.createElement(\"option\", {\n    value: \"hold\"\n  }, \"Hold\"), /*#__PURE__*/react.createElement(\"option\", {\n    value: \"hold-withdraw\"\n  }, \"Block\")), /*#__PURE__*/react.createElement(\"label\", {\n    className: \"label\"\n  }, \"Action\"))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"floating-label-group inputgroup\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"flex space-between floating-label-input\"\n  }, /*#__PURE__*/react.createElement(\"input\", {\n    required: true,\n    type: \"text\",\n    className: \"form-control\",\n    name: \"remark\",\n    onChange: handleChange\n  }), /*#__PURE__*/react.createElement(\"label\", {\n    className: \"label\"\n  }, \"Remark\")))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"flex item-center justify-center gap16\"\n  }, /*#__PURE__*/react.createElement(StyledConstants/* Button */.zx, {\n    type: \"submit\",\n    className: \"btn-success wd248\"\n  }, \"Add Fund\")))))));\n}\n/* harmony default export */ const Usersold_AdminFundForm = (AdminFundForm);\n// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 20 modules\nvar es = __webpack_require__(28216);\n;// CONCATENATED MODULE: ./src/Pages/Usersold/WalletDetails.js\nfunction WalletDetails_slicedToArray(arr, i) { return WalletDetails_arrayWithHoles(arr) || WalletDetails_iterableToArrayLimit(arr, i) || WalletDetails_unsupportedIterableToArray(arr, i) || WalletDetails_nonIterableRest(); }\nfunction WalletDetails_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction WalletDetails_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return WalletDetails_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return WalletDetails_arrayLikeToArray(o, minLen); }\nfunction WalletDetails_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction WalletDetails_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction WalletDetails_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\nfunction WalletDetails(_ref) {\n  var userId = _ref.userId,\n    closeTransactionHandler = _ref.closeTransactionHandler,\n    successCallBack = _ref.successCallBack,\n    userWallet = _ref.userWallet;\n  var fetchWalletDetails = function fetchWalletDetails() {\n    var request = new Request/* default */.Z(\"\", successHandler, errorHandler, true);\n    var walletAPI = \"\".concat(urls/* default.login.BASE_URL */.Z.login.BASE_URL).concat(urls/* default.Wallet.VIEW_TRANSACTIONS */.Z.Wallet.VIEW_TRANSACTIONS).replace(\"{userId}\", userWallet.userName);\n    userWallet.userId = parseInt(userWallet.userId);\n    request.get(walletAPI);\n  };\n  var successHandler = function successHandler(response, headers) {\n    if (response.success) {\n      setObtainedWalletDetails(response.data);\n    }\n  };\n  var _useState = (0,react.useState)([]),\n    _useState2 = WalletDetails_slicedToArray(_useState, 2),\n    obtainedWalletDetails = _useState2[0],\n    setObtainedWalletDetails = _useState2[1];\n  var errorHandler = function errorHandler(error) {\n    console.log(\"failed call\");\n  };\n  (0,react.useEffect)(function () {\n    fetchWalletDetails();\n  }, []);\n  return /*#__PURE__*/react.createElement(StyledConstants/* ModalWrapper */.AB, null, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-dialog\",\n    role: \"document\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-content\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-header\"\n  }, /*#__PURE__*/react.createElement(\"h5\", {\n    className: \"modal-title\",\n    id: \"exampleModalLabel\"\n  }, \"Details\"), /*#__PURE__*/react.createElement(\"button\", {\n    type: \"button\",\n    className: \"close close-btn\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close close-btn\",\n    onClick: closeTransactionHandler\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, /*#__PURE__*/react.createElement(\"i\", {\n    className: \"fa fa-times\",\n    \"aria-hidden\": \"true\"\n  }), \" Cancel \"))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-body\"\n  }, /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(\"ul\", null, obtainedWalletDetails.map(function (details) {\n    return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(\"li\", null, Object.entries(details).map(function (_ref2) {\n      var _ref3 = WalletDetails_slicedToArray(_ref2, 2),\n        key = _ref3[0],\n        value = _ref3[1];\n      return /*#__PURE__*/react.createElement(\"li\", null, \"\".concat(key, \" : \").concat(value));\n    })));\n  })))))));\n}\n/* harmony default export */ const Usersold_WalletDetails = (WalletDetails);\n;// CONCATENATED MODULE: ./src/Pages/Usersold/Users.js\nfunction Users_typeof(obj) { \"@babel/helpers - typeof\"; return Users_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, Users_typeof(obj); }\nfunction Users_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction Users_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? Users_ownKeys(Object(source), !0).forEach(function (key) { Users_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : Users_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction Users_defineProperty(obj, key, value) { key = Users_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction Users_toPropertyKey(arg) { var key = Users_toPrimitive(arg, \"string\"); return Users_typeof(key) === \"symbol\" ? key : String(key); }\nfunction Users_toPrimitive(input, hint) { if (Users_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (Users_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction Users_slicedToArray(arr, i) { return Users_arrayWithHoles(arr) || Users_iterableToArrayLimit(arr, i) || Users_unsupportedIterableToArray(arr, i) || Users_nonIterableRest(); }\nfunction Users_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction Users_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return Users_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Users_arrayLikeToArray(o, minLen); }\nfunction Users_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction Users_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction Users_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar roleMapping = {\n  PTM_VENDOR: \"Vendor\",\n  PTM_ADMIN: \"Admin\",\n  PTM_SUB_ADMIN: \"Sub Admin\"\n};\nvar styles = {\n  iconContainer: {\n    padding: \"10px\",\n    cursor: \"pointer\"\n  },\n  bulbContainer: {\n    N: {\n      color: \"gray\",\n      padding: \"10px\"\n    },\n    Y: {\n      color: \"green\",\n      padding: \"10px\"\n    }\n  }\n};\nvar Users = function Users(props) {\n  var _useState = (0,react.useState)(false),\n    _useState2 = Users_slicedToArray(_useState, 2),\n    isPopupVisible = _useState2[0],\n    handlePopUp = _useState2[1];\n  var _useState3 = (0,react.useState)({\n      userName: \"\",\n      msg: \"\",\n      status: \"\"\n    }),\n    _useState4 = Users_slicedToArray(_useState3, 2),\n    userStatus = _useState4[0],\n    setUserStatus = _useState4[1];\n  var _useState5 = (0,react.useState)(false),\n    _useState6 = Users_slicedToArray(_useState5, 2),\n    transationPopupVisible = _useState6[0],\n    setTransationPopupVisible = _useState6[1];\n  var _useState7 = (0,react.useState)({}),\n    _useState8 = Users_slicedToArray(_useState7, 2),\n    userTransactionDetails = _useState8[0],\n    setUserTransactionDetails = _useState8[1];\n  var _useState9 = (0,react.useState)(),\n    _useState10 = Users_slicedToArray(_useState9, 2),\n    showPhoneNumberField = _useState10[0],\n    setShowPhoneNumberField = _useState10[1];\n  var _useState11 = (0,react.useState)(\"\"),\n    _useState12 = Users_slicedToArray(_useState11, 2),\n    statusMsg = _useState12[0],\n    setStatusMsg = _useState12[1];\n  var _useState13 = (0,react.useState)(\"\"),\n    _useState14 = Users_slicedToArray(_useState13, 2),\n    userToBeEdit = _useState14[0],\n    setUserId = _useState14[1];\n  var _useState15 = (0,react.useState)(\"\"),\n    _useState16 = Users_slicedToArray(_useState15, 2),\n    editUserData = _useState16[0],\n    setEditUserData = _useState16[1];\n  var _useState17 = (0,react.useState)({\n      isPopupVisible: false,\n      userId: \"\"\n    }),\n    _useState18 = Users_slicedToArray(_useState17, 2),\n    permissionData = _useState18[0],\n    setPermissionData = _useState18[1];\n  var _useState19 = (0,react.useState)(\"\"),\n    _useState20 = Users_slicedToArray(_useState19, 2),\n    adminFormData = _useState20[0],\n    setAdminFormData = _useState20[1];\n  var _useState21 = (0,react.useState)(false),\n    _useState22 = Users_slicedToArray(_useState21, 2),\n    isTooltip = _useState22[0],\n    setTooltip = _useState22[1];\n  var dispatch = props.dispatch;\n  var fetchUsersData = function fetchUsersData() {\n    dispatch((0,actions_users/* fetchUsersList */.iI)());\n  };\n  (0,react.useEffect)(function () {\n    fetchUsersData();\n  }, []);\n  var showTransactionHandler = function showTransactionHandler(item) {\n    setUserTransactionDetails(item);\n    setTransationPopupVisible(true);\n    (0,common/* addOverlay */.Dw)();\n  };\n  var closeTransactionHandler = function closeTransactionHandler() {\n    setTransationPopupVisible(false);\n    (0,common/* removeOverlay */.rG)();\n  };\n  var editClickHandler = function editClickHandler(userId) {\n    setShowPhoneNumberField(false);\n    handlePopUp(true);\n    (0,common/* addOverlay */.Dw)();\n    setUserId(userId);\n    var successHandler = function successHandler(response, headers) {\n      if (response.success == true) {\n        setEditUserData(response.data);\n      }\n    };\n    var errorHandler = function errorHandler(error) {};\n    var request = new Request/* default */.Z(\"\", successHandler, errorHandler, false);\n    return request.get(\"\".concat(urls/* default.login.BASE_URL */.Z.login.BASE_URL).concat(urls/* default.User.EDIT_USER.replace */.Z.User.EDIT_USER.replace(\"{userId}\", userId)));\n  };\n  var adminFundFormHandler = function adminFundFormHandler(userId) {\n    (0,common/* addOverlay */.Dw)();\n    setAdminFormData(userId);\n  };\n  var permissionClickHandler = function permissionClickHandler(userId) {\n    (0,common/* addOverlay */.Dw)();\n    setPermissionData({\n      isPopupVisible: true,\n      userId: userId\n    });\n  };\n  var openPopupHandler = function openPopupHandler() {\n    document.body.classList.add(\"modal-open\");\n    setShowPhoneNumberField(true);\n    handlePopUp(true);\n  };\n  var handleUserStatus = function handleUserStatus(userId, curentStatus) {\n    var status = curentStatus == \"N\" ? \"Y\" : \"N\";\n    setTooltip(false);\n    var successHandler = function successHandler(response) {\n      console.log(\"responseresponse\", response);\n      if (response.success) {\n        var msg = status == \"N\" ? \"deactivated\" : \"activated\";\n        setTooltip(true);\n        setUserStatus({\n          userName: userId,\n          status: status,\n          msg: /*#__PURE__*/react.createElement(react.Fragment, null, \"This user is now \", /*#__PURE__*/react.createElement(\"strong\", null, msg))\n        });\n      }\n    };\n    var errorHandler = function errorHandler(error) {};\n    var request = new Request/* default */.Z(\"\", successHandler, errorHandler, false);\n    var params = \"?userId=\".concat(userId, \"&status=\").concat(status);\n    return request.put(\"\".concat(urls/* default.login.BASE_URL */.Z.login.BASE_URL).concat(urls/* default.User.MANAGE_USER_STATUS */.Z.User.MANAGE_USER_STATUS).concat(params));\n  };\n  var closeAdminFundPopUpHandler = function closeAdminFundPopUpHandler() {\n    setAdminFormData(\"\");\n    (0,common/* removeOverlay */.rG)();\n    document.body.classList.remove(\"modal-open\");\n  };\n  var closePopUpHandler = function closePopUpHandler() {\n    setEditUserData(\"\");\n    (0,common/* removeOverlay */.rG)();\n    document.body.classList.remove(\"modal-open\");\n    handlePopUp(false);\n  };\n  var closePermissionPopup = function closePermissionPopup() {\n    setPermissionData(Users_objectSpread(Users_objectSpread({}, permissionData), {}, {\n      userId: \"\",\n      isPopupVisible: false\n    }));\n    (0,common/* removeOverlay */.rG)();\n  };\n  var users = props.users;\n  var userData = users && users.usersList && users.usersList.data;\n  if (userData) {\n    userData = userData.map(function (item) {\n      if (item.userName == userStatus.userName) {\n        item.isActive = userStatus.status;\n      }\n      return item;\n    });\n  }\n\n  // useEffect(() => {\n  //   if(isTooltip) {\n  //     setTimeout(() => {\n  //       setTooltip(false);\n  //     }, 2000)\n  //   }\n  // }, [isTooltip])\n\n  (0,react.useEffect)(function () {\n    if (statusMsg) {\n      setTimeout(function () {\n        setStatusMsg(\"\");\n      }, 3000);\n    }\n  }, [statusMsg]);\n  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(BreadCrumb/* default */.Z, {\n    heading: \"Users\",\n    value: \"Users\"\n  }), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"card-wrapper flex-column mb-4\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"card-header flex item-center space-between\"\n  }, /*#__PURE__*/react.createElement(\"h4\", {\n    className: \"card-title\"\n  }, \"Users List\"), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"flex gap4\"\n  }, /*#__PURE__*/react.createElement(StyledConstants/* BorderBtn */.q6, {\n    type: \"button\",\n    className: \"btn-soft-success\"\n  }, /*#__PURE__*/react.createElement(\"i\", {\n    className: \"fa fa-download\",\n    \"aria-hidden\": \"true\"\n  }), \" CSV\"), /*#__PURE__*/react.createElement(StyledConstants/* BorderBtn */.q6, {\n    type: \"button\",\n    className: \"btn-soft-success ml10\",\n    onClick: function onClick() {\n      return (0,common/* printPage */.ej)();\n    }\n  }, /*#__PURE__*/react.createElement(\"i\", {\n    className: \"fa fa-print\",\n    \"aria-hidden\": \"true\"\n  }), \" Print\"))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"card-body\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"flex space-between px16\"\n  }, /*#__PURE__*/react.createElement(StyledConstants/* Button */.zx, {\n    type: \"button\",\n    className: \"btn-success\",\n    onClick: openPopupHandler\n  }, \"Add User\")), /*#__PURE__*/react.createElement(StyledConstants/* TableWrapper */.y6, null, statusMsg && /*#__PURE__*/react.createElement(StyledConstants/* AlertWrapper */.Yc, {\n    className: \"alert alert-normal\"\n  }, statusMsg), /*#__PURE__*/react.createElement(\"table\", {\n    className: \"table\"\n  }, /*#__PURE__*/react.createElement(\"thead\", null, /*#__PURE__*/react.createElement(\"tr\", null, /*#__PURE__*/react.createElement(\"th\", null, \"Id\"), /*#__PURE__*/react.createElement(\"th\", null, \"Company Name\"), /*#__PURE__*/react.createElement(\"th\", null, \"Mobile\"), /*#__PURE__*/react.createElement(\"th\", null, \"Email\"), /*#__PURE__*/react.createElement(\"th\", null, \"Role\"), /*#__PURE__*/react.createElement(\"th\", null, \"Wallet\"), /*#__PURE__*/react.createElement(\"th\", null, \"Hold Amount\"), /*#__PURE__*/react.createElement(\"th\", null, \"Status\"), /*#__PURE__*/react.createElement(\"th\", null, \"Action\"))), /*#__PURE__*/react.createElement(\"tbody\", null, userData && Array.isArray(userData) ? userData.map(function (item, index) {\n    var userClass = \"\";\n    if (item.role && roleMapping[item.role]) {\n      userClass = roleMapping[item.role].toLowerCase().replace(\" \", \"-\");\n    }\n    var status = item.isActive;\n    var activeStatus = item.isActive == \"N\" ? \"Y\" : \"N\";\n    return /*#__PURE__*/react.createElement(\"tr\", {\n      key: item.userName\n    }, /*#__PURE__*/react.createElement(\"td\", null, index + 1), /*#__PURE__*/react.createElement(\"td\", null, \"\".concat(item.firstName, \" \").concat(item.lastName)), /*#__PURE__*/react.createElement(\"td\", null, item.userName), /*#__PURE__*/react.createElement(\"td\", null, item.email), /*#__PURE__*/react.createElement(\"td\", {\n      className: userClass\n    }, roleMapping[item.role] || \"NA\"), /*#__PURE__*/react.createElement(\"td\", null, \"Rs. \", item.userBalance || \"0\", /*#__PURE__*/react.createElement(\"i\", {\n      style: styles.iconContainer,\n      className: \"fa fa-info-circle\",\n      title: \"Show Transactions\",\n      onClick: function onClick() {\n        return showTransactionHandler(item);\n      }\n    })), /*#__PURE__*/react.createElement(\"td\", null, item.holdBalance ? \"Rs.\" + item.holdBalance : \"-\"), /*#__PURE__*/react.createElement(\"td\", null, \"\".concat(item.isActive == \"N\" ? \"Active\" : \"Inactive\")), /*#__PURE__*/react.createElement(\"td\", null, /*#__PURE__*/react.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\"\n      }\n    }, /*#__PURE__*/react.createElement(\"div\", {\n      style: styles.iconContainer\n    }, /*#__PURE__*/react.createElement(\"i\", {\n      className: \"fa fa-pencil-square-o\",\n      onClick: function onClick() {\n        return editClickHandler(item.userName);\n      },\n      style: {\n        cursor: \"pointer\"\n      },\n      title: \"update user\"\n    })), /*#__PURE__*/react.createElement(\"div\", {\n      style: styles.iconContainer\n    }, /*#__PURE__*/react.createElement(\"i\", {\n      className: \"fa fa-key\",\n      onClick: function onClick() {\n        return permissionClickHandler(item.userName);\n      },\n      title: \"Manage Permissions\",\n      style: {\n        cursor: \"pointer\"\n      }\n    })), /*#__PURE__*/react.createElement(\"div\", {\n      style: styles.iconContainer\n    }, /*#__PURE__*/react.createElement(\"i\", {\n      className: \"fa-key\",\n      title: \"Add Fund\",\n      onClick: function onClick() {\n        console.log(\"successful\");\n        adminFundFormHandler(item.userName);\n      }\n    })), /*#__PURE__*/react.createElement(StyledConstants/* TooltipWrapper */.pf, {\n      style: styles.bulbContainer[activeStatus],\n      onClick: function onClick() {\n        return handleUserStatus(item.userName, status);\n      }\n    }, /*#__PURE__*/react.createElement(\"i\", {\n      className: \"fa fa-lightbulb-o\",\n      style: {\n        fontWeight: \"bold\"\n      },\n      title: \"\".concat(item.isActive == \"N\" ? \"Active\" : \"Inactive\")\n    }), userStatus.userName == item.userName && isTooltip && /*#__PURE__*/react.createElement(\"div\", {\n      className: \"tooltip tooltip-success\"\n    }, userStatus === null || userStatus === void 0 ? void 0 : userStatus.msg)))));\n  }) : \"\"))))), adminFormData ? /*#__PURE__*/react.createElement(Usersold_AdminFundForm, {\n    userId: adminFormData,\n    closeAdminFundForm: closeAdminFundPopUpHandler,\n    setStatusMsg: setStatusMsg,\n    successCallBack: fetchUsersData\n  }) : \"\", isPopupVisible ? /*#__PURE__*/react.createElement(Usersold_AddUserForm, {\n    closePopUpHandler: closePopUpHandler,\n    fetchUsersData: fetchUsersData,\n    props: props,\n    editUserData: editUserData,\n    userToBeEdit: userToBeEdit,\n    showPhoneNumberField: showPhoneNumberField\n  }) : \"\", transationPopupVisible ? /*#__PURE__*/react.createElement(Usersold_WalletDetails, {\n    userWallet: userTransactionDetails,\n    closeTransactionHandler: closeTransactionHandler\n  }) : \"\", permissionData.isPopupVisible ? /*#__PURE__*/react.createElement(Usersold_PermissionForm, {\n    closePopUpHandler: closePermissionPopup,\n    userId: permissionData.userId\n  }) : \"\");\n};\nvar mapStateToProps = function mapStateToProps(state) {\n  return Users_objectSpread({}, state);\n};\n/* harmony default export */ const Usersold_Users = ((0,es/* connect */.$j)(mapStateToProps)(Users));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzA2OTQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFtRDtBQUNUO0FBQ047QUFDZTtBQUN3QjtBQUMzRSxJQUFNUSxlQUFlLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDO0VBQ3BDQyxRQUFRLEVBQUUsRUFBRTtFQUNaQyxRQUFRLEVBQUUsRUFBRTtFQUNaQyxHQUFHLEVBQUUsWUFBWTtFQUNqQkMsS0FBSyxFQUFFLEVBQUU7RUFDVEMsU0FBUyxFQUFFLEVBQUU7RUFDYkMsUUFBUSxFQUFFLEVBQUU7RUFDWkMsT0FBTyxFQUFFLElBQUk7RUFDYkMsUUFBUSxFQUFFLEVBQUU7RUFDWkMsR0FBRyxFQUFFLEVBQUU7RUFDUEMsV0FBVyxFQUFFLEVBQUU7RUFDZkMsT0FBTyxFQUFFLEVBQUU7RUFDWEMsUUFBUSxFQUFFLEVBQUU7RUFDWkMsSUFBSSxFQUFFLEVBQUU7RUFDUkMsUUFBUSxFQUFFLENBQUM7RUFDWEMsUUFBUSxFQUFFO0FBQ1osQ0FBQyxDQUFDO0FBRUYsSUFBTUMsV0FBVyxHQUFHLFNBQWRBLFdBQVdBLENBQUlDLEtBQUssRUFBSztFQUM3QixJQUNFQyxZQUFZLEdBSVZELEtBQUssQ0FKUEMsWUFBWTtJQUNaQyxZQUFZLEdBR1ZGLEtBQUssQ0FIUEUsWUFBWTtJQUNaQyxpQkFBaUIsR0FFZkgsS0FBSyxDQUZQRyxpQkFBaUI7SUFDakJDLGNBQWMsR0FDWkosS0FBSyxDQURQSSxjQUFjO0VBRWhCLElBQUFDLFNBQUEsR0FBbUMvQixrQkFBUSxDQUFDTyxlQUFlLENBQUM7SUFBQXlCLFVBQUEsR0FBQUMsY0FBQSxDQUFBRixTQUFBO0lBQXJERyxRQUFRLEdBQUFGLFVBQUE7SUFBRUcsY0FBYyxHQUFBSCxVQUFBO0VBQy9CLElBQUFJLFVBQUEsR0FBMkNwQyxrQkFBUSxDQUFDTyxlQUFlLENBQUM7SUFBQThCLFVBQUEsR0FBQUosY0FBQSxDQUFBRyxVQUFBO0lBQTdERSxZQUFZLEdBQUFELFVBQUE7SUFBRUUsa0JBQWtCLEdBQUFGLFVBQUE7RUFDdkMsSUFBQUcsVUFBQSxHQUE4QnhDLGtCQUFRLENBQUMsRUFBRSxDQUFDO0lBQUF5QyxVQUFBLEdBQUFSLGNBQUEsQ0FBQU8sVUFBQTtJQUFuQ0UsTUFBTSxHQUFBRCxVQUFBO0lBQUVFLFdBQVcsR0FBQUYsVUFBQTtFQUMxQixJQUFBRyxVQUFBLEdBQWlDNUMsa0JBQVEsQ0FBQyxFQUFFLENBQUM7SUFBQTZDLFVBQUEsR0FBQVosY0FBQSxDQUFBVyxVQUFBO0lBQXRDRSxPQUFPLEdBQUFELFVBQUE7SUFBRUUsYUFBYSxHQUFBRixVQUFBO0VBRTdCNUMsbUJBQVMsQ0FBQyxZQUFNO0lBQ2QsSUFBSTBCLFlBQVksRUFBRTtNQUNoQlEsY0FBYyxDQUFBYSxhQUFBLEtBQ1RyQixZQUFZLEVBQ2Y7SUFDSjtFQUNGLENBQUMsRUFBRSxDQUFDQSxZQUFZLENBQUMsQ0FBQztFQUVsQixJQUFNc0IsWUFBWSxHQUFHLFNBQWZBLFlBQVlBLENBQUlDLEtBQUssRUFBSztJQUM5QmYsY0FBYyxDQUFBYSxhQUFBLENBQUFBLGFBQUEsS0FDVGQsUUFBUSxPQUFBaUIsZUFBQSxLQUNWRCxLQUFLLENBQUNFLE1BQU0sQ0FBQ0MsSUFBSSxFQUFHSCxLQUFLLENBQUNFLE1BQU0sQ0FBQ0UsS0FBSyxHQUN2QztFQUNKLENBQUM7RUFFRCxJQUFNQyxVQUFVLEdBQUcsU0FBYkEsVUFBVUEsQ0FBQSxFQUFTO0lBQ3ZCLElBQU1DLEdBQUcsR0FBRyxJQUFJdEQsc0JBQU8sQ0FBQyxFQUFFLEVBQUV1RCxjQUFjLEVBQUVDLFlBQVksRUFBRSxLQUFLLENBQUM7SUFDaEUsT0FBT0YsR0FBRyxDQUFDRyxJQUFJLElBQUFDLE1BQUEsQ0FBSXpELGlEQUFtQixFQUFBeUQsTUFBQSxDQUFHekQscURBQXFCLEdBQUkrQixRQUFRLENBQUM7RUFDN0UsQ0FBQztFQUVELElBQU13QixZQUFZLEdBQUcsU0FBZkEsWUFBWUEsQ0FBSU8sS0FBSyxFQUFLO0lBQzlCO0lBQ0EsSUFBTXZCLE1BQU0sR0FBRyxFQUFFO0lBQ2pCLElBQUl1QixLQUFLLElBQUlBLEtBQUssQ0FBQ0MsTUFBTSxJQUFJLEdBQUcsRUFBRTtNQUNoQyxJQUFJRCxLQUFLLENBQUNFLFdBQVcsSUFBSUYsS0FBSyxDQUFDRSxXQUFXLFlBQVlDLEtBQUssRUFBRTtRQUMzREgsS0FBSyxDQUFDRSxXQUFXLENBQUNFLE9BQU8sQ0FBQyxVQUFDQyxJQUFJO1VBQUEsT0FDN0I1QixNQUFNLENBQUM2QixJQUFJLElBQUFYLE1BQUEsQ0FBSVUsSUFBSSxDQUFDRSxLQUFLLFFBQUFaLE1BQUEsQ0FBS1UsSUFBSSxDQUFDRyxPQUFPLEVBQUc7UUFBQSxFQUM5QztNQUNIO01BQ0EsSUFBSS9CLE1BQU0sQ0FBQ2dDLE1BQU0sR0FBRyxDQUFDLEVBQUU7UUFDckIvQixXQUFXLENBQUNELE1BQU0sQ0FBQztRQUNuQmlDLE1BQU0sQ0FBQ0MsUUFBUSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUM7TUFDM0I7SUFDRixDQUFDLE1BQU0sSUFBSVgsS0FBSyxJQUFJQSxLQUFLLENBQUNDLE1BQU0sSUFBSSxHQUFHLEVBQUU7TUFDdkN2QixXQUFXLENBQUMsQ0FBQ3NCLEtBQUssQ0FBQ0EsS0FBSyxDQUFDLENBQUM7TUFDMUJVLE1BQU0sQ0FBQ0MsUUFBUSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUM7SUFDM0I7RUFDRixDQUFDO0VBRUQsSUFBTW5CLGNBQWMsR0FBRyxTQUFqQkEsY0FBY0EsQ0FBSW9CLElBQUksRUFBSztJQUMvQixJQUFJLENBQUNBLElBQUksQ0FBQy9CLE9BQU8sRUFBRTtNQUNqQkgsV0FBVyxDQUFDLENBQUNrQyxJQUFJLENBQUNDLEdBQUcsQ0FBQyxDQUFDO0lBQ3pCLENBQUMsTUFBTTtNQUNMbkMsV0FBVyxDQUFDLEVBQUUsQ0FBQztNQUNmSSxhQUFhLENBQUM4QixJQUFJLENBQUNDLEdBQUcsQ0FBQztNQUN2QmpELGlCQUFpQixFQUFFO01BQ25CekIsZ0NBQWEsRUFBRTtNQUNmMEIsY0FBYyxFQUFFO0lBQ2xCO0VBQ0YsQ0FBQztFQUVELElBQU1pRCxpQkFBaUIsR0FBRyxTQUFwQkEsaUJBQWlCQSxDQUFJN0IsS0FBSyxFQUFLO0lBQ25DQSxLQUFLLENBQUM4QixjQUFjLEVBQUU7SUFFdEIsSUFBSXJELFlBQVksRUFBRTtNQUNoQjRCLFVBQVUsRUFBRTtJQUNkO0lBRUFyQixRQUFRLENBQUNWLFFBQVEsR0FBR1UsUUFBUSxDQUFDZixXQUFXOztJQUV4Qzs7SUFFQSxJQUFNcUMsR0FBRyxHQUFHLElBQUl0RCxzQkFBTyxDQUFDLEVBQUUsRUFBRXVELGNBQWMsRUFBRUMsWUFBWSxFQUFFLEtBQUssQ0FBQztJQUNoRSxPQUFPRixHQUFHLENBQUNHLElBQUksQ0FBQ3hELGlEQUFtQixHQUFHQSw2REFBeUIsRUFBRStCLFFBQVEsQ0FBQztFQUM1RSxDQUFDO0VBRUQsSUFBSWdELFNBQVMsR0FBRyxFQUFFO0VBQ2xCLElBQUlDLFdBQVcsR0FBRyxFQUFFO0VBQ3BCLElBQUlDLGFBQWEsR0FBRyxFQUFFO0VBQ3RCLElBQUkxQyxNQUFNLENBQUNnQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO0lBQ3JCUSxTQUFTLEdBQUd4QyxNQUFNLENBQUMyQyxHQUFHLENBQUMsVUFBQ0MsR0FBRztNQUFBLG9CQUFLdkYsbUJBQUE7UUFBSXlGLEdBQUcsRUFBRUY7TUFBSSxHQUFFQSxHQUFHLENBQU07SUFBQSxFQUFDO0lBQ3pESCxXQUFXLEdBQUc7TUFDWk0sS0FBSyxFQUFFLEtBQUs7TUFDWkMsUUFBUSxFQUFFLE1BQU07TUFDaEJDLFNBQVMsRUFBRTtJQUNiLENBQUM7RUFDSCxDQUFDLE1BQU07SUFDTFAsYUFBYSxHQUFHO01BQ2RLLEtBQUssRUFBRSxPQUFPO01BQ2RDLFFBQVEsRUFBRSxNQUFNO01BQ2hCQyxTQUFTLEVBQUU7SUFDYixDQUFDO0VBQ0g7RUFFQUMsT0FBTyxDQUFDQyxHQUFHLENBQUMsY0FBYyxFQUFFbEUsWUFBWSxDQUFDO0VBRXpDLG9CQUNFNUIsbUJBQUEsQ0FBQ08sb0NBQVkscUJBQ1hQLG1CQUFBO0lBQUsrRixTQUFTLEVBQUM7RUFBYyxnQkFDM0IvRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQWUsZ0JBQzVCL0YsbUJBQUE7SUFBSytGLFNBQVMsRUFBQztFQUFjLGdCQUMzQi9GLG1CQUFBO0lBQUkrRixTQUFTLEVBQUM7RUFBYSxHQUFDLFVBQVEsQ0FBSyxlQUN6Qy9GLG1CQUFBO0lBQ0VnRyxJQUFJLEVBQUMsUUFBUTtJQUNiRCxTQUFTLEVBQUMsaUJBQWlCO0lBQzNCRSxPQUFPLEVBQUVuRTtFQUFrQixnQkFFM0I5QixtQkFBQTtJQUFNLGVBQVk7RUFBTSxnQkFBQ0EsbUJBQUE7SUFBRytGLFNBQVMsRUFBQyxhQUFhO0lBQUMsZUFBWTtFQUFNLEVBQUssWUFBUSxDQUFPLENBQ25GLENBQ0wsZUFDTi9GLG1CQUFBO0lBQUsrRixTQUFTLEVBQUM7RUFBWSxnQkFDekIvRixtQkFBQTtJQUFNa0csUUFBUSxFQUFFbEI7RUFBa0IsZ0JBQ2hDaEYsbUJBQUE7SUFBSytGLFNBQVMsRUFBQztFQUFvQixnQkFDakMvRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQU8sZ0JBQ3BCL0YsbUJBQUE7SUFBSytGLFNBQVMsRUFBQztFQUFpQyxnQkFDOUMvRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQXNCLGdCQUVuQy9GLG1CQUFBO0lBQ0VnRyxJQUFJLEVBQUMsTUFBTTtJQUNYRCxTQUFTLEVBQUU1RCxRQUFRLElBQUlBLFFBQVEsQ0FBQ3BCLFNBQVMsS0FBSyxFQUFFLEdBQUcsd0JBQXdCLEdBQUcsY0FBZTtJQUM3RnVDLElBQUksRUFBQyxXQUFXO0lBQ2hCQyxLQUFLLEVBQUVwQixRQUFRLElBQUlBLFFBQVEsQ0FBQ3BCLFNBQVU7SUFDdENvRixRQUFRLEVBQUVqRDtFQUFhLEVBQ3ZCLGVBQ0ZsRCxtQkFBQTtJQUFPK0YsU0FBUyxFQUFDLE9BQU87SUFBQyxPQUFJO0VBQW9CLEdBQUMsWUFBVSxDQUFRLENBQ2hFLENBQ0YsQ0FDRixlQUNOL0YsbUJBQUE7SUFBSytGLFNBQVMsRUFBQztFQUFPLGdCQUNwQi9GLG1CQUFBO0lBQUsrRixTQUFTLEVBQUM7RUFBaUMsZ0JBQzlDL0YsbUJBQUE7SUFBSytGLFNBQVMsRUFBQztFQUFzQixnQkFDbkMvRixtQkFBQTtJQUNFZ0csSUFBSSxFQUFDLE1BQU07SUFDWEQsU0FBUyxFQUFFNUQsUUFBUSxJQUFJQSxRQUFRLENBQUNqQixRQUFRLEtBQUssRUFBRSxHQUFHLHdCQUF3QixHQUFHLGNBQWU7SUFDNUZvQyxJQUFJLEVBQUMsVUFBVTtJQUNmQyxLQUFLLEVBQUVwQixRQUFRLElBQUlBLFFBQVEsQ0FBQ2pCLFFBQVM7SUFDckNpRixRQUFRLEVBQUVqRDtFQUFhLEVBQ3ZCLGVBQ0ZsRCxtQkFBQTtJQUFPK0YsU0FBUyxFQUFDLE9BQU87SUFBQyxPQUFJO0VBQW9CLEdBQUMsV0FBUyxDQUFRLENBQy9ELENBQ0YsQ0FDRixDQUNGLGVBQ04vRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQW9CLGdCQUNqQy9GLG1CQUFBO0lBQUsrRixTQUFTLEVBQUM7RUFBUSxnQkFDckIvRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQWlDLGdCQUM5Qy9GLG1CQUFBO0lBQUsrRixTQUFTLEVBQUM7RUFBc0IsZ0JBQ25DL0YsbUJBQUE7SUFDRWdHLElBQUksRUFBQyxPQUFPO0lBQ1pELFNBQVMsRUFBRTVELFFBQVEsSUFBSUEsUUFBUSxDQUFDckIsS0FBSyxLQUFLLEVBQUUsR0FBRyx3QkFBd0IsR0FBRyxjQUFlO0lBQ3pGd0MsSUFBSSxFQUFDLE9BQU87SUFDWkMsS0FBSyxFQUFFcEIsUUFBUSxJQUFJQSxRQUFRLENBQUNyQixLQUFNO0lBQ2xDc0YsUUFBUTtJQUNSRCxRQUFRLEVBQUVqRDtFQUFhLEVBQ3ZCLGVBQ0ZsRCxtQkFBQTtJQUFPK0YsU0FBUyxFQUFDLE9BQU87SUFBQyxPQUFJO0VBQW9CLEdBQUMsVUFBUSxDQUFRLENBQzlELENBQ0YsQ0FDRixDQUNGLGVBQ04vRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQW9CLGdCQUNqQy9GLG1CQUFBO0lBQUsrRixTQUFTLEVBQUM7RUFBTyxnQkFDcEIvRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQWlDLGdCQUM5Qy9GLG1CQUFBO0lBQUsrRixTQUFTLEVBQUM7RUFBc0IsZ0JBQ25DL0YsbUJBQUE7SUFDRWdHLElBQUksRUFBQyxNQUFNO0lBQ1hELFNBQVMsRUFBRTVELFFBQVEsQ0FBQ3RCLEdBQUcsS0FBSyxFQUFFLEdBQUcsd0JBQXdCLEdBQUcsY0FBZTtJQUMzRXlDLElBQUksRUFBQyxLQUFLO0lBQ1ZDLEtBQUssRUFBRXBCLFFBQVEsQ0FBQ3RCLEdBQUk7SUFDcEJ3RixHQUFHLEVBQUMsWUFBWTtJQUNoQkMsR0FBRyxFQUFDLFlBQVk7SUFDaEJILFFBQVEsRUFBRWpEO0VBQWEsRUFDdkIsZUFDRmxELG1CQUFBO0lBQU8rRixTQUFTLEVBQUMsT0FBTztJQUFDLE9BQUk7RUFBb0IsR0FBQyxLQUFHLENBQVEsQ0FDekQsQ0FDRixDQUNGLGVBQ04vRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQU8sZ0JBQ3BCL0YsbUJBQUE7SUFBSytGLFNBQVMsRUFBQztFQUFpQyxnQkFDOUMvRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQXNCLGdCQUNuQy9GLG1CQUFBO0lBQ0VnRyxJQUFJLEVBQUMsUUFBUTtJQUNiRCxTQUFTLEVBQUU1RCxRQUFRLElBQUlBLFFBQVEsQ0FBQ2YsV0FBVyxLQUFLLEVBQUUsR0FBRyx3QkFBd0IsR0FBRyxjQUFlO0lBQy9Ga0MsSUFBSSxFQUFDLGFBQWE7SUFDbEJDLEtBQUssRUFBRXBCLFFBQVEsSUFBSUEsUUFBUSxDQUFDZixXQUFZO0lBQ3hDZ0YsUUFBUTtJQUNSRCxRQUFRLEVBQUVqRDtFQUFhLEVBQ3ZCLGVBQ0ZsRCxtQkFBQTtJQUFPK0YsU0FBUyxFQUFDLE9BQU87SUFBQyxPQUFJO0VBQW9CLEdBQUMsUUFBTSxDQUFRLENBQzVELENBQ0YsQ0FDRixDQUNGLGVBQ04vRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQW9CLGdCQUNqQy9GLG1CQUFBO0lBQUsrRixTQUFTLEVBQUM7RUFBUSxnQkFDckIvRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQWlDLGdCQUM5Qy9GLG1CQUFBO0lBQUsrRixTQUFTLEVBQUM7RUFBc0IsZ0JBQ25DL0YsbUJBQUE7SUFDRWdHLElBQUksRUFBQyxNQUFNO0lBQ1hELFNBQVMsRUFBRTVELFFBQVEsSUFBSSxDQUFBQSxRQUFRLGFBQVJBLFFBQVEsdUJBQVJBLFFBQVEsQ0FBRXhCLFFBQVEsTUFBSyxFQUFFLEdBQUcsd0JBQXdCLEdBQUcsY0FBZTtJQUM3RjJDLElBQUksRUFBQyxVQUFVO0lBQ2ZDLEtBQUssRUFBRXBCLFFBQVEsSUFBSUEsUUFBUSxDQUFDeEIsUUFBUztJQUNyQ3lGLFFBQVE7SUFDUkQsUUFBUSxFQUFFakQ7RUFBYSxFQUN2QixlQUNGbEQsbUJBQUE7SUFBTytGLFNBQVMsRUFBQyxPQUFPO0lBQUMsT0FBSTtFQUFvQixHQUFDLFVBQVEsQ0FBUSxDQUM5RCxDQUNGLENBQ0YsQ0FDRixlQUNOL0YsbUJBQUE7SUFBSytGLFNBQVMsRUFBQztFQUFvQixnQkFDakMvRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQVEsZ0JBQ3JCL0YsbUJBQUE7SUFBSytGLFNBQVMsRUFBQztFQUFpQyxnQkFDOUMvRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQXNCLGdCQUNuQy9GLG1CQUFBO0lBQ0VnRyxJQUFJLEVBQUMsTUFBTTtJQUNYRCxTQUFTLEVBQUU1RCxRQUFRLElBQUksQ0FBQUEsUUFBUSxhQUFSQSxRQUFRLHVCQUFSQSxRQUFRLENBQUV2QixRQUFRLEtBQUksRUFBRSxHQUFHLHdCQUF3QixHQUFHLGNBQWU7SUFDNUYwQyxJQUFJLEVBQUMsVUFBVTtJQUNmQyxLQUFLLEVBQUVwQixRQUFRLElBQUlBLFFBQVEsQ0FBQ3ZCLFFBQVM7SUFDckN1RixRQUFRLEVBQUVqRDtFQUFhLEVBQ3ZCLGVBQ0ZsRCxtQkFBQTtJQUFPK0YsU0FBUyxFQUFDLE9BQU87SUFBQyxPQUFJO0VBQW9CLEdBQUMsVUFBUSxDQUFRLENBQzlELENBQ0YsQ0FDRixDQUNGLGVBQ04vRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQW9CLGdCQUNqQy9GLG1CQUFBO0lBQUsrRixTQUFTLEVBQUM7RUFBTyxnQkFDcEIvRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQWlDLGdCQUM5Qy9GLG1CQUFBO0lBQUsrRixTQUFTLEVBQUM7RUFBc0IsZ0JBQ25DL0YsbUJBQUE7SUFDRWdHLElBQUksRUFBQyxNQUFNO0lBQ1hELFNBQVMsRUFBRTVELFFBQVEsSUFBSSxDQUFBQSxRQUFRLGFBQVJBLFFBQVEsdUJBQVJBLFFBQVEsQ0FBRW5CLFFBQVEsTUFBSyxFQUFFLEdBQUcsd0JBQXdCLEdBQUcsY0FBZTtJQUM3RnNDLElBQUksRUFBQyxVQUFVO0lBQ2ZDLEtBQUssRUFBRXBCLFFBQVEsSUFBSUEsUUFBUSxDQUFDbkIsUUFBUztJQUNyQ21GLFFBQVEsRUFBRWpEO0VBQWEsRUFDdkIsZUFDRmxELG1CQUFBO0lBQU8rRixTQUFTLEVBQUMsT0FBTztJQUFDLE9BQUk7RUFBb0IsR0FBQyxXQUFTLENBQVEsQ0FDL0QsQ0FDRixDQUNGLGVBQ04vRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQU8sZ0JBQ3BCL0YsbUJBQUE7SUFBSytGLFNBQVMsRUFBQztFQUFpQyxnQkFDOUMvRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQXNCLGdCQUNuQy9GLG1CQUFBO0lBQ0VnRyxJQUFJLEVBQUMsUUFBUTtJQUNiRCxTQUFTLEVBQUU1RCxRQUFRLElBQUksQ0FBQUEsUUFBUSxhQUFSQSxRQUFRLHVCQUFSQSxRQUFRLENBQUVkLE9BQU8sTUFBSyxFQUFFLEdBQUcsd0JBQXdCLEdBQUcsY0FBZTtJQUM1RmlDLElBQUksRUFBQyxTQUFTO0lBQ2RDLEtBQUssRUFBRXBCLFFBQVEsSUFBSUEsUUFBUSxDQUFDZCxPQUFRO0lBQ3BDK0UsUUFBUTtJQUNSRCxRQUFRLEVBQUVqRDtFQUFhLEVBQ3ZCLGVBQ0ZsRCxtQkFBQTtJQUFPK0YsU0FBUyxFQUFDLE9BQU87SUFBQyxPQUFJO0VBQW9CLEdBQUMsVUFBUSxDQUFRLENBQzlELENBQ0YsQ0FDRixDQUNGLGVBQ04vRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQW9CLGdCQUNqQy9GLG1CQUFBO0lBQUsrRixTQUFTLEVBQUM7RUFBUSxnQkFDckIvRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQWlDLGdCQUM5Qy9GLG1CQUFBO0lBQUsrRixTQUFTLEVBQUM7RUFBc0IsZ0JBQ25DL0YsbUJBQUE7SUFDRStGLFNBQVMsRUFBRW5FLFlBQVksSUFBSUEsWUFBWSxDQUFDTCxJQUFJLEtBQUssRUFBRSxHQUFHLHdCQUF3QixHQUFHLGNBQWU7SUFDaEcrQixJQUFJLEVBQUMsTUFBTTtJQUNYOEMsUUFBUTtJQUNSRCxRQUFRLEVBQUVqRDtFQUFhLGdCQUV2QmxELG1CQUFBO0lBQVF1RCxLQUFLLEVBQUM7RUFBRSxHQUFDLGFBQVcsQ0FBUyxlQUNyQ3ZELG1CQUFBO0lBQ0V1RCxLQUFLLEVBQUMsWUFBWTtJQUNsQmdELFFBQVEsRUFDTjNFLFlBQVksSUFBSUEsWUFBWSxDQUFDTCxJQUFJLElBQUksWUFBWSxHQUM3QyxJQUFJLEdBQ0o7RUFDTCxHQUNGLFFBRUQsQ0FBUyxlQUNUdkIsbUJBQUE7SUFDRXVELEtBQUssRUFBQyxlQUFlO0lBQ3JCZ0QsUUFBUSxFQUNOM0UsWUFBWSxJQUFJQSxZQUFZLENBQUNMLElBQUksSUFBSSxlQUFlLEdBQ2hELElBQUksR0FDSjtFQUNMLEdBQ0YsV0FFRCxDQUFTLENBQ0YsZUFDVHZCLG1CQUFBO0lBQU8rRixTQUFTLEVBQUMsT0FBTztJQUFDLE9BQUk7RUFBMkIsR0FBQyxXQUFTLENBQVEsQ0FDdEUsQ0FDRixDQUNGLENBQ0YsZUFDTi9GLG1CQUFBO0lBQUsrRixTQUFTLEVBQUM7RUFBdUMsZ0JBQ3BEL0YsbUJBQUEsQ0FBQ00sOEJBQU07SUFBQzBGLElBQUksRUFBQyxRQUFRO0lBQUNELFNBQVMsRUFBQztFQUFtQixHQUNoRG5FLFlBQVksR0FBRyxhQUFhLEdBQUcsV0FBVyxDQUNwQyxDQUNMLENBQ0QsQ0FDSCxDQUNGLENBQ0YsQ0FDTztBQUVuQixDQUFDO0FBRUQsMkRBQWVGLFdBQVcsRUFBQzs7QUFJM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxvQjs7Ozs7Ozs7Ozs7Ozs7Ozs7QUM5V21EO0FBQ1Q7QUFDTjtBQUNjO0FBQ3hCO0FBQ2lEO0FBRTNFLElBQU1nRixjQUFjLEdBQUcsU0FBakJBLGNBQWNBLENBQUkvRSxLQUFLLEVBQUs7RUFDaEMsSUFBUWdGLE1BQU0sR0FBd0JoRixLQUFLLENBQW5DZ0YsTUFBTTtJQUFFN0UsaUJBQWlCLEdBQUtILEtBQUssQ0FBM0JHLGlCQUFpQjtFQUNqQyxJQUFBRSxTQUFBLEdBQXNDL0Isa0JBQVEsQ0FBQyxFQUFFLENBQUM7SUFBQWdDLFVBQUEsR0FBQUMsNEJBQUEsQ0FBQUYsU0FBQTtJQUEzQzRFLFdBQVcsR0FBQTNFLFVBQUE7SUFBRTRFLGNBQWMsR0FBQTVFLFVBQUE7RUFDbEMsSUFBQUksVUFBQSxHQUE4QnBDLGtCQUFRLENBQUM7TUFBRWlFLEtBQUssRUFBRSxFQUFFO01BQUVuQixPQUFPLEVBQUU7SUFBRyxDQUFDLENBQUM7SUFBQVQsVUFBQSxHQUFBSiw0QkFBQSxDQUFBRyxVQUFBO0lBQTNEcUMsT0FBTyxHQUFBcEMsVUFBQTtJQUFFd0UsVUFBVSxHQUFBeEUsVUFBQTtFQUUxQixJQUFNeUUsZ0JBQWdCLEdBQUcsU0FBbkJBLGdCQUFnQkEsQ0FBQSxFQUFTO0lBQzdCLElBQU1yRCxjQUFjLEdBQUcsU0FBakJBLGNBQWNBLENBQUlzRCxHQUFHLEVBQUs7TUFDOUI7TUFDQSxJQUFJQSxHQUFHLEVBQUU7UUFDUEgsY0FBYyxDQUFDRyxHQUFHLENBQUM7UUFDbkI1RSxjQUFjLENBQUM0RSxHQUFHLENBQUNDLGlCQUFpQixDQUFDO01BQ3ZDO0lBQ0YsQ0FBQztJQUVELElBQU1DLE9BQU8sR0FBRztNQUNkQyxPQUFPLEVBQUU7UUFDUEMsYUFBYSxFQUFFWiwrQkFBWSxFQUFFO1FBQzdCLG1CQUFtQixFQUFFQSwrQkFBWSxDQUFDLG1CQUFtQjtNQUN2RDtJQUNGLENBQUM7SUFFRCxJQUFNYSxRQUFRLEdBQUdaLG1CQUNYLElBQUE1QyxNQUFBLENBQUl6RCxpREFBbUIsRUFBQXlELE1BQUEsQ0FBR3pELHlFQUErQixHQUFJOEcsT0FBTyxDQUFDLFNBQ25FLENBQUM7TUFBQSxPQUFNLEVBQUU7SUFBQSxFQUFDO0lBRWxCLElBQU1NLFFBQVEsR0FBR2YsbUJBQ1gsSUFBQTVDLE1BQUEsQ0FDQ3pELGlEQUFtQixFQUFBeUQsTUFBQSxDQUFHekQsNkVBQWlDLGdCQUFBeUQsTUFBQSxDQUFhOEMsTUFBTSxHQUM3RU8sT0FBTyxDQUNSLFNBQ0ssQ0FBQztNQUFBLE9BQU0sRUFBRTtJQUFBLEVBQUM7SUFFbEJULG1CQUNNLENBQUMsQ0FBQ1ksUUFBUSxFQUFFRyxRQUFRLENBQUMsQ0FBQyxDQUN6QkcsSUFBSSxDQUNIbEIsc0JBQVksQ0FBQyxZQUFrQjtNQUFBLFNBQUFvQixJQUFBLEdBQUFDLFNBQUEsQ0FBQW5ELE1BQUEsRUFBZG9ELFNBQVMsT0FBQTFELEtBQUEsQ0FBQXdELElBQUEsR0FBQUcsSUFBQSxNQUFBQSxJQUFBLEdBQUFILElBQUEsRUFBQUcsSUFBQTtRQUFURCxTQUFTLENBQUFDLElBQUEsSUFBQUYsU0FBQSxDQUFBRSxJQUFBO01BQUE7TUFDeEIsSUFBTUMsY0FBYyxHQUFHRixTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUlBLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQ2pELElBQUksQ0FBQ0EsSUFBSTtNQUM3RCxJQUFNbUMsaUJBQWlCLEdBQUdjLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSUEsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDakQsSUFBSSxDQUFDQSxJQUFJO01BRWhFcEIsY0FBYyxDQUFDO1FBQ2J1RSxjQUFjLEVBQUVBLGNBQWM7UUFDOUJoQixpQkFBaUIsRUFBRUE7TUFDckIsQ0FBQyxDQUFDO0lBQ0osQ0FBQyxDQUFDLENBQ0gsU0FDSyxDQUFDLFVBQUN0RSxNQUFNLEVBQUs7TUFDakJrRCxPQUFPLENBQUNDLEdBQUcsQ0FBQyxvQkFBb0IsRUFBRW5ELE1BQU0sQ0FBQztJQUMzQyxDQUFDLENBQUM7RUFDTixDQUFDO0VBRUR6QyxtQkFBUyxDQUFDLFlBQU07SUFDZDZHLGdCQUFnQixFQUFFO0VBQ3BCLENBQUMsRUFBRSxFQUFFLENBQUM7RUFFTixJQUFNbUIsV0FBVyxHQUFHLFNBQWRBLFdBQVdBLENBQUkvRSxLQUFLLEVBQUVnRixPQUFPLEVBQUs7SUFDdEM7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBOztJQUVBLElBQU1DLHFCQUFxQixHQUFHQyxJQUFJLENBQUNDLEtBQUssQ0FBQ0QsSUFBSSxDQUFDRSxTQUFTLENBQUN0QixpQkFBaUIsQ0FBQyxDQUFDO0lBQzNFLElBQUk5RCxLQUFLLENBQUNFLE1BQU0sQ0FBQ21GLE9BQU8sRUFBRTtNQUN4QixJQUFJSixxQkFBcUIsQ0FBQ0QsT0FBTyxDQUFDLEVBQUU7UUFDbENDLHFCQUFxQixDQUFDRCxPQUFPLENBQUMsQ0FBQzNELElBQUksQ0FBQ3JCLEtBQUssQ0FBQ0UsTUFBTSxDQUFDQyxJQUFJLENBQUM7TUFDeEQsQ0FBQyxNQUFNO1FBQ0w4RSxxQkFBcUIsQ0FBQ0QsT0FBTyxDQUFDLEdBQUcsQ0FBQ2hGLEtBQUssQ0FBQ0UsTUFBTSxDQUFDQyxJQUFJLENBQUM7TUFDdEQ7SUFDRixDQUFDLE1BQU07TUFDTCxJQUFNbUYsYUFBYSxHQUFHTCxxQkFBcUIsQ0FBQ0QsT0FBTyxDQUFDLENBQUNPLE1BQU0sQ0FDekQsVUFBQ25FLElBQUk7UUFBQSxPQUFLQSxJQUFJLElBQUlwQixLQUFLLENBQUNFLE1BQU0sQ0FBQ0MsSUFBSTtNQUFBLEVBQ3BDO01BRUQ4RSxxQkFBcUIsQ0FBQ0QsT0FBTyxDQUFDLEdBQUdNLGFBQWE7SUFDaEQ7SUFDQTVCLGNBQWMsQ0FBQTVELDJCQUFBLENBQUFBLDJCQUFBLEtBQ1QyRCxXQUFXO01BQ2RLLGlCQUFpQixFQUFFbUI7SUFBcUIsR0FDeEM7RUFDSixDQUFDO0VBRUQsSUFBTXBELGlCQUFpQixHQUFHLFNBQXBCQSxpQkFBaUJBLENBQUk3QixLQUFLLEVBQUs7SUFDbkNBLEtBQUssQ0FBQzhCLGNBQWMsRUFBRTtJQUN0QixJQUFRZ0MsaUJBQWlCLEdBQUtMLFdBQVcsQ0FBakNLLGlCQUFpQjtJQUV6QnBCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLG1CQUFtQixFQUFFbUIsaUJBQWlCLENBQUM7SUFFbkQsSUFBSTBCLGNBQWMsR0FBRyxFQUFFO0lBRXZCbEksTUFBTSxDQUFDbUksSUFBSSxDQUFDM0IsaUJBQWlCLENBQUMsQ0FBQzNDLE9BQU8sQ0FBQyxVQUFDbUIsR0FBRyxFQUFLO01BQzlDa0QsY0FBYyxHQUFHQSxjQUFjLENBQUM5RSxNQUFNLENBQUNvRCxpQkFBaUIsQ0FBQ3hCLEdBQUcsQ0FBQyxDQUFDO0lBQ2hFLENBQUMsQ0FBQztJQUVGSSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRTZDLGNBQWMsQ0FBQztJQUM3QyxJQUFNeEcsUUFBUSxHQUFHO01BQ2ZWLFFBQVEsRUFBRWtGLE1BQU07TUFDaEJrQyxVQUFVLEVBQUVGO0lBQ2QsQ0FBQztJQUVELElBQU1HLGFBQWEsR0FBRyxTQUFoQkEsYUFBYUEsQ0FBSTlCLEdBQUcsRUFBSztNQUM3QixJQUFJQSxHQUFHLENBQUNqRSxPQUFPLEVBQUU7UUFDZitELFVBQVUsQ0FBQztVQUFFL0QsT0FBTyxFQUFFaUUsR0FBRyxDQUFDakMsR0FBRztVQUFFYixLQUFLLEVBQUU7UUFBRyxDQUFDLENBQUM7TUFDN0MsQ0FBQyxNQUFNO1FBQ0w0QyxVQUFVLENBQUM7VUFBRTVDLEtBQUssRUFBRThDLEdBQUcsQ0FBQ2pDLEdBQUc7VUFBRWhDLE9BQU8sRUFBRTtRQUFHLENBQUMsQ0FBQztNQUM3QztJQUNGLENBQUM7SUFDRCxJQUFNZ0csV0FBVyxHQUFHLFNBQWRBLFdBQVdBLENBQUkvQixHQUFHLEVBQUs7TUFDM0JGLFVBQVUsQ0FBQztRQUFFNUMsS0FBSyxFQUFFOEMsR0FBRyxDQUFDakMsR0FBRztRQUFFaEMsT0FBTyxFQUFFO01BQUcsQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFFRCxJQUFNVSxHQUFHLEdBQUcsSUFBSXRELHNCQUFPLENBQUMsRUFBRSxFQUFFMkksYUFBYSxFQUFFQyxXQUFXLEVBQUUsS0FBSyxDQUFDO0lBQzlELE9BQU90RixHQUFHLENBQUNHLElBQUksQ0FDYnhELGlEQUFtQixHQUFHQSw2RUFBaUMsRUFDdkQrQixRQUFRLENBQ1Q7RUFDSCxDQUFDO0VBRUQsSUFBUThGLGNBQWMsR0FBd0JyQixXQUFXLENBQWpEcUIsY0FBYztJQUFFaEIsaUJBQWlCLEdBQUtMLFdBQVcsQ0FBakNLLGlCQUFpQjtFQUN6Q3BCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGFBQWEsRUFBRW1CLGlCQUFpQixDQUFDO0VBRTdDLElBQU1uQyxJQUFJLEdBQUcsRUFBRTtFQUVmLElBQU1rRSxRQUFRLEdBQUdmLGNBQWMsR0FBR3hILE1BQU0sQ0FBQ21JLElBQUksQ0FBQ1gsY0FBYyxDQUFDLEdBQUcsRUFBRTtFQUVsRSxvQkFDRWpJLG1CQUFBLENBQUNPLG9DQUFZLHFCQUNYUCxtQkFBQTtJQUFLK0YsU0FBUyxFQUFDLGNBQWM7SUFBQ3hFLElBQUksRUFBQztFQUFVLGdCQUMzQ3ZCLG1CQUFBO0lBQUsrRixTQUFTLEVBQUM7RUFBZSxnQkFDNUIvRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQWMsZ0JBQzNCL0YsbUJBQUE7SUFBSStGLFNBQVMsRUFBQyxhQUFhO0lBQUNrRCxFQUFFLEVBQUM7RUFBbUIsR0FBQyxvQkFFbkQsQ0FBSyxlQUNMakosbUJBQUE7SUFDRWdHLElBQUksRUFBQyxRQUFRO0lBQ2JELFNBQVMsRUFBQyxpQkFBaUI7SUFDM0JFLE9BQU8sRUFBRW5FO0VBQWtCLGdCQUUzQjlCLG1CQUFBO0lBQU0sZUFBWTtFQUFNLGdCQUFDQSxtQkFBQTtJQUFHK0YsU0FBUyxFQUFDLGFBQWE7SUFBQyxlQUFZO0VBQU0sRUFBSyxZQUFRLENBQU8sQ0FDbkYsQ0FDTCxlQUVOL0YsbUJBQUE7SUFBSytGLFNBQVMsRUFBQztFQUFZLGdCQUN6Qi9GLG1CQUFBO0lBQU1rRyxRQUFRLEVBQUVsQjtFQUFrQixnQkFFaENoRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQU0sZ0JBQ25CL0YsbUJBQUE7SUFBSytGLFNBQVMsRUFBRXJCLE9BQU8sQ0FBQzNCLE9BQU8sR0FBRyxNQUFNLEdBQUc7RUFBTyxHQUMvQzJCLE9BQU8sQ0FBQzNCLE9BQU8sSUFBSTJCLE9BQU8sQ0FBQ1IsS0FBSyxDQUM3QixFQUNMOEUsUUFBUSxJQUFJM0UsS0FBSyxDQUFDNkUsT0FBTyxDQUFDRixRQUFRLENBQUMsR0FDbENBLFFBQVEsQ0FBQzFELEdBQUcsQ0FBQyxVQUFDNkMsT0FBTyxFQUFLO0lBQ3hCLG9CQUNFbkksbUJBQUEsQ0FBQUEsY0FBQSxxQkFDRUEsbUJBQUE7TUFBSStGLFNBQVMsRUFBQztJQUFLLEdBQUVvQyxPQUFPLENBQU0sZUFDbENuSSxtQkFBQTtNQUFJK0YsU0FBUyxFQUFDO0lBQU0sR0FDakJrQyxjQUFjLElBQ2JBLGNBQWMsQ0FBQ0UsT0FBTyxDQUFDLElBQ3ZCOUQsS0FBSyxDQUFDNkUsT0FBTyxDQUFDakIsY0FBYyxDQUFDRSxPQUFPLENBQUMsQ0FBQyxHQUNwQ0YsY0FBYyxDQUFDRSxPQUFPLENBQUMsQ0FBQzdDLEdBQUcsQ0FBQyxVQUFDZixJQUFJLEVBQUs7TUFDdEMsb0JBQ0V2RSxtQkFBQTtRQUFJK0YsU0FBUyxFQUFDO01BQUssZ0JBQ2pCL0YsbUJBQUE7UUFDRWdHLElBQUksRUFBQyxVQUFVO1FBQ2YxQyxJQUFJLEVBQUVpQixJQUFLO1FBQ1hpRSxPQUFPLEVBQ0x2QixpQkFBaUIsSUFDZkEsaUJBQWlCLENBQUNrQixPQUFPLENBQUMsSUFDMUJsQixpQkFBaUIsQ0FBQ2tCLE9BQU8sQ0FBQyxDQUFDaUIsUUFBUSxDQUNqQzdFLElBQUksQ0FDTCxHQUNDLElBQUksR0FDSixLQUNMO1FBQ0QwQixPQUFPLEVBQUUsU0FBQUEsUUFBQzlDLEtBQUs7VUFBQSxPQUNiK0UsV0FBVyxDQUFDL0UsS0FBSyxFQUFFZ0YsT0FBTyxDQUFDO1FBQUEsQ0FDNUI7UUFDRGtCLEtBQUssRUFBRTtVQUFFQyxXQUFXLEVBQUU7UUFBTztNQUFFLEVBQy9CLEVBQ0QvRSxJQUFJLENBQ0ZnRixPQUFPLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUNsQkEsT0FBTyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FDbkI7SUFFVCxDQUFDLENBQUMsR0FDQSxFQUFFLENBQ0gsQ0FDSjtFQUVQLENBQUMsQ0FBQyxnQkFFRnZKLG1CQUFBO0lBQ0VxSixLQUFLLEVBQUU7TUFDTEcsTUFBTSxFQUFFLGlCQUFpQjtNQUN6QjdELFFBQVEsRUFBRSxNQUFNO01BQ2hCOEQsU0FBUyxFQUFFLFFBQVE7TUFDbkIvRCxLQUFLLEVBQUU7SUFDVDtFQUFFLEdBQ0gsYUFFRCxDQUNELENBQ0csZUFDTjFGLG1CQUFBO0lBQUsrRixTQUFTLEVBQUM7RUFBdUMsZ0JBQ3BEL0YsbUJBQUEsQ0FBQ00sOEJBQU07SUFBQzBGLElBQUksRUFBQyxRQUFRO0lBQUNELFNBQVMsRUFBQztFQUFtQixHQUFDLG9CQUVwRCxDQUFTLENBQ0wsQ0FDRCxDQUNILENBQ0YsQ0FDRixDQUNPO0FBRW5CLENBQUM7QUFFRCw4REFBZVcsY0FBYyxFOzs7Ozs7Ozs7Ozs7OztBQzlObUI7QUFDWjtBQUNNO0FBQ2lDO0FBRTNFLFNBQVNrRCxhQUFhQSxDQUFBQyxJQUFBLEVBS25CO0VBQUEsSUFKRGxELE1BQU0sR0FBQWtELElBQUEsQ0FBTmxELE1BQU07SUFDTm1ELGtCQUFrQixHQUFBRCxJQUFBLENBQWxCQyxrQkFBa0I7SUFDbEJDLFlBQVksR0FBQUYsSUFBQSxDQUFaRSxZQUFZO0lBQ1pDLGVBQWUsR0FBQUgsSUFBQSxDQUFmRyxlQUFlO0VBRWYsSUFBQWhJLFNBQUEsR0FBZ0MvQixrQkFBUSxDQUFDO01BQ3ZDZ0ssTUFBTSxFQUFFLEVBQUU7TUFDVkMsTUFBTSxFQUFFLEVBQUU7TUFDVkMsV0FBVyxFQUFFLGFBQWE7TUFDMUJ4RCxNQUFNLEVBQUVBO0lBQ1YsQ0FBQyxDQUFDO0lBQUExRSxVQUFBLEdBQUFDLDJCQUFBLENBQUFGLFNBQUE7SUFMS0csUUFBUSxHQUFBRixVQUFBO0lBQUVtSSxXQUFXLEdBQUFuSSxVQUFBO0VBTTVCLElBQU1vSSxZQUFZLEdBQUdYLGdCQUFNLEVBQUU7RUFFN0IsSUFBTTFFLGlCQUFpQixHQUFHLFNBQXBCQSxpQkFBaUJBLENBQUk3QixLQUFLLEVBQUs7SUFDbkNBLEtBQUssQ0FBQzhCLGNBQWMsRUFBRTtJQUN0QixJQUFNcUYsWUFBWSxHQUFHRCxZQUFZLENBQUNFLE9BQU8sQ0FBQ2hILEtBQUs7SUFDL0MsSUFBTWlILE9BQU8sR0FBRyxJQUFJckssc0JBQU8sQ0FBQyxFQUFFLEVBQUV1RCxjQUFjLEVBQUVDLFlBQVksRUFBRSxJQUFJLENBQUM7SUFDbkUsSUFBSThHLFNBQVMsR0FBRyxHQUFBNUcsTUFBQSxDQUFHOEYsaURBQW1CLEVBQUE5RixNQUFBLENBQUc4Riw2REFBeUIsRUFBR0osT0FBTyxDQUMxRSxjQUFjLEVBQ2RlLFlBQVksQ0FDYjtJQUVEbkksUUFBUSxDQUFDOEgsTUFBTSxHQUFHVyxRQUFRLENBQUN6SSxRQUFRLENBQUM4SCxNQUFNLENBQUM7SUFDM0NPLE9BQU8sQ0FBQzVHLElBQUksQ0FBQzZHLFNBQVMsRUFBRXRJLFFBQVEsQ0FBQztFQUNuQyxDQUFDO0VBQ0QsSUFBTXVCLGNBQWMsR0FBRyxTQUFqQkEsY0FBY0EsQ0FBSW1ILFFBQVEsRUFBRTFELE9BQU8sRUFBSztJQUM1QyxJQUFJMEQsUUFBUSxDQUFDOUgsT0FBTyxFQUFFO01BQ3BCK0csa0JBQWtCLEVBQUU7TUFDcEJFLGVBQWUsRUFBRTtNQUNqQkQsWUFBWSxDQUFDLDRDQUE0QyxDQUFDO0lBQzVEO0VBQ0YsQ0FBQztFQUVELElBQU1wRyxZQUFZLEdBQUcsU0FBZkEsWUFBWUEsQ0FBSU8sS0FBSyxFQUFLO0lBQzlCMkIsT0FBTyxDQUFDQyxHQUFHLENBQUMsYUFBYSxDQUFDO0VBQzVCLENBQUM7RUFFRCxJQUFNNUMsWUFBWSxHQUFHLFNBQWZBLFlBQVlBLENBQUlDLEtBQUssRUFBSztJQUM5QmlILFdBQVcsQ0FBQyxVQUFDVSxTQUFTLEVBQUs7TUFDekIsT0FBQTdILDBCQUFBLENBQUFBLDBCQUFBLEtBQ0s2SCxTQUFTLE9BQUExSCw0QkFBQSxLQUNYRCxLQUFLLENBQUNFLE1BQU0sQ0FBQ0MsSUFBSSxFQUFHSCxLQUFLLENBQUNFLE1BQU0sQ0FBQ0UsS0FBSztJQUUzQyxDQUFDLENBQUM7RUFDSixDQUFDO0VBRURzQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxVQUFVLEVBQUUzRCxRQUFRLENBQUM7RUFFakMsb0JBQ0VuQyxtQkFBQSxDQUFDTyxvQ0FBWSxxQkFDWFAsbUJBQUE7SUFBSytGLFNBQVMsRUFBQyxjQUFjO0lBQUN4RSxJQUFJLEVBQUM7RUFBVSxnQkFDM0N2QixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQWUsZ0JBQzVCL0YsbUJBQUE7SUFBSytGLFNBQVMsRUFBQztFQUFjLGdCQUMzQi9GLG1CQUFBO0lBQUkrRixTQUFTLEVBQUM7RUFBYSxHQUFDLFVBRTVCLENBQUssZUFDTC9GLG1CQUFBO0lBQ0VnRyxJQUFJLEVBQUMsUUFBUTtJQUNiRCxTQUFTLEVBQUMsaUJBQWlCO0lBQzNCRSxPQUFPLEVBQUU2RDtFQUFtQixnQkFFNUI5SixtQkFBQTtJQUFNLGVBQVk7RUFBTSxnQkFBQ0EsbUJBQUE7SUFBRytGLFNBQVMsRUFBQyxhQUFhO0lBQUMsZUFBWTtFQUFNLEVBQUssWUFBUSxDQUFPLENBQ25GLENBQ0wsZUFFTi9GLG1CQUFBO0lBQUsrRixTQUFTLEVBQUM7RUFBWSxnQkFDekIvRixtQkFBQTtJQUFNa0csUUFBUSxFQUFFLFNBQUFBLFNBQUMvQyxLQUFLO01BQUEsT0FBSzZCLGlCQUFpQixDQUFDN0IsS0FBSyxDQUFDO0lBQUE7RUFBQyxnQkFDbERuRCxtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQUUsZ0JBQ2YvRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQWlDLGdCQUM5Qy9GLG1CQUFBO0lBQUsrRixTQUFTLEVBQUM7RUFBeUMsZ0JBRXREL0YsbUJBQUE7SUFDRW9HLFFBQVE7SUFDUkosSUFBSSxFQUFDLFFBQVE7SUFDYkQsU0FBUyxFQUFDLGNBQWM7SUFDeEJ6QyxJQUFJLEVBQUMsUUFBUTtJQUNiNkMsUUFBUSxFQUFFakQ7RUFBYSxFQUN2QixlQUNGbEQsbUJBQUE7SUFBTytGLFNBQVMsRUFBQztFQUFPLEdBQUMsUUFBTSxDQUFRLENBQ25DLENBQ0YsZUFFTi9GLG1CQUFBO0lBQUsrRixTQUFTLEVBQUM7RUFBaUMsZ0JBQzlDL0YsbUJBQUE7SUFBSytGLFNBQVMsRUFBQztFQUF5QyxnQkFFdEQvRixtQkFBQTtJQUNFb0csUUFBUTtJQUNSMkUsR0FBRyxFQUFFVixZQUFhO0lBQ2xCdEUsU0FBUyxFQUFDO0VBQWMsZ0JBRXhCL0YsbUJBQUE7SUFBUXVELEtBQUssRUFBQztFQUFFLEdBQUMsZUFBYSxDQUFTLGVBQ3ZDdkQsbUJBQUE7SUFBUXVELEtBQUssRUFBQztFQUFTLEdBQUMsU0FBTyxDQUFTLGVBQ3hDdkQsbUJBQUE7SUFBUXVELEtBQUssRUFBQztFQUFPLEdBQUMsVUFBUSxDQUFTLGVBQ3ZDdkQsbUJBQUE7SUFBUXVELEtBQUssRUFBQztFQUFNLEdBQUMsTUFBSSxDQUFTLGVBQ2xDdkQsbUJBQUE7SUFBUXVELEtBQUssRUFBQztFQUFlLEdBQUMsT0FBSyxDQUFTLENBQ3JDLGVBQ1R2RCxtQkFBQTtJQUFPK0YsU0FBUyxFQUFDO0VBQU8sR0FBQyxRQUFNLENBQVEsQ0FDbkMsQ0FDRixlQUVOL0YsbUJBQUE7SUFBSytGLFNBQVMsRUFBQztFQUFpQyxnQkFDOUMvRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQXlDLGdCQUV0RC9GLG1CQUFBO0lBQ0VvRyxRQUFRO0lBQ1JKLElBQUksRUFBQyxNQUFNO0lBQ1hELFNBQVMsRUFBQyxjQUFjO0lBQ3hCekMsSUFBSSxFQUFDLFFBQVE7SUFDYjZDLFFBQVEsRUFBRWpEO0VBQWEsRUFDdkIsZUFDRmxELG1CQUFBO0lBQU8rRixTQUFTLEVBQUM7RUFBTyxHQUFDLFFBQU0sQ0FBUSxDQUNuQyxDQUNGLENBQ0YsZUFDTi9GLG1CQUFBO0lBQUsrRixTQUFTLEVBQUM7RUFBdUMsZ0JBQ3BEL0YsbUJBQUEsQ0FBQ00sOEJBQU07SUFBQzBGLElBQUksRUFBQyxRQUFRO0lBQUNELFNBQVMsRUFBQztFQUFtQixHQUFDLFVBRXBELENBQVMsQ0FDTCxDQUNELENBQ0gsQ0FDRixDQUNGLENBQ087QUFFbkI7QUFFQSw2REFBZTZELGFBQWEsRTs7Ozs7Ozs7OztBQ3JJdUI7QUFDZjtBQUNNO0FBQ3lCO0FBRW5FLFNBQVNvQixhQUFhQSxDQUFBbkIsSUFBQSxFQUtuQjtFQUFBLElBSkRsRCxNQUFNLEdBQUFrRCxJQUFBLENBQU5sRCxNQUFNO0lBQ05zRSx1QkFBdUIsR0FBQXBCLElBQUEsQ0FBdkJvQix1QkFBdUI7SUFDdkJqQixlQUFlLEdBQUFILElBQUEsQ0FBZkcsZUFBZTtJQUNma0IsVUFBVSxHQUFBckIsSUFBQSxDQUFWcUIsVUFBVTtFQUVWLElBQU1DLGtCQUFrQixHQUFHLFNBQXJCQSxrQkFBa0JBLENBQUEsRUFBUztJQUMvQixJQUFNWCxPQUFPLEdBQUcsSUFBSXJLLHNCQUFPLENBQUMsRUFBRSxFQUFFdUQsY0FBYyxFQUFFQyxZQUFZLEVBQUUsSUFBSSxDQUFDO0lBQ25FLElBQUk4RyxTQUFTLEdBQUcsR0FBQTVHLE1BQUEsQ0FBRzhGLGlEQUFtQixFQUFBOUYsTUFBQSxDQUFHOEYscUVBQTZCLEVBQUdKLE9BQU8sQ0FDOUUsVUFBVSxFQUNWMkIsVUFBVSxDQUFDekosUUFBUSxDQUNwQjtJQUVEeUosVUFBVSxDQUFDdkUsTUFBTSxHQUFHaUUsUUFBUSxDQUFDTSxVQUFVLENBQUN2RSxNQUFNLENBQUM7SUFDL0M2RCxPQUFPLENBQUNsRCxHQUFHLENBQUNtRCxTQUFTLENBQUM7RUFDeEIsQ0FBQztFQUNELElBQU0vRyxjQUFjLEdBQUcsU0FBakJBLGNBQWNBLENBQUltSCxRQUFRLEVBQUUxRCxPQUFPLEVBQUs7SUFDNUMsSUFBSTBELFFBQVEsQ0FBQzlILE9BQU8sRUFBRTtNQUNwQnNJLHdCQUF3QixDQUFDUixRQUFRLENBQUMvRixJQUFJLENBQUM7SUFDekM7RUFDRixDQUFDO0VBRUQsSUFBQTlDLFNBQUEsR0FBMEQvQixrQkFBUSxDQUFDLEVBQUUsQ0FBQztJQUFBZ0MsVUFBQSxHQUFBQywyQkFBQSxDQUFBRixTQUFBO0lBQS9Ec0oscUJBQXFCLEdBQUFySixVQUFBO0lBQUVvSix3QkFBd0IsR0FBQXBKLFVBQUE7RUFFdEQsSUFBTTBCLFlBQVksR0FBRyxTQUFmQSxZQUFZQSxDQUFJTyxLQUFLLEVBQUs7SUFDOUIyQixPQUFPLENBQUNDLEdBQUcsQ0FBQyxhQUFhLENBQUM7RUFDNUIsQ0FBQztFQUVENUYsbUJBQVMsQ0FBQyxZQUFNO0lBQ2RpTCxrQkFBa0IsRUFBRTtFQUN0QixDQUFDLEVBQUUsRUFBRSxDQUFDO0VBRU4sb0JBQ0VuTCxtQkFBQSxDQUFDTyxvQ0FBWSxxQkFDWFAsbUJBQUE7SUFBSytGLFNBQVMsRUFBQyxjQUFjO0lBQUN4RSxJQUFJLEVBQUM7RUFBVSxnQkFDM0N2QixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQWUsZ0JBQzVCL0YsbUJBQUE7SUFBSytGLFNBQVMsRUFBQztFQUFjLGdCQUMzQi9GLG1CQUFBO0lBQUkrRixTQUFTLEVBQUMsYUFBYTtJQUFDa0QsRUFBRSxFQUFDO0VBQW1CLEdBQUMsU0FFbkQsQ0FBSyxlQUNMakosbUJBQUE7SUFDRWdHLElBQUksRUFBQyxRQUFRO0lBQ2JELFNBQVMsRUFBQyxpQkFBaUI7SUFDM0IsZ0JBQWEsT0FBTztJQUNwQixjQUFXLGlCQUFpQjtJQUM1QkUsT0FBTyxFQUFFZ0Y7RUFBd0IsZ0JBRWpDakwsbUJBQUE7SUFBTSxlQUFZO0VBQU0sZ0JBQUNBLG1CQUFBO0lBQUcrRixTQUFTLEVBQUMsYUFBYTtJQUFDLGVBQVk7RUFBTSxFQUFLLFlBQVEsQ0FBTyxDQUNuRixDQUNMLGVBQ04vRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQVksZ0JBQ3pCL0YsbUJBQUEsMkJBU0VBLG1CQUFBLGFBQ0dzTCxxQkFBcUIsQ0FBQ2hHLEdBQUcsQ0FBQyxVQUFDaUcsT0FBTyxFQUFLO0lBQ3RDLG9CQUNFdkwsbUJBQUEsQ0FBQ0EsY0FBYyxxQkFDYkEsbUJBQUEsYUFDR1MsTUFBTSxDQUFDK0ssT0FBTyxDQUFDRCxPQUFPLENBQUMsQ0FBQ2pHLEdBQUcsQ0FBQyxVQUFBbUcsS0FBQSxFQUFrQjtNQUFBLElBQUFDLEtBQUEsR0FBQXhKLDJCQUFBLENBQUF1SixLQUFBO1FBQWhCaEcsR0FBRyxHQUFBaUcsS0FBQTtRQUFFbkksS0FBSyxHQUFBbUksS0FBQTtNQUN2QyxvQkFBTzFMLG1CQUFBLGdCQUFBNkQsTUFBQSxDQUFRNEIsR0FBRyxTQUFBNUIsTUFBQSxDQUFNTixLQUFLLEVBQVE7SUFDdkMsQ0FBQyxDQUFDLENBQ0MsQ0FVVTtFQUVyQixDQUFDLENBQUMsQ0FDQyxDQUNELENBQ0YsQ0FDRixDQUNGLENBQ087QUFFbkI7QUFDQSw2REFBZXlILGFBQWEsRTs7Ozs7Ozs7Ozs7Ozs7QUM5RnVCO0FBQ1Q7QUFDTjtBQUNpQjtBQUNFO0FBQ1M7QUFDeEI7QUFDTTtBQUNGO0FBRU47QUFDb0M7QUFDOUI7QUFPQztBQUU3QyxJQUFNcUIsV0FBVyxHQUFHO0VBQ2xCQyxVQUFVLEVBQUUsUUFBUTtFQUNwQkMsU0FBUyxFQUFFLE9BQU87RUFDbEJDLGFBQWEsRUFBRTtBQUNqQixDQUFDO0FBRUQsSUFBTUMsTUFBTSxHQUFHO0VBQ2JDLGFBQWEsRUFBRTtJQUNiQyxPQUFPLEVBQUUsTUFBTTtJQUNmQyxNQUFNLEVBQUU7RUFDVixDQUFDO0VBQ0RDLGFBQWEsRUFBRTtJQUNiQyxDQUFDLEVBQUU7TUFDRHBILEtBQUssRUFBRSxNQUFNO01BQ2JpSCxPQUFPLEVBQUU7SUFDWCxDQUFDO0lBQ0RJLENBQUMsRUFBRTtNQUFFckgsS0FBSyxFQUFFLE9BQU87TUFBRWlILE9BQU8sRUFBRTtJQUFPO0VBQ3ZDO0FBQ0YsQ0FBQztBQUVELElBQU1LLEtBQUssR0FBRyxTQUFSQSxLQUFLQSxDQUFJckwsS0FBSyxFQUFLO0VBQ3ZCLElBQUFLLFNBQUEsR0FBc0MvQixrQkFBUSxDQUFDLEtBQUssQ0FBQztJQUFBZ0MsVUFBQSxHQUFBQyxtQkFBQSxDQUFBRixTQUFBO0lBQTlDaUwsY0FBYyxHQUFBaEwsVUFBQTtJQUFFaUwsV0FBVyxHQUFBakwsVUFBQTtFQUNsQyxJQUFBSSxVQUFBLEdBQW9DcEMsa0JBQVEsQ0FBQztNQUMzQ3dCLFFBQVEsRUFBRSxFQUFFO01BQ1pzRCxHQUFHLEVBQUUsRUFBRTtNQUNQWixNQUFNLEVBQUU7SUFDVixDQUFDLENBQUM7SUFBQTdCLFVBQUEsR0FBQUosbUJBQUEsQ0FBQUcsVUFBQTtJQUpLOEssVUFBVSxHQUFBN0ssVUFBQTtJQUFFOEssYUFBYSxHQUFBOUssVUFBQTtFQU1oQyxJQUFBRyxVQUFBLEdBQTREeEMsa0JBQVEsQ0FBQyxLQUFLLENBQUM7SUFBQXlDLFVBQUEsR0FBQVIsbUJBQUEsQ0FBQU8sVUFBQTtJQUFwRTRLLHNCQUFzQixHQUFBM0ssVUFBQTtJQUFFNEsseUJBQXlCLEdBQUE1SyxVQUFBO0VBQ3hELElBQUFHLFVBQUEsR0FBNEQ1QyxrQkFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQUE2QyxVQUFBLEdBQUFaLG1CQUFBLENBQUFXLFVBQUE7SUFBakUwSyxzQkFBc0IsR0FBQXpLLFVBQUE7SUFBRTBLLHlCQUF5QixHQUFBMUssVUFBQTtFQUV4RCxJQUFBMkssVUFBQSxHQUF3RHhOLGtCQUFRLEVBQUU7SUFBQXlOLFdBQUEsR0FBQXhMLG1CQUFBLENBQUF1TCxVQUFBO0lBQTNERSxvQkFBb0IsR0FBQUQsV0FBQTtJQUFFRSx1QkFBdUIsR0FBQUYsV0FBQTtFQUNwRCxJQUFBRyxXQUFBLEdBQWtDNU4sa0JBQVEsQ0FBQyxFQUFFLENBQUM7SUFBQTZOLFdBQUEsR0FBQTVMLG1CQUFBLENBQUEyTCxXQUFBO0lBQXZDRSxTQUFTLEdBQUFELFdBQUE7SUFBRS9ELFlBQVksR0FBQStELFdBQUE7RUFFOUIsSUFBQUUsV0FBQSxHQUFrQy9OLGtCQUFRLENBQUMsRUFBRSxDQUFDO0lBQUFnTyxXQUFBLEdBQUEvTCxtQkFBQSxDQUFBOEwsV0FBQTtJQUF2Q25NLFlBQVksR0FBQW9NLFdBQUE7SUFBRUMsU0FBUyxHQUFBRCxXQUFBO0VBQzlCLElBQUFFLFdBQUEsR0FBd0NsTyxrQkFBUSxDQUFDLEVBQUUsQ0FBQztJQUFBbU8sV0FBQSxHQUFBbE0sbUJBQUEsQ0FBQWlNLFdBQUE7SUFBN0N2TSxZQUFZLEdBQUF3TSxXQUFBO0lBQUVDLGVBQWUsR0FBQUQsV0FBQTtFQUNwQyxJQUFBRSxXQUFBLEdBQTRDck8sa0JBQVEsQ0FBQztNQUNuRGdOLGNBQWMsRUFBRSxLQUFLO01BQ3JCdEcsTUFBTSxFQUFFO0lBQ1YsQ0FBQyxDQUFDO0lBQUE0SCxXQUFBLEdBQUFyTSxtQkFBQSxDQUFBb00sV0FBQTtJQUhLRSxjQUFjLEdBQUFELFdBQUE7SUFBRUUsaUJBQWlCLEdBQUFGLFdBQUE7RUFLeEMsSUFBQUcsV0FBQSxHQUEwQ3pPLGtCQUFRLENBQUMsRUFBRSxDQUFDO0lBQUEwTyxXQUFBLEdBQUF6TSxtQkFBQSxDQUFBd00sV0FBQTtJQUEvQ0UsYUFBYSxHQUFBRCxXQUFBO0lBQUVFLGdCQUFnQixHQUFBRixXQUFBO0VBQ3RDLElBQUFHLFdBQUEsR0FBZ0M3TyxrQkFBUSxDQUFDLEtBQUssQ0FBQztJQUFBOE8sV0FBQSxHQUFBN00sbUJBQUEsQ0FBQTRNLFdBQUE7SUFBeENFLFNBQVMsR0FBQUQsV0FBQTtJQUFFRSxVQUFVLEdBQUFGLFdBQUE7RUFFNUIsSUFBUUcsUUFBUSxHQUFLdk4sS0FBSyxDQUFsQnVOLFFBQVE7RUFFaEIsSUFBTW5OLGNBQWMsR0FBRyxTQUFqQkEsY0FBY0EsQ0FBQSxFQUFTO0lBQzNCbU4sUUFBUSxDQUFDdkQsd0NBQWMsRUFBRSxDQUFDO0VBQzVCLENBQUM7RUFFRHpMLG1CQUFTLENBQUMsWUFBTTtJQUNkNkIsY0FBYyxFQUFFO0VBQ2xCLENBQUMsRUFBRSxFQUFFLENBQUM7RUFFTixJQUFNb04sc0JBQXNCLEdBQUcsU0FBekJBLHNCQUFzQkEsQ0FBSTVLLElBQUksRUFBSztJQUN2Q2lKLHlCQUF5QixDQUFDakosSUFBSSxDQUFDO0lBQy9CK0kseUJBQXlCLENBQUMsSUFBSSxDQUFDO0lBQy9CdEIsNkJBQVUsRUFBRTtFQUNkLENBQUM7RUFDRCxJQUFNZix1QkFBdUIsR0FBRyxTQUExQkEsdUJBQXVCQSxDQUFBLEVBQVM7SUFDcENxQyx5QkFBeUIsQ0FBQyxLQUFLLENBQUM7SUFDaENqTixnQ0FBYSxFQUFFO0VBQ2pCLENBQUM7RUFFRCxJQUFNK08sZ0JBQWdCLEdBQUcsU0FBbkJBLGdCQUFnQkEsQ0FBSXpJLE1BQU0sRUFBSztJQUNuQ2lILHVCQUF1QixDQUFDLEtBQUssQ0FBQztJQUM5QlYsV0FBVyxDQUFDLElBQUksQ0FBQztJQUNqQmxCLDZCQUFVLEVBQUU7SUFDWmtDLFNBQVMsQ0FBQ3ZILE1BQU0sQ0FBQztJQUNqQixJQUFNakQsY0FBYyxHQUFHLFNBQWpCQSxjQUFjQSxDQUFJbUgsUUFBUSxFQUFFMUQsT0FBTyxFQUFLO01BQzVDLElBQUkwRCxRQUFRLENBQUM5SCxPQUFPLElBQUksSUFBSSxFQUFFO1FBQzVCc0wsZUFBZSxDQUFDeEQsUUFBUSxDQUFDL0YsSUFBSSxDQUFDO01BQ2hDO0lBQ0YsQ0FBQztJQUVELElBQU1uQixZQUFZLEdBQUcsU0FBZkEsWUFBWUEsQ0FBSU8sS0FBSyxFQUFLLENBQUMsQ0FBQztJQUVsQyxJQUFNc0csT0FBTyxHQUFHLElBQUlySyxzQkFBTyxDQUFDLEVBQUUsRUFBRXVELGNBQWMsRUFBRUMsWUFBWSxFQUFFLEtBQUssQ0FBQztJQUNwRSxPQUFPNkcsT0FBTyxDQUFDbEQsR0FBRyxJQUFBekQsTUFBQSxDQUNiOEYsaURBQW1CLEVBQUE5RixNQUFBLENBQUc4RixpRUFBMkIsQ0FBQyxVQUFVLEVBQUVoRCxNQUFNLENBQUMsRUFDekU7RUFDSCxDQUFDO0VBRUQsSUFBTTJJLG9CQUFvQixHQUFHLFNBQXZCQSxvQkFBb0JBLENBQUkzSSxNQUFNLEVBQUs7SUFDdkNxRiw2QkFBVSxFQUFFO0lBQ1o2QyxnQkFBZ0IsQ0FBQ2xJLE1BQU0sQ0FBQztFQUMxQixDQUFDO0VBRUQsSUFBTTRJLHNCQUFzQixHQUFHLFNBQXpCQSxzQkFBc0JBLENBQUk1SSxNQUFNLEVBQUs7SUFDekNxRiw2QkFBVSxFQUFFO0lBQ1p5QyxpQkFBaUIsQ0FBQztNQUFFeEIsY0FBYyxFQUFFLElBQUk7TUFBRXRHLE1BQU0sRUFBRUE7SUFBTyxDQUFDLENBQUM7RUFDN0QsQ0FBQztFQUVELElBQU02SSxnQkFBZ0IsR0FBRyxTQUFuQkEsZ0JBQWdCQSxDQUFBLEVBQVM7SUFDN0JDLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDQyxTQUFTLENBQUNDLEdBQUcsQ0FBQyxZQUFZLENBQUM7SUFDekNoQyx1QkFBdUIsQ0FBQyxJQUFJLENBQUM7SUFDN0JWLFdBQVcsQ0FBQyxJQUFJLENBQUM7RUFDbkIsQ0FBQztFQUVELElBQU0yQyxnQkFBZ0IsR0FBRyxTQUFuQkEsZ0JBQWdCQSxDQUFJbEosTUFBTSxFQUFFbUosWUFBWSxFQUFLO0lBQ2pELElBQU0zTCxNQUFNLEdBQUcyTCxZQUFZLElBQUksR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHO0lBQzlDYixVQUFVLENBQUMsS0FBSyxDQUFDO0lBQ2pCLElBQU12TCxjQUFjLEdBQUcsU0FBakJBLGNBQWNBLENBQUltSCxRQUFRLEVBQUs7TUFDbkNoRixPQUFPLENBQUNDLEdBQUcsQ0FBQyxrQkFBa0IsRUFBRStFLFFBQVEsQ0FBQztNQUN6QyxJQUFJQSxRQUFRLENBQUM5SCxPQUFPLEVBQUU7UUFDcEIsSUFBTWdDLEdBQUcsR0FBR1osTUFBTSxJQUFJLEdBQUcsR0FBRyxhQUFhLEdBQUcsV0FBVztRQUN2RDhLLFVBQVUsQ0FBQyxJQUFJLENBQUM7UUFDaEI3QixhQUFhLENBQUM7VUFDWjNMLFFBQVEsRUFBRWtGLE1BQU07VUFDaEJ4QyxNQUFNLEVBQUVBLE1BQU07VUFDZFksR0FBRyxlQUNEL0UsbUJBQUEsQ0FBQUEsY0FBQSxRQUFFLG1CQUNpQixlQUFBQSxtQkFBQSxpQkFBUytFLEdBQUcsQ0FBVTtRQUc3QyxDQUFDLENBQUM7TUFDSjtJQUNGLENBQUM7SUFFRCxJQUFNcEIsWUFBWSxHQUFHLFNBQWZBLFlBQVlBLENBQUlPLEtBQUssRUFBSyxDQUFDLENBQUM7SUFFbEMsSUFBTXNHLE9BQU8sR0FBRyxJQUFJckssc0JBQU8sQ0FBQyxFQUFFLEVBQUV1RCxjQUFjLEVBQUVDLFlBQVksRUFBRSxLQUFLLENBQUM7SUFDcEUsSUFBTW9NLE1BQU0sY0FBQWxNLE1BQUEsQ0FBYzhDLE1BQU0sY0FBQTlDLE1BQUEsQ0FBV00sTUFBTSxDQUFFO0lBQ25ELE9BQU9xRyxPQUFPLENBQUN3RixHQUFHLElBQUFuTSxNQUFBLENBQ2I4RixpREFBbUIsRUFBQTlGLE1BQUEsQ0FBRzhGLG1FQUE0QixFQUFBOUYsTUFBQSxDQUFHa00sTUFBTSxFQUMvRDtFQUNILENBQUM7RUFFRCxJQUFNRywwQkFBMEIsR0FBRyxTQUE3QkEsMEJBQTBCQSxDQUFBLEVBQVM7SUFDdkNyQixnQkFBZ0IsQ0FBQyxFQUFFLENBQUM7SUFDcEJ4TyxnQ0FBYSxFQUFFO0lBQ2ZvUCxRQUFRLENBQUNDLElBQUksQ0FBQ0MsU0FBUyxDQUFDUSxNQUFNLENBQUMsWUFBWSxDQUFDO0VBQzlDLENBQUM7RUFFRCxJQUFNck8saUJBQWlCLEdBQUcsU0FBcEJBLGlCQUFpQkEsQ0FBQSxFQUFTO0lBQzlCdU0sZUFBZSxDQUFDLEVBQUUsQ0FBQztJQUNuQmhPLGdDQUFhLEVBQUU7SUFDZm9QLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDQyxTQUFTLENBQUNRLE1BQU0sQ0FBQyxZQUFZLENBQUM7SUFDNUNqRCxXQUFXLENBQUMsS0FBSyxDQUFDO0VBQ3BCLENBQUM7RUFFRCxJQUFNa0Qsb0JBQW9CLEdBQUcsU0FBdkJBLG9CQUFvQkEsQ0FBQSxFQUFTO0lBQ2pDM0IsaUJBQWlCLENBQUF4TCxrQkFBQSxDQUFBQSxrQkFBQSxLQUNadUwsY0FBYztNQUNqQjdILE1BQU0sRUFBRSxFQUFFO01BQ1ZzRyxjQUFjLEVBQUU7SUFBSyxHQUNyQjtJQUNGNU0sZ0NBQWEsRUFBRTtFQUNqQixDQUFDO0VBRUQsSUFBUWdRLEtBQUssR0FBSzFPLEtBQUssQ0FBZjBPLEtBQUs7RUFFYixJQUFJQyxRQUFRLEdBQUdELEtBQUssSUFBSUEsS0FBSyxDQUFDRSxTQUFTLElBQUlGLEtBQUssQ0FBQ0UsU0FBUyxDQUFDekwsSUFBSTtFQUUvRCxJQUFJd0wsUUFBUSxFQUFFO0lBQ1pBLFFBQVEsR0FBR0EsUUFBUSxDQUFDaEwsR0FBRyxDQUFDLFVBQUNmLElBQUksRUFBSztNQUNoQyxJQUFJQSxJQUFJLENBQUM5QyxRQUFRLElBQUkwTCxVQUFVLENBQUMxTCxRQUFRLEVBQUU7UUFDeEM4QyxJQUFJLENBQUNpTSxRQUFRLEdBQUdyRCxVQUFVLENBQUNoSixNQUFNO01BQ25DO01BQ0EsT0FBT0ksSUFBSTtJQUNiLENBQUMsQ0FBQztFQUNKOztFQUVBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOztFQUVBckUsbUJBQVMsQ0FBQyxZQUFNO0lBQ2QsSUFBSTZOLFNBQVMsRUFBRTtNQUNiMEMsVUFBVSxDQUFDLFlBQU07UUFDZjFHLFlBQVksQ0FBQyxFQUFFLENBQUM7TUFDbEIsQ0FBQyxFQUFFLElBQUksQ0FBQztJQUNWO0VBQ0YsQ0FBQyxFQUFFLENBQUNnRSxTQUFTLENBQUMsQ0FBQztFQUVmLG9CQUNFL04sbUJBQUEsQ0FBQUEsY0FBQSxxQkFDRUEsbUJBQUEsQ0FBQzZMLHlCQUFVO0lBQUM2RSxPQUFPLEVBQUMsT0FBTztJQUFDbk4sS0FBSyxFQUFDO0VBQU8sRUFBRyxlQUM1Q3ZELG1CQUFBO0lBQUsrRixTQUFTLEVBQUM7RUFBK0IsZ0JBQzVDL0YsbUJBQUE7SUFBSytGLFNBQVMsRUFBQztFQUE0QyxnQkFDekQvRixtQkFBQTtJQUFJK0YsU0FBUyxFQUFDO0VBQVksR0FBQyxZQUFVLENBQUssZUFDMUMvRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQVcsZ0JBQ3hCL0YsbUJBQUEsQ0FBQ2tNLGlDQUFTO0lBQUNsRyxJQUFJLEVBQUMsUUFBUTtJQUFDRCxTQUFTLEVBQUM7RUFBa0IsZ0JBQ25EL0YsbUJBQUE7SUFBRytGLFNBQVMsRUFBQyxnQkFBZ0I7SUFBQyxlQUFZO0VBQU0sRUFBSyxRQUN2RCxDQUFZLGVBQ1ovRixtQkFBQSxDQUFDa00saUNBQVM7SUFDUmxHLElBQUksRUFBQyxRQUFRO0lBQ2JELFNBQVMsRUFBQyx1QkFBdUI7SUFDakNFLE9BQU8sRUFBRSxTQUFBQSxRQUFBO01BQUEsT0FBTThGLDRCQUFTLEVBQUU7SUFBQTtFQUFDLGdCQUUzQi9MLG1CQUFBO0lBQUcrRixTQUFTLEVBQUMsYUFBYTtJQUFDLGVBQVk7RUFBTSxFQUFLLFVBQ3BELENBQVksQ0FDUixDQUNGLGVBQ04vRixtQkFBQTtJQUFLK0YsU0FBUyxFQUFDO0VBQVcsZ0JBQ3hCL0YsbUJBQUE7SUFBSytGLFNBQVMsRUFBQztFQUF5QixnQkFDdEMvRixtQkFBQSxDQUFDTSw4QkFBTTtJQUNMMEYsSUFBSSxFQUFDLFFBQVE7SUFDYkQsU0FBUyxFQUFDLGFBQWE7SUFDdkJFLE9BQU8sRUFBRXVKO0VBQWlCLEdBQzNCLFVBRUQsQ0FBUyxDQUNMLGVBQ054UCxtQkFBQSxDQUFDbU0sb0NBQVksUUFDVjRCLFNBQVMsaUJBQ1IvTixtQkFBQSxDQUFDaU0sb0NBQVk7SUFBQ2xHLFNBQVMsRUFBQztFQUFvQixHQUN6Q2dJLFNBQVMsQ0FFYixlQUNEL04sbUJBQUE7SUFBTytGLFNBQVMsRUFBQztFQUFPLGdCQUN0Qi9GLG1CQUFBLDZCQUNFQSxtQkFBQSwwQkFDRUEsbUJBQUEsYUFBSSxJQUFFLENBQUssZUFDWEEsbUJBQUEsYUFBSSxjQUFZLENBQUssZUFDckJBLG1CQUFBLGFBQUksUUFBTSxDQUFLLGVBQ2ZBLG1CQUFBLGFBQUksT0FBSyxDQUFLLGVBQ2RBLG1CQUFBLGFBQUksTUFBSSxDQUFLLGVBQ2JBLG1CQUFBLGFBQUksUUFBTSxDQUFLLGVBQ2ZBLG1CQUFBLGFBQUksYUFBVyxDQUFLLGVBQ3BCQSxtQkFBQSxhQUFJLFFBQU0sQ0FBSyxlQUNmQSxtQkFBQSxhQUFJLFFBQU0sQ0FBSyxDQUNaLENBQ0MsZUFFUkEsbUJBQUEsZ0JBQ0dzUSxRQUFRLElBQUlqTSxLQUFLLENBQUM2RSxPQUFPLENBQUNvSCxRQUFRLENBQUMsR0FDaENBLFFBQVEsQ0FBQ2hMLEdBQUcsQ0FBQyxVQUFDZixJQUFJLEVBQUVvTSxLQUFLLEVBQUs7SUFDNUIsSUFBSUMsU0FBUyxHQUFHLEVBQUU7SUFDbEIsSUFBSXJNLElBQUksQ0FBQ2hELElBQUksSUFBSThLLFdBQVcsQ0FBQzlILElBQUksQ0FBQ2hELElBQUksQ0FBQyxFQUFFO01BQ3ZDcVAsU0FBUyxHQUFHdkUsV0FBVyxDQUFDOUgsSUFBSSxDQUFDaEQsSUFBSSxDQUFDLENBQy9Cc1AsV0FBVyxFQUFFLENBQ2J0SCxPQUFPLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQztJQUN0QjtJQUVBLElBQUlwRixNQUFNLEdBQUdJLElBQUksQ0FBQ2lNLFFBQVE7SUFDMUIsSUFBTU0sWUFBWSxHQUFHdk0sSUFBSSxDQUFDaU0sUUFBUSxJQUFJLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRztJQUVyRCxvQkFDRXhRLG1CQUFBO01BQUl5RixHQUFHLEVBQUVsQixJQUFJLENBQUM5QztJQUFTLGdCQUNyQnpCLG1CQUFBLGFBQUsyUSxLQUFLLEdBQUcsQ0FBQyxDQUFNLGVBQ3BCM1EsbUJBQUEsZ0JBQUE2RCxNQUFBLENBQVFVLElBQUksQ0FBQ3hELFNBQVMsT0FBQThDLE1BQUEsQ0FBSVUsSUFBSSxDQUFDckQsUUFBUSxFQUFRLGVBQy9DbEIsbUJBQUEsYUFBS3VFLElBQUksQ0FBQzlDLFFBQVEsQ0FBTSxlQUN4QnpCLG1CQUFBLGFBQUt1RSxJQUFJLENBQUN6RCxLQUFLLENBQU0sZUFDckJkLG1CQUFBO01BQUkrRixTQUFTLEVBQUU2SztJQUFVLEdBQ3RCdkUsV0FBVyxDQUFDOUgsSUFBSSxDQUFDaEQsSUFBSSxDQUFDLElBQUksSUFBSSxDQUM1QixlQUNMdkIsbUJBQUEsYUFBSSxNQUNFLEVBQUN1RSxJQUFJLENBQUN3TSxXQUFXLElBQUksR0FBRyxlQUM1Qi9RLG1CQUFBO01BQ0VxSixLQUFLLEVBQUVvRCxNQUFNLENBQUNDLGFBQWM7TUFDNUIzRyxTQUFTLEVBQUMsbUJBQW1CO01BQzdCaUwsS0FBSyxFQUFDLG1CQUFtQjtNQUN6Qi9LLE9BQU8sRUFBRSxTQUFBQSxRQUFBO1FBQUEsT0FBTWtKLHNCQUFzQixDQUFDNUssSUFBSSxDQUFDO01BQUE7SUFBQyxFQUN6QyxDQUNGLGVBTUx2RSxtQkFBQSxhQUNHdUUsSUFBSSxDQUFDME0sV0FBVyxHQUFHLEtBQUssR0FBRzFNLElBQUksQ0FBQzBNLFdBQVcsR0FBRyxHQUFHLENBQy9DLGVBQ0xqUixtQkFBQSxnQkFBQTZELE1BQUEsQ0FDRVUsSUFBSSxDQUFDaU0sUUFBUSxJQUFJLEdBQUcsR0FBRyxRQUFRLEdBQUcsVUFBVSxFQUN0QyxlQUNSeFEsbUJBQUEsMEJBQ0VBLG1CQUFBO01BQ0VxSixLQUFLLEVBQUU7UUFDTDZILE9BQU8sRUFBRSxNQUFNO1FBQ2ZDLGFBQWEsRUFBRTtNQUNqQjtJQUFFLGdCQUVGblIsbUJBQUE7TUFBS3FKLEtBQUssRUFBRW9ELE1BQU0sQ0FBQ0M7SUFBYyxnQkFDL0IxTSxtQkFBQTtNQUNFK0YsU0FBUyxFQUFDLHVCQUF1QjtNQUNqQ0UsT0FBTyxFQUFFLFNBQUFBLFFBQUE7UUFBQSxPQUNQbUosZ0JBQWdCLENBQUM3SyxJQUFJLENBQUM5QyxRQUFRLENBQUM7TUFBQSxDQUNoQztNQUNENEgsS0FBSyxFQUFFO1FBQUV1RCxNQUFNLEVBQUU7TUFBVSxDQUFFO01BQzdCb0UsS0FBSyxFQUFDO0lBQWEsRUFDaEIsQ0FDRCxlQUVOaFIsbUJBQUE7TUFBS3FKLEtBQUssRUFBRW9ELE1BQU0sQ0FBQ0M7SUFBYyxnQkFDL0IxTSxtQkFBQTtNQUNFK0YsU0FBUyxFQUFDLFdBQVc7TUFDckJFLE9BQU8sRUFBRSxTQUFBQSxRQUFBO1FBQUEsT0FDUHNKLHNCQUFzQixDQUFDaEwsSUFBSSxDQUFDOUMsUUFBUSxDQUFDO01BQUEsQ0FDdEM7TUFDRHVQLEtBQUssRUFBQyxvQkFBb0I7TUFDMUIzSCxLQUFLLEVBQUU7UUFBRXVELE1BQU0sRUFBRTtNQUFVO0lBQUUsRUFDMUIsQ0FDRCxlQUVONU0sbUJBQUE7TUFBS3FKLEtBQUssRUFBRW9ELE1BQU0sQ0FBQ0M7SUFBYyxnQkFDL0IxTSxtQkFBQTtNQUNFK0YsU0FBUyxFQUFDLFFBQVE7TUFDbEJpTCxLQUFLLEVBQUMsVUFBVTtNQUNoQi9LLE9BQU8sRUFBRSxTQUFBQSxRQUFBLEVBQU07UUFDYkosT0FBTyxDQUFDQyxHQUFHLENBQUMsWUFBWSxDQUFDO1FBQ3pCd0osb0JBQW9CLENBQUMvSyxJQUFJLENBQUM5QyxRQUFRLENBQUM7TUFDckM7SUFBRSxFQUNDLENBQ0QsZUFFTnpCLG1CQUFBLENBQUNvTSxzQ0FBYztNQUNiL0MsS0FBSyxFQUFFb0QsTUFBTSxDQUFDSSxhQUFhLENBQUNpRSxZQUFZLENBQUU7TUFDMUM3SyxPQUFPLEVBQUUsU0FBQUEsUUFBQTtRQUFBLE9BQ1A0SixnQkFBZ0IsQ0FBQ3RMLElBQUksQ0FBQzlDLFFBQVEsRUFBRTBDLE1BQU0sQ0FBQztNQUFBO0lBQ3hDLGdCQUVEbkUsbUJBQUE7TUFDRStGLFNBQVMsRUFBQyxtQkFBbUI7TUFDN0JzRCxLQUFLLEVBQUU7UUFBRStILFVBQVUsRUFBRTtNQUFPLENBQUU7TUFDOUJKLEtBQUssS0FBQW5OLE1BQUEsQ0FDSFUsSUFBSSxDQUFDaU0sUUFBUSxJQUFJLEdBQUcsR0FBRyxRQUFRLEdBQUcsVUFBVTtJQUMzQyxFQUNBLEVBRUpyRCxVQUFVLENBQUMxTCxRQUFRLElBQUk4QyxJQUFJLENBQUM5QyxRQUFRLElBQ25DdU4sU0FBUyxpQkFDUGhQLG1CQUFBO01BQUsrRixTQUFTLEVBQUM7SUFBeUIsR0FDckNvSCxVQUFVLGFBQVZBLFVBQVUsdUJBQVZBLFVBQVUsQ0FBRXBJLEdBQUcsQ0FFbkIsQ0FDWSxDQUNiLENBQ0gsQ0FDRjtFQUVULENBQUMsQ0FBQyxHQUNGLEVBQUUsQ0FDQSxDQUNGLENBQ0ssQ0FDWCxDQUNGLEVBRUw2SixhQUFhLGdCQUNaNU8sbUJBQUEsQ0FBQzRKLHNCQUFhO0lBQ1pqRCxNQUFNLEVBQUVpSSxhQUFjO0lBQ3RCOUUsa0JBQWtCLEVBQUVvRywwQkFBMkI7SUFDL0NuRyxZQUFZLEVBQUVBLFlBQWE7SUFDM0JDLGVBQWUsRUFBRWpJO0VBQWUsRUFDaEMsR0FFRixFQUNELEVBQ0FrTCxjQUFjLGdCQUNiak4sbUJBQUEsQ0FBQzBCLG9CQUFXO0lBQ1ZJLGlCQUFpQixFQUFFQSxpQkFBa0I7SUFDckNDLGNBQWMsRUFBRUEsY0FBZTtJQUMvQkosS0FBSyxFQUFFQSxLQUFNO0lBQ2JDLFlBQVksRUFBRUEsWUFBYTtJQUMzQkMsWUFBWSxFQUFFQSxZQUFhO0lBQzNCOEwsb0JBQW9CLEVBQUVBO0VBQXFCLEVBQzNDLEdBRUYsRUFDRCxFQUVBTixzQkFBc0IsZ0JBQ3JCck4sbUJBQUEsQ0FBQ2dMLHNCQUFhO0lBQ1pFLFVBQVUsRUFBRXFDLHNCQUF1QjtJQUNuQ3RDLHVCQUF1QixFQUFFQTtFQUF3QixFQUNqRCxHQUVGLEVBQ0QsRUFFQXVELGNBQWMsQ0FBQ3ZCLGNBQWMsZ0JBQzVCak4sbUJBQUEsQ0FBQzBHLHVCQUFjO0lBQ2I1RSxpQkFBaUIsRUFBRXNPLG9CQUFxQjtJQUN4Q3pKLE1BQU0sRUFBRTZILGNBQWMsQ0FBQzdIO0VBQU8sRUFDOUIsR0FFRixFQUNELENBQ0E7QUFFUCxDQUFDO0FBRUQsSUFBTTBLLGVBQWUsR0FBRyxTQUFsQkEsZUFBZUEsQ0FBSUMsS0FBSyxFQUFLO0VBQ2pDLE9BQUFyTyxrQkFBQSxLQUNLcU8sS0FBSztBQUVaLENBQUM7QUFFRCxxREFBZXhGLHNCQUFPLENBQUN1RixlQUFlLENBQUMsQ0FBQ3JFLEtBQUssQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Nyb3NzLWJvcmRlci1wYXltZW50Ly4vc3JjL1BhZ2VzL1VzZXJzb2xkL0FkZFVzZXJGb3JtLmpzP2YwNDIiLCJ3ZWJwYWNrOi8vY3Jvc3MtYm9yZGVyLXBheW1lbnQvLi9zcmMvUGFnZXMvVXNlcnNvbGQvUGVybWlzc2lvbkZvcm0uanM/OTQzYSIsIndlYnBhY2s6Ly9jcm9zcy1ib3JkZXItcGF5bWVudC8uL3NyYy9QYWdlcy9Vc2Vyc29sZC9BZG1pbkZ1bmRGb3JtLmpzP2FiMmUiLCJ3ZWJwYWNrOi8vY3Jvc3MtYm9yZGVyLXBheW1lbnQvLi9zcmMvUGFnZXMvVXNlcnNvbGQvV2FsbGV0RGV0YWlscy5qcz8zOTMyIiwid2VicGFjazovL2Nyb3NzLWJvcmRlci1wYXltZW50Ly4vc3JjL1BhZ2VzL1VzZXJzb2xkL1VzZXJzLmpzPzljZGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBSZXF1ZXN0IGZyb20gXCIuLi8uLi91dGlscy9SZXF1ZXN0XCI7XG5pbXBvcnQgdXJscyBmcm9tIFwiLi4vLi4vdXRpbHMvdXJsc1wiO1xuaW1wb3J0IHsgcmVtb3ZlT3ZlcmxheSB9IGZyb20gXCIuLi8uLi91dGlscy9jb21tb25cIjtcbmltcG9ydCB7IEJ1dHRvbiwgTW9kYWxXcmFwcGVyIH0gZnJvbSBcIi4uLy4uL0NvbXBvbmVudHMvVUkvU3R5bGVkQ29uc3RhbnRzXCI7XG5jb25zdCBpbml0aWFsRm9ybURhdGEgPSBPYmplY3QuZnJlZXplKHtcbiAgYWRkcmVzczE6IFwiXCIsXG4gIGFkZHJlc3MyOiBcIlwiLFxuICBkb2I6IFwiWVlZWS1NTS1ERFwiLFxuICBlbWFpbDogXCJcIixcbiAgZmlyc3ROYW1lOiBcIlwiLFxuICBsYW5kbWFyazogXCJcIixcbiAgbGFuZ0tleTogXCJlblwiLFxuICBsYXN0TmFtZTogXCJcIixcbiAgb3RwOiBcIlwiLFxuICBwaG9uZU51bWJlcjogXCJcIixcbiAgcGluY29kZTogXCJcIixcbiAgcXJDb2RlSWQ6IFwiXCIsXG4gIHJvbGU6IFwiXCIsXG4gIHRlbmFudElkOiAwLFxuICB1c2VyTmFtZTogXCJcIixcbn0pO1xuXG5jb25zdCBBZGRVc2VyRm9ybSA9IChwcm9wcykgPT4ge1xuICBjb25zdCB7XG4gICAgZWRpdFVzZXJEYXRhLFxuICAgIHVzZXJUb0JlRWRpdCxcbiAgICBjbG9zZVBvcFVwSGFuZGxlcixcbiAgICBmZXRjaFVzZXJzRGF0YSxcbiAgfSA9IHByb3BzO1xuICBjb25zdCBbZm9ybURhdGEsIHVwZGF0ZUZvcm1EYXRhXSA9IHVzZVN0YXRlKGluaXRpYWxGb3JtRGF0YSk7XG4gIGNvbnN0IFtlZGl0Rm9ybURhdGEsIHVwZGF0ZUVkaXRGb3JtRGF0YV0gPSB1c2VTdGF0ZShpbml0aWFsRm9ybURhdGEpO1xuICBjb25zdCBbZXJyb3JzLCB1cGRhdGVFcnJvcl0gPSB1c2VTdGF0ZShbXSk7XG4gIGNvbnN0IFtzdWNjZXNzLCB1cGRhdGVTdWNjZXNzXSA9IHVzZVN0YXRlKFwiXCIpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGVkaXRVc2VyRGF0YSkge1xuICAgICAgdXBkYXRlRm9ybURhdGEoe1xuICAgICAgICAuLi5lZGl0VXNlckRhdGEsXG4gICAgICB9KTtcbiAgICB9XG4gIH0sIFtlZGl0VXNlckRhdGFdKTtcblxuICBjb25zdCBoYW5kbGVDaGFuZ2UgPSAoZXZlbnQpID0+IHtcbiAgICB1cGRhdGVGb3JtRGF0YSh7XG4gICAgICAuLi5mb3JtRGF0YSxcbiAgICAgIFtldmVudC50YXJnZXQubmFtZV06IGV2ZW50LnRhcmdldC52YWx1ZSxcbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCB1cGRhdGVVc2VyID0gKCkgPT4ge1xuICAgIGNvbnN0IGFwaSA9IG5ldyBSZXF1ZXN0KFwiXCIsIHN1Y2Nlc3NIYW5kbGVyLCBlcnJvckhhbmRsZXIsIGZhbHNlKTtcbiAgICByZXR1cm4gYXBpLnBvc3QoYCR7dXJscy5sb2dpbi5CQVNFX1VSTH0ke3VybHMuVXNlci5VUERBVEVfVVNFUn1gLCBmb3JtRGF0YSk7XG4gIH07XG5cbiAgY29uc3QgZXJyb3JIYW5kbGVyID0gKGVycm9yKSA9PiB7XG4gICAgLy8ge1widGltZXN0YW1wXCI6XCIyMDIxLTA5LTE4VDA2OjI1OjM1LjUwNSswMDowMFwiLFwic3RhdHVzXCI6NDAxLFwiZXJyb3JcIjpcIlVuYXV0aG9yaXplZFwiLFwibWVzc2FnZVwiOlwiXCIsXCJwYXRoXCI6XCIvYXBpL3VzZXJzXCJ9XG4gICAgY29uc3QgZXJyb3JzID0gW107XG4gICAgaWYgKGVycm9yICYmIGVycm9yLnN0YXR1cyA9PSA0MDApIHtcbiAgICAgIGlmIChlcnJvci5maWVsZEVycm9ycyAmJiBlcnJvci5maWVsZEVycm9ycyBpbnN0YW5jZW9mIEFycmF5KSB7XG4gICAgICAgIGVycm9yLmZpZWxkRXJyb3JzLmZvckVhY2goKGl0ZW0pID0+XG4gICAgICAgICAgZXJyb3JzLnB1c2goYCR7aXRlbS5maWVsZH06ICR7aXRlbS5tZXNzYWdlfWApXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICBpZiAoZXJyb3JzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgdXBkYXRlRXJyb3IoZXJyb3JzKTtcbiAgICAgICAgd2luZG93LnNjcm9sbFRvKDEwMCwgMTAwKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGVycm9yICYmIGVycm9yLnN0YXR1cyA9PSA0MDEpIHtcbiAgICAgIHVwZGF0ZUVycm9yKFtlcnJvci5lcnJvcl0pO1xuICAgICAgd2luZG93LnNjcm9sbFRvKDEwMCwgMTAwKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3Qgc3VjY2Vzc0hhbmRsZXIgPSAoZGF0YSkgPT4ge1xuICAgIGlmICghZGF0YS5zdWNjZXNzKSB7XG4gICAgICB1cGRhdGVFcnJvcihbZGF0YS5tc2ddKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdXBkYXRlRXJyb3IoW10pO1xuICAgICAgdXBkYXRlU3VjY2VzcyhkYXRhLm1zZyk7XG4gICAgICBjbG9zZVBvcFVwSGFuZGxlcigpO1xuICAgICAgcmVtb3ZlT3ZlcmxheSgpO1xuICAgICAgZmV0Y2hVc2Vyc0RhdGEoKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3Qgc3VibWl0Rm9ybUhhbmRsZXIgPSAoZXZlbnQpID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgaWYgKGVkaXRVc2VyRGF0YSkge1xuICAgICAgdXBkYXRlVXNlcigpO1xuICAgIH1cblxuICAgIGZvcm1EYXRhLnVzZXJOYW1lID0gZm9ybURhdGEucGhvbmVOdW1iZXI7XG5cbiAgICAvLyBwcmljaW5nVG9rZW47XG5cbiAgICBjb25zdCBhcGkgPSBuZXcgUmVxdWVzdChcIlwiLCBzdWNjZXNzSGFuZGxlciwgZXJyb3JIYW5kbGVyLCBmYWxzZSk7XG4gICAgcmV0dXJuIGFwaS5wb3N0KHVybHMubG9naW4uQkFTRV9VUkwgKyB1cmxzLlVzZXIuQ1JFQVRFX05FV19VU0VSLCBmb3JtRGF0YSk7XG4gIH07XG5cbiAgbGV0IGVycm9ySFRNTCA9IFwiXCI7XG4gIGxldCBlcnJvclN0eWxlcyA9IFwiXCI7XG4gIGxldCBzdWNjZXNzU3R5bGVzID0gXCJcIjtcbiAgaWYgKGVycm9ycy5sZW5ndGggPiAwKSB7XG4gICAgZXJyb3JIVE1MID0gZXJyb3JzLm1hcCgodmFsKSA9PiA8bGkga2V5PXt2YWx9Pnt2YWx9PC9saT4pO1xuICAgIGVycm9yU3R5bGVzID0ge1xuICAgICAgY29sb3I6IFwicmVkXCIsXG4gICAgICBmb250U2l6ZTogXCIxNHB4XCIsXG4gICAgICBtYXJnaW5Ub3A6IFwiMjZweFwiLFxuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgc3VjY2Vzc1N0eWxlcyA9IHtcbiAgICAgIGNvbG9yOiBcImdyZWVuXCIsXG4gICAgICBmb250U2l6ZTogXCIxNHB4XCIsXG4gICAgICBtYXJnaW5Ub3A6IFwiMjZweFwiLFxuICAgIH07XG4gIH1cblxuICBjb25zb2xlLmxvZyhcImVkaXRVc2VyRGF0YVwiLCBlZGl0VXNlckRhdGEpO1xuXG4gIHJldHVybiAoXG4gICAgPE1vZGFsV3JhcHBlcj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtZGlhbG9nXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtY29udGVudFwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtaGVhZGVyXCI+XG4gICAgICAgICAgICA8aDQgY2xhc3NOYW1lPVwibW9kYWwtdGl0bGVcIj5BZGQgVXNlcjwvaDQ+XG4gICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjbG9zZSBjbG9zZS1idG5cIlxuICAgICAgICAgICAgICBvbkNsaWNrPXtjbG9zZVBvcFVwSGFuZGxlcn1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCI+PGkgY2xhc3NOYW1lPVwiZmEgZmEtdGltZXNcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+IENhbmNlbCA8L3NwYW4+XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1vZGFsLWJvZHlcIj5cbiAgICAgICAgICAgIDxmb3JtIG9uU3VibWl0PXtzdWJtaXRGb3JtSGFuZGxlcn0+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBzcGFjZS1iZXR3ZWVuXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtNlwiPlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbG9hdGluZy1sYWJlbC1ncm91cCBpbnB1dGdyb3VwXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxvYXRpbmctbGFiZWwtaW5wdXRcIj5cblxuICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtmb3JtRGF0YSAmJiBmb3JtRGF0YS5maXJzdE5hbWUgIT09IFwiXCIgPyBcImZvcm0tY29udHJvbCBoYXMtdmFsdWVcIiA6IFwiZm9ybS1jb250cm9sXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwiZmlyc3ROYW1lXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtmb3JtRGF0YSAmJiBmb3JtRGF0YS5maXJzdE5hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfVxuICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cImxhYmVsXCIgZm9yPVwiZXhhbXBsZUlucHV0RW1haWwxXCI+Rmlyc3QgTmFtZTwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtNlwiPlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbG9hdGluZy1sYWJlbC1ncm91cCBpbnB1dGdyb3VwXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxvYXRpbmctbGFiZWwtaW5wdXRcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17Zm9ybURhdGEgJiYgZm9ybURhdGEubGFzdE5hbWUgIT09IFwiXCIgPyBcImZvcm0tY29udHJvbCBoYXMtdmFsdWVcIiA6IFwiZm9ybS1jb250cm9sXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwibGFzdE5hbWVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e2Zvcm1EYXRhICYmIGZvcm1EYXRhLmxhc3ROYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZUNoYW5nZX1cbiAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzc05hbWU9XCJsYWJlbFwiIGZvcj1cImV4YW1wbGVJbnB1dEVtYWlsMVwiPkxhc3QgTmFtZTwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggc3BhY2UtYmV0d2VlblwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLTEyXCI+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsb2F0aW5nLWxhYmVsLWdyb3VwIGlucHV0Z3JvdXBcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbG9hdGluZy1sYWJlbC1pbnB1dFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cImVtYWlsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17Zm9ybURhdGEgJiYgZm9ybURhdGEuZW1haWwgIT09IFwiXCIgPyBcImZvcm0tY29udHJvbCBoYXMtdmFsdWVcIiA6IFwiZm9ybS1jb250cm9sXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwiZW1haWxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e2Zvcm1EYXRhICYmIGZvcm1EYXRhLmVtYWlsfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWRcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwibGFiZWxcIiBmb3I9XCJleGFtcGxlSW5wdXRFbWFpbDFcIj5FbWFpbCBJZDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggc3BhY2UtYmV0d2VlblwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLTZcIj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxvYXRpbmctbGFiZWwtZ3JvdXAgaW5wdXRncm91cFwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsb2F0aW5nLWxhYmVsLWlucHV0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwiZGF0ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2Zvcm1EYXRhLmRvYiAhPT0gXCJcIiA/IFwiZm9ybS1jb250cm9sIGhhcy12YWx1ZVwiIDogXCJmb3JtLWNvbnRyb2xcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJkb2JcIlxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e2Zvcm1EYXRhLmRvYn1cbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbj1cIjE5NTAtMDEtMDFcIlxuICAgICAgICAgICAgICAgICAgICAgICAgbWF4PVwiMjAwMC0xMi0zMVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfVxuICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cImxhYmVsXCIgZm9yPVwiZXhhbXBsZUlucHV0RW1haWwxXCI+RE9CPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC02XCI+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsb2F0aW5nLWxhYmVsLWdyb3VwIGlucHV0Z3JvdXBcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbG9hdGluZy1sYWJlbC1pbnB1dFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cIm51bWJlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2Zvcm1EYXRhICYmIGZvcm1EYXRhLnBob25lTnVtYmVyICE9PSBcIlwiID8gXCJmb3JtLWNvbnRyb2wgaGFzLXZhbHVlXCIgOiBcImZvcm0tY29udHJvbFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cInBob25lTnVtYmVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtmb3JtRGF0YSAmJiBmb3JtRGF0YS5waG9uZU51bWJlcn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfVxuICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cImxhYmVsXCIgZm9yPVwiZXhhbXBsZUlucHV0RW1haWwxXCI+TW9iaWxlPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBzcGFjZS1iZXR3ZWVuXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtMTJcIj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxvYXRpbmctbGFiZWwtZ3JvdXAgaW5wdXRncm91cFwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsb2F0aW5nLWxhYmVsLWlucHV0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2Zvcm1EYXRhICYmIGZvcm1EYXRhPy5hZGRyZXNzMSAhPT0gXCJcIiA/IFwiZm9ybS1jb250cm9sIGhhcy12YWx1ZVwiIDogXCJmb3JtLWNvbnRyb2xcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJhZGRyZXNzMVwiXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17Zm9ybURhdGEgJiYgZm9ybURhdGEuYWRkcmVzczF9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZUNoYW5nZX1cbiAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzc05hbWU9XCJsYWJlbFwiIGZvcj1cImV4YW1wbGVJbnB1dEVtYWlsMVwiPkFkZHJlc3MxPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBzcGFjZS1iZXR3ZWVuXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtMTJcIj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxvYXRpbmctbGFiZWwtZ3JvdXAgaW5wdXRncm91cFwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsb2F0aW5nLWxhYmVsLWlucHV0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2Zvcm1EYXRhICYmIGZvcm1EYXRhPy5hZGRyZXNzMiAhPSBcIlwiID8gXCJmb3JtLWNvbnRyb2wgaGFzLXZhbHVlXCIgOiBcImZvcm0tY29udHJvbFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cImFkZHJlc3MyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtmb3JtRGF0YSAmJiBmb3JtRGF0YS5hZGRyZXNzMn1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwibGFiZWxcIiBmb3I9XCJleGFtcGxlSW5wdXRFbWFpbDFcIj5BZGRyZXNzMjwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggc3BhY2UtYmV0d2VlblwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLTZcIj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxvYXRpbmctbGFiZWwtZ3JvdXAgaW5wdXRncm91cFwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsb2F0aW5nLWxhYmVsLWlucHV0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2Zvcm1EYXRhICYmIGZvcm1EYXRhPy5sYW5kbWFyayAhPT0gXCJcIiA/IFwiZm9ybS1jb250cm9sIGhhcy12YWx1ZVwiIDogXCJmb3JtLWNvbnRyb2xcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJsYW5kbWFya1wiXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17Zm9ybURhdGEgJiYgZm9ybURhdGEubGFuZG1hcmt9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfVxuICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cImxhYmVsXCIgZm9yPVwiZXhhbXBsZUlucHV0RW1haWwxXCI+TGFuZCBNYXJrPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC02XCI+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsb2F0aW5nLWxhYmVsLWdyb3VwIGlucHV0Z3JvdXBcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbG9hdGluZy1sYWJlbC1pbnB1dFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cIm51bWJlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2Zvcm1EYXRhICYmIGZvcm1EYXRhPy5waW5jb2RlICE9PSBcIlwiID8gXCJmb3JtLWNvbnRyb2wgaGFzLXZhbHVlXCIgOiBcImZvcm0tY29udHJvbFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cInBpbmNvZGVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e2Zvcm1EYXRhICYmIGZvcm1EYXRhLnBpbmNvZGV9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZUNoYW5nZX1cbiAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzc05hbWU9XCJsYWJlbFwiIGZvcj1cImV4YW1wbGVJbnB1dEVtYWlsMVwiPlBpbiBDb2RlPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBzcGFjZS1iZXR3ZWVuXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtMTJcIj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxvYXRpbmctbGFiZWwtZ3JvdXAgaW5wdXRncm91cFwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsb2F0aW5nLWxhYmVsLWlucHV0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtlZGl0VXNlckRhdGEgJiYgZWRpdFVzZXJEYXRhLnJvbGUgIT09IFwiXCIgPyBcImZvcm0tY29udHJvbCBoYXMtdmFsdWVcIiA6IFwiZm9ybS1jb250cm9sXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwicm9sZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZUNoYW5nZX1cbiAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiXCI+Q2hvb3NlIFJvbGU8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9XCJQVE1fVkVORE9SXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ9e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRVc2VyRGF0YSAmJiBlZGl0VXNlckRhdGEucm9sZSA9PSBcIlBUTV9WRU5ET1JcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IGZhbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgVmVuZG9yXG4gICAgICAgICAgICAgICAgICAgICAgICA8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9XCJQVE1fU1VCX0FETUlOXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ9e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRVc2VyRGF0YSAmJiBlZGl0VXNlckRhdGEucm9sZSA9PSBcIlBUTV9TVUJfQURNSU5cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IGZhbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgU3ViIEFkbWluXG4gICAgICAgICAgICAgICAgICAgICAgICA8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD5cbiAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwibGFiZWxcIiBmb3I9XCJleGFtcGxlRm9ybUNvbnRyb2xTZWxlY3QxXCI+VXNlciBSb2xlPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBnYXAxNlwiPlxuICAgICAgICAgICAgICAgIDxCdXR0b24gdHlwZT1cInN1Ym1pdFwiIGNsYXNzTmFtZT1cImJ0bi1zdWNjZXNzIHdkMjQ4XCI+XG4gICAgICAgICAgICAgICAgICB7ZWRpdFVzZXJEYXRhID8gXCJVcGRhdGUgVXNlclwiIDogXCJTYXZlIFVzZXJcIn1cbiAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Zvcm0+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9Nb2RhbFdyYXBwZXI+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBBZGRVc2VyRm9ybTtcblxuXG5cbi8vIHttb2RhbCAmJlxuLy8gICA8TW9kYWxXcmFwcGVyPlxuLy8gICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtZGlhbG9nXCI+XG4vLyAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1vZGFsLWNvbnRlbnRcIj5cbi8vICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC1oZWFkZXJcIj5cbi8vICAgICAgICAgICA8aDQ+Q2hhbmdlIEFjdGl2ZSBRUiBDb2RlPC9oND5cbi8vICAgICAgICAgPC9kaXY+XG4vLyAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtYm9keVwiPlxuLy8gICAgICAgICAgIDxDaGFuZ2VRcldyYXBwZXI+XG4vLyAgICAgICAgICAgICA8c2VsZWN0XG4vLyAgICAgICAgICAgICAgIG5hbWU9XCJxckNvZGVcIlxuLy8gICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmb3JtLWNvbnRyb2xcIlxuLy8gICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFFyQ29kZShlLnRhcmdldC52YWx1ZSl9XG4vLyAgICAgICAgICAgICA+XG4vLyAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJcIj5TZWxlY3QgUVIgQ29kZTwvb3B0aW9uPlxuLy8gICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiUVIgQ29kZSAxXCI+UVIgQ29kZSAxPC9vcHRpb24+XG4vLyAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJRUiBDb2RlIDJcIj5RUiBDb2RlIDI8L29wdGlvbj5cbi8vICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIlFSIENvZGUgM1wiPlFSIENvZGUgMzwvb3B0aW9uPlxuLy8gICAgICAgICAgICAgPC9zZWxlY3Q+XG4vLyAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInFyLWltYWdlIGZsZXggaXRlbS1jZW50ZXIganVzdGlmeS1jZW50ZXJcIj5cbi8vICAgICAgICAgICAgICAgPGltZyBzcmM9XCJodHRwczovL3N0b3JhZ2UuZ29vZ2xlYXBpcy5jb20vcHRtLWFzc2V0cy1wcm9kL2ljb25zL3llcy1wYXl0bS5wbmdcIiBhbHQ9XCJcIiAvPlxuLy8gICAgICAgICAgICAgPC9kaXY+XG4vLyAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbS1jZW50ZXIganVzdGlmeS1jZW50ZXJcIj5cbi8vICAgICAgICAgICAgICAgPEJ1dHRvbiBjbGFzc05hbWU9XCJidG4tc3VjY2Vzc1wiPkNoYW5nZSBRUiBDb2RlPC9CdXR0b24+XG4vLyAgICAgICAgICAgICA8L2Rpdj5cbi8vICAgICAgICAgICA8L0NoYW5nZVFyV3JhcHBlcj5cbi8vICAgICAgICAgPC9kaXY+XG4vLyAgICAgICA8L2Rpdj5cbi8vICAgICA8L2Rpdj5cblxuLy8gICA8L01vZGFsV3JhcHBlcj5cbiIsImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUmVxdWVzdCBmcm9tIFwiLi4vLi4vdXRpbHMvUmVxdWVzdFwiO1xuaW1wb3J0IHVybHMgZnJvbSBcIi4uLy4uL3V0aWxzL3VybHNcIjtcbmltcG9ydCB7IGdldEF1dGhUb2tlbiB9IGZyb20gXCIuLi8uLi91dGlscy9jb21tb25cIjtcbmltcG9ydCBheGlvcyBmcm9tIFwiYXhpb3NcIjtcbmltcG9ydCB7IEJ1dHRvbiwgTW9kYWxXcmFwcGVyIH0gZnJvbSBcIi4uLy4uL0NvbXBvbmVudHMvVUkvU3R5bGVkQ29uc3RhbnRzXCI7XG5cbmNvbnN0IFBlcm1pc3Npb25Gb3JtID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHsgdXNlcklkLCBjbG9zZVBvcFVwSGFuZGxlciB9ID0gcHJvcHM7XG4gIGNvbnN0IFtwZXJtaXNzaW9ucywgc2V0UGVybWlzc2lvbnNdID0gdXNlU3RhdGUoXCJcIik7XG4gIGNvbnN0IFttZXNzYWdlLCBzZXRNZXNzYWdlXSA9IHVzZVN0YXRlKHsgZXJyb3I6IFwiXCIsIHN1Y2Nlc3M6IFwiXCIgfSk7XG5cbiAgY29uc3QgZmV0Y2hQZXJtaXNzaW9ucyA9ICgpID0+IHtcbiAgICBjb25zdCBzdWNjZXNzSGFuZGxlciA9IChyZXMpID0+IHtcbiAgICAgIC8vIGNvbnNvbGUubG9nKFwic3VjY2Vzc1wiLCByZXMpO1xuICAgICAgaWYgKHJlcykge1xuICAgICAgICBzZXRQZXJtaXNzaW9ucyhyZXMpO1xuICAgICAgICB1cGRhdGVGb3JtRGF0YShyZXMuYWN0aXZlUGVybWlzc2lvbnMpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgaGVhZGVyczoge1xuICAgICAgICBBdXRob3JpemF0aW9uOiBnZXRBdXRoVG9rZW4oKSxcbiAgICAgICAgXCJhcGktQXV0aG9yaXphdGlvblwiOiBnZXRBdXRoVG9rZW4oXCJhcGktQXV0aG9yaXphdGlvblwiKSxcbiAgICAgIH0sXG4gICAgfTtcblxuICAgIGNvbnN0IHByb21pc2UxID0gYXhpb3NcbiAgICAgIC5nZXQoYCR7dXJscy5sb2dpbi5CQVNFX1VSTH0ke3VybHMuVXNlci5HRVRfQUxMX1BFUk1JU0lTU0lPTlN9YCwgb3B0aW9ucylcbiAgICAgIC5jYXRjaCgoKSA9PiBcIlwiKTtcblxuICAgIGNvbnN0IHByb21pc2UyID0gYXhpb3NcbiAgICAgIC5nZXQoXG4gICAgICAgIGAke3VybHMubG9naW4uQkFTRV9VUkx9JHt1cmxzLlVzZXIuTUFOQUdFX1VTRVJfUEVSTUlTU0lPTlN9P3VzZXJOYW1lPSR7dXNlcklkfWAsXG4gICAgICAgIG9wdGlvbnNcbiAgICAgIClcbiAgICAgIC5jYXRjaCgoKSA9PiBcIlwiKTtcblxuICAgIGF4aW9zXG4gICAgICAuYWxsKFtwcm9taXNlMSwgcHJvbWlzZTJdKVxuICAgICAgLnRoZW4oXG4gICAgICAgIGF4aW9zLnNwcmVhZCgoLi4ucmVzcG9uc2VzKSA9PiB7XG4gICAgICAgICAgY29uc3QgYWxsUGVybWlzc2lvbnMgPSByZXNwb25zZXNbMF0gJiYgcmVzcG9uc2VzWzBdLmRhdGEuZGF0YTtcbiAgICAgICAgICBjb25zdCBhY3RpdmVQZXJtaXNzaW9ucyA9IHJlc3BvbnNlc1sxXSAmJiByZXNwb25zZXNbMV0uZGF0YS5kYXRhO1xuXG4gICAgICAgICAgc3VjY2Vzc0hhbmRsZXIoe1xuICAgICAgICAgICAgYWxsUGVybWlzc2lvbnM6IGFsbFBlcm1pc3Npb25zLFxuICAgICAgICAgICAgYWN0aXZlUGVybWlzc2lvbnM6IGFjdGl2ZVBlcm1pc3Npb25zLFxuICAgICAgICAgIH0pO1xuICAgICAgICB9KVxuICAgICAgKVxuICAgICAgLmNhdGNoKChlcnJvcnMpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coXCJyZXNwb25zZU9uZSBlcnJvcnNcIiwgZXJyb3JzKTtcbiAgICAgIH0pO1xuICB9O1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgZmV0Y2hQZXJtaXNzaW9ucygpO1xuICB9LCBbXSk7XG5cbiAgY29uc3QgaGFuZGxlQ2xpY2sgPSAoZXZlbnQsIHBlcm1LZXkpID0+IHtcbiAgICAvLyBjb25zb2xlLmxvZyhcbiAgICAvLyAgIGFjdGl2ZVBlcm1pc3Npb25zLFxuICAgIC8vICAgcGVybUtleSxcbiAgICAvLyAgIGV2ZW50LnRhcmdldC5uYW1lLFxuICAgIC8vICAgZXZlbnQudGFyZ2V0LmNoZWNrZWRcbiAgICAvLyApO1xuXG4gICAgY29uc3QgYWN0aXZlUGVybWlzc2lvbnNDb3B5ID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShhY3RpdmVQZXJtaXNzaW9ucykpO1xuICAgIGlmIChldmVudC50YXJnZXQuY2hlY2tlZCkge1xuICAgICAgaWYgKGFjdGl2ZVBlcm1pc3Npb25zQ29weVtwZXJtS2V5XSkge1xuICAgICAgICBhY3RpdmVQZXJtaXNzaW9uc0NvcHlbcGVybUtleV0ucHVzaChldmVudC50YXJnZXQubmFtZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhY3RpdmVQZXJtaXNzaW9uc0NvcHlbcGVybUtleV0gPSBbZXZlbnQudGFyZ2V0Lm5hbWVdO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBmaWx0ZXJlZEFycmF5ID0gYWN0aXZlUGVybWlzc2lvbnNDb3B5W3Blcm1LZXldLmZpbHRlcihcbiAgICAgICAgKGl0ZW0pID0+IGl0ZW0gIT0gZXZlbnQudGFyZ2V0Lm5hbWVcbiAgICAgICk7XG5cbiAgICAgIGFjdGl2ZVBlcm1pc3Npb25zQ29weVtwZXJtS2V5XSA9IGZpbHRlcmVkQXJyYXk7XG4gICAgfVxuICAgIHNldFBlcm1pc3Npb25zKHtcbiAgICAgIC4uLnBlcm1pc3Npb25zLFxuICAgICAgYWN0aXZlUGVybWlzc2lvbnM6IGFjdGl2ZVBlcm1pc3Npb25zQ29weSxcbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCBzdWJtaXRGb3JtSGFuZGxlciA9IChldmVudCkgPT4ge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgeyBhY3RpdmVQZXJtaXNzaW9ucyB9ID0gcGVybWlzc2lvbnM7XG5cbiAgICBjb25zb2xlLmxvZyhcInN1Ym1pdEZvcm1IYW5kbGVyXCIsIGFjdGl2ZVBlcm1pc3Npb25zKTtcblxuICAgIGxldCBuZXdQZXJtaXNzaW9ucyA9IFtdO1xuXG4gICAgT2JqZWN0LmtleXMoYWN0aXZlUGVybWlzc2lvbnMpLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgbmV3UGVybWlzc2lvbnMgPSBuZXdQZXJtaXNzaW9ucy5jb25jYXQoYWN0aXZlUGVybWlzc2lvbnNba2V5XSk7XG4gICAgfSk7XG5cbiAgICBjb25zb2xlLmxvZyhcIm5ld1Blcm1pc3Npb25zXCIsIG5ld1Blcm1pc3Npb25zKTtcbiAgICBjb25zdCBmb3JtRGF0YSA9IHtcbiAgICAgIHVzZXJOYW1lOiB1c2VySWQsXG4gICAgICBhZGRBcGlDb2RlOiBuZXdQZXJtaXNzaW9ucyxcbiAgICB9O1xuXG4gICAgY29uc3Qgc3VibWl0U3VjY2VzcyA9IChyZXMpID0+IHtcbiAgICAgIGlmIChyZXMuc3VjY2Vzcykge1xuICAgICAgICBzZXRNZXNzYWdlKHsgc3VjY2VzczogcmVzLm1zZywgZXJyb3I6IFwiXCIgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRNZXNzYWdlKHsgZXJyb3I6IHJlcy5tc2csIHN1Y2Nlc3M6IFwiXCIgfSk7XG4gICAgICB9XG4gICAgfTtcbiAgICBjb25zdCBzdWJtaXRFcnJvciA9IChyZXMpID0+IHtcbiAgICAgIHNldE1lc3NhZ2UoeyBlcnJvcjogcmVzLm1zZywgc3VjY2VzczogXCJcIiB9KTtcbiAgICB9O1xuXG4gICAgY29uc3QgYXBpID0gbmV3IFJlcXVlc3QoXCJcIiwgc3VibWl0U3VjY2Vzcywgc3VibWl0RXJyb3IsIGZhbHNlKTtcbiAgICByZXR1cm4gYXBpLnBvc3QoXG4gICAgICB1cmxzLmxvZ2luLkJBU0VfVVJMICsgdXJscy5Vc2VyLk1BTkFHRV9VU0VSX1BFUk1JU1NJT05TLFxuICAgICAgZm9ybURhdGFcbiAgICApO1xuICB9O1xuXG4gIGNvbnN0IHsgYWxsUGVybWlzc2lvbnMsIGFjdGl2ZVBlcm1pc3Npb25zIH0gPSBwZXJtaXNzaW9ucztcbiAgY29uc29sZS5sb2coXCJwZXJtaXNzaW9uc1wiLCBhY3RpdmVQZXJtaXNzaW9ucyk7XG5cbiAgY29uc3QgZGF0YSA9IFtdO1xuXG4gIGNvbnN0IHBlcm1LZXlzID0gYWxsUGVybWlzc2lvbnMgPyBPYmplY3Qua2V5cyhhbGxQZXJtaXNzaW9ucykgOiBcIlwiO1xuXG4gIHJldHVybiAoXG4gICAgPE1vZGFsV3JhcHBlcj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtZGlhbG9nXCIgcm9sZT1cImRvY3VtZW50XCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtY29udGVudFwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtaGVhZGVyXCI+XG4gICAgICAgICAgICA8aDQgY2xhc3NOYW1lPVwibW9kYWwtdGl0bGVcIiBpZD1cImV4YW1wbGVNb2RhbExhYmVsXCI+XG4gICAgICAgICAgICAgIE1hbmFnZSBQZXJtaXNzaW9uc1xuICAgICAgICAgICAgPC9oND5cbiAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNsb3NlIGNsb3NlLWJ0blwiXG4gICAgICAgICAgICAgIG9uQ2xpY2s9e2Nsb3NlUG9wVXBIYW5kbGVyfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8c3BhbiBhcmlhLWhpZGRlbj1cInRydWVcIj48aSBjbGFzc05hbWU9XCJmYSBmYS10aW1lc1wiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjwvaT4gQ2FuY2VsIDwvc3Bhbj5cbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC1ib2R5XCI+XG4gICAgICAgICAgICA8Zm9ybSBvblN1Ym1pdD17c3VibWl0Rm9ybUhhbmRsZXJ9PlxuXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicGIxNlwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXttZXNzYWdlLnN1Y2Nlc3MgPyBcImRvbmVcIiA6IFwiZmFpbFwifT5cbiAgICAgICAgICAgICAgICAgIHttZXNzYWdlLnN1Y2Nlc3MgfHwgbWVzc2FnZS5lcnJvcn1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICB7cGVybUtleXMgJiYgQXJyYXkuaXNBcnJheShwZXJtS2V5cykgPyAoXG4gICAgICAgICAgICAgICAgICBwZXJtS2V5cy5tYXAoKHBlcm1LZXkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzTmFtZT1cInB5OFwiPntwZXJtS2V5fTwvaDY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3NOYW1lPVwicGwxNlwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICB7YWxsUGVybWlzc2lvbnMgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGxQZXJtaXNzaW9uc1twZXJtS2V5XSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFycmF5LmlzQXJyYXkoYWxsUGVybWlzc2lvbnNbcGVybUtleV0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBhbGxQZXJtaXNzaW9uc1twZXJtS2V5XS5tYXAoKGl0ZW0pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9XCJweTRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJjaGVja2JveFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPXtpdGVtfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tlZD17XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGl2ZVBlcm1pc3Npb25zICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZlUGVybWlzc2lvbnNbcGVybUtleV0gJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY3RpdmVQZXJtaXNzaW9uc1twZXJtS2V5XS5pbmNsdWRlcyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBmYWxzZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KGV2ZW50KSA9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVDbGljayhldmVudCwgcGVybUtleSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7IG1hcmdpblJpZ2h0OiBcIjEwcHhcIiB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2l0ZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9fL2csIFwiIFwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoXCJQVE0gXCIsIFwiXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogXCJcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiBcIjE2N3B4IDAgMTU2cHggMFwiLFxuICAgICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiBcIjI2cHhcIixcbiAgICAgICAgICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgY29sb3I6IFwiIzBhYWFiYVwiLFxuICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICBMb2FkaW5nLi4uLlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBnYXAxNlwiPlxuICAgICAgICAgICAgICAgIDxCdXR0b24gdHlwZT1cInN1Ym1pdFwiIGNsYXNzTmFtZT1cImJ0bi1zdWNjZXNzIHdkMjQ4XCI+XG4gICAgICAgICAgICAgICAgICBVcGRhdGUgUGVybWlzc2lvbnNcbiAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Zvcm0+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9Nb2RhbFdyYXBwZXI+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBQZXJtaXNzaW9uRm9ybTtcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlUmVmIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgQVBJUyBmcm9tIFwiLi4vLi4vdXRpbHMvdXJsc1wiO1xuaW1wb3J0IFJlcXVlc3QgZnJvbSBcIi4uLy4uL3V0aWxzL1JlcXVlc3RcIjtcbmltcG9ydCB7IEJ1dHRvbiwgTW9kYWxXcmFwcGVyIH0gZnJvbSBcIi4uLy4uL0NvbXBvbmVudHMvVUkvU3R5bGVkQ29uc3RhbnRzXCI7XG5cbmZ1bmN0aW9uIEFkbWluRnVuZEZvcm0oe1xuICB1c2VySWQsXG4gIGNsb3NlQWRtaW5GdW5kRm9ybSxcbiAgc2V0U3RhdHVzTXNnLFxuICBzdWNjZXNzQ2FsbEJhY2ssXG59KSB7XG4gIGNvbnN0IFtmb3JtRGF0YSwgc2V0Rm9ybURhdGFdID0gdXNlU3RhdGUoe1xuICAgIGFtb3VudDogXCJcIixcbiAgICByZW1hcms6IFwiXCIsXG4gICAgZXdhbGxldFR5cGU6IFwiTUFJTl9XQUxMRVRcIixcbiAgICB1c2VySWQ6IHVzZXJJZCxcbiAgfSk7XG4gIGNvbnN0IHdhbGxldFNlbGVjdCA9IHVzZVJlZigpO1xuXG4gIGNvbnN0IHN1Ym1pdEZvcm1IYW5kbGVyID0gKGV2ZW50KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCB3YWxsZXRBY3Rpb24gPSB3YWxsZXRTZWxlY3QuY3VycmVudC52YWx1ZTtcbiAgICBjb25zdCByZXF1ZXN0ID0gbmV3IFJlcXVlc3QoXCJcIiwgc3VjY2Vzc0hhbmRsZXIsIGVycm9ySGFuZGxlciwgdHJ1ZSk7XG4gICAgbGV0IHdhbGxldEFQSSA9IGAke0FQSVMubG9naW4uQkFTRV9VUkx9JHtBUElTLldhbGxldC5NQU5BR0VfV0FMTEVUfWAucmVwbGFjZShcbiAgICAgIFwie2FjdGlvblR5cGV9XCIsXG4gICAgICB3YWxsZXRBY3Rpb25cbiAgICApO1xuXG4gICAgZm9ybURhdGEuYW1vdW50ID0gcGFyc2VJbnQoZm9ybURhdGEuYW1vdW50KTtcbiAgICByZXF1ZXN0LnBvc3Qod2FsbGV0QVBJLCBmb3JtRGF0YSk7XG4gIH07XG4gIGNvbnN0IHN1Y2Nlc3NIYW5kbGVyID0gKHJlc3BvbnNlLCBoZWFkZXJzKSA9PiB7XG4gICAgaWYgKHJlc3BvbnNlLnN1Y2Nlc3MpIHtcbiAgICAgIGNsb3NlQWRtaW5GdW5kRm9ybSgpO1xuICAgICAgc3VjY2Vzc0NhbGxCYWNrKCk7XG4gICAgICBzZXRTdGF0dXNNc2coXCJBY3Rpb24gdG8gd2FsbGV0IGlzIHN1Ym1pdHRlZCBzdWNjZXNzZnVsbHlcIik7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGVycm9ySGFuZGxlciA9IChlcnJvcikgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwiZmFpbGVkIGNhbGxcIik7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlQ2hhbmdlID0gKGV2ZW50KSA9PiB7XG4gICAgc2V0Rm9ybURhdGEoKHByZXZTdGF0ZSkgPT4ge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4ucHJldlN0YXRlLFxuICAgICAgICBbZXZlbnQudGFyZ2V0Lm5hbWVdOiBldmVudC50YXJnZXQudmFsdWUsXG4gICAgICB9O1xuICAgIH0pO1xuICB9O1xuXG4gIGNvbnNvbGUubG9nKFwiZm9ybURhdGFcIiwgZm9ybURhdGEpO1xuXG4gIHJldHVybiAoXG4gICAgPE1vZGFsV3JhcHBlcj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtZGlhbG9nXCIgcm9sZT1cImRvY3VtZW50XCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtY29udGVudFwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtaGVhZGVyXCI+XG4gICAgICAgICAgICA8aDQgY2xhc3NOYW1lPVwibW9kYWwtdGl0bGVcIj5cbiAgICAgICAgICAgICAgQWRkIEZ1bmRcbiAgICAgICAgICAgIDwvaDQ+XG4gICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjbG9zZSBjbG9zZS1idG5cIlxuICAgICAgICAgICAgICBvbkNsaWNrPXtjbG9zZUFkbWluRnVuZEZvcm19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxzcGFuIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjxpIGNsYXNzTmFtZT1cImZhIGZhLXRpbWVzXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9pPiBDYW5jZWwgPC9zcGFuPlxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1vZGFsLWJvZHlcIj5cbiAgICAgICAgICAgIDxmb3JtIG9uU3VibWl0PXsoZXZlbnQpID0+IHN1Ym1pdEZvcm1IYW5kbGVyKGV2ZW50KX0+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbG9hdGluZy1sYWJlbC1ncm91cCBpbnB1dGdyb3VwXCI+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggc3BhY2UtYmV0d2VlbiBmbG9hdGluZy1sYWJlbC1pbnB1dFwiPlxuXG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkXG4gICAgICAgICAgICAgICAgICAgICAgdHlwZT1cIm51bWJlclwiXG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZm9ybS1jb250cm9sXCJcbiAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwiYW1vdW50XCJcbiAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwibGFiZWxcIj5BbW91bnQ8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsb2F0aW5nLWxhYmVsLWdyb3VwIGlucHV0Z3JvdXBcIj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBzcGFjZS1iZXR3ZWVuIGZsb2F0aW5nLWxhYmVsLWlucHV0XCI+XG5cbiAgICAgICAgICAgICAgICAgICAgPHNlbGVjdFxuICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkXG4gICAgICAgICAgICAgICAgICAgICAgcmVmPXt3YWxsZXRTZWxlY3R9XG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZm9ybS1jb250cm9sXCJcbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJcIj5DaG9vc2UgQWN0aW9uPC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cImRlcG9zaXRcIj5EZXBvc2l0PC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cImRlYml0XCI+V2l0aGRyYXc8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiaG9sZFwiPkhvbGQ8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiaG9sZC13aXRoZHJhd1wiPkJsb2NrPC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwibGFiZWxcIj5BY3Rpb248L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsb2F0aW5nLWxhYmVsLWdyb3VwIGlucHV0Z3JvdXBcIj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBzcGFjZS1iZXR3ZWVuIGZsb2F0aW5nLWxhYmVsLWlucHV0XCI+XG5cbiAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWRcbiAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZm9ybS1jb250cm9sXCJcbiAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwicmVtYXJrXCJcbiAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwibGFiZWxcIj5SZW1hcms8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbS1jZW50ZXIganVzdGlmeS1jZW50ZXIgZ2FwMTZcIj5cbiAgICAgICAgICAgICAgICA8QnV0dG9uIHR5cGU9XCJzdWJtaXRcIiBjbGFzc05hbWU9XCJidG4tc3VjY2VzcyB3ZDI0OFwiPlxuICAgICAgICAgICAgICAgICAgQWRkIEZ1bmRcbiAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Zvcm0+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9Nb2RhbFdyYXBwZXI+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IEFkbWluRnVuZEZvcm07XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IEFQSVMgZnJvbSBcIi4uLy4uL3V0aWxzL3VybHNcIjtcbmltcG9ydCBSZXF1ZXN0IGZyb20gXCIuLi8uLi91dGlscy9SZXF1ZXN0XCI7XG5pbXBvcnQgeyBNb2RhbFdyYXBwZXIgfSBmcm9tIFwiLi4vLi4vQ29tcG9uZW50cy9VSS9TdHlsZWRDb25zdGFudHNcIjtcblxuZnVuY3Rpb24gV2FsbGV0RGV0YWlscyh7XG4gIHVzZXJJZCxcbiAgY2xvc2VUcmFuc2FjdGlvbkhhbmRsZXIsXG4gIHN1Y2Nlc3NDYWxsQmFjayxcbiAgdXNlcldhbGxldCxcbn0pIHtcbiAgY29uc3QgZmV0Y2hXYWxsZXREZXRhaWxzID0gKCkgPT4ge1xuICAgIGNvbnN0IHJlcXVlc3QgPSBuZXcgUmVxdWVzdChcIlwiLCBzdWNjZXNzSGFuZGxlciwgZXJyb3JIYW5kbGVyLCB0cnVlKTtcbiAgICBsZXQgd2FsbGV0QVBJID0gYCR7QVBJUy5sb2dpbi5CQVNFX1VSTH0ke0FQSVMuV2FsbGV0LlZJRVdfVFJBTlNBQ1RJT05TfWAucmVwbGFjZShcbiAgICAgIFwie3VzZXJJZH1cIixcbiAgICAgIHVzZXJXYWxsZXQudXNlck5hbWVcbiAgICApO1xuXG4gICAgdXNlcldhbGxldC51c2VySWQgPSBwYXJzZUludCh1c2VyV2FsbGV0LnVzZXJJZCk7XG4gICAgcmVxdWVzdC5nZXQod2FsbGV0QVBJKTtcbiAgfTtcbiAgY29uc3Qgc3VjY2Vzc0hhbmRsZXIgPSAocmVzcG9uc2UsIGhlYWRlcnMpID0+IHtcbiAgICBpZiAocmVzcG9uc2Uuc3VjY2Vzcykge1xuICAgICAgc2V0T2J0YWluZWRXYWxsZXREZXRhaWxzKHJlc3BvbnNlLmRhdGEpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBbb2J0YWluZWRXYWxsZXREZXRhaWxzLCBzZXRPYnRhaW5lZFdhbGxldERldGFpbHNdID0gdXNlU3RhdGUoW10pO1xuXG4gIGNvbnN0IGVycm9ySGFuZGxlciA9IChlcnJvcikgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwiZmFpbGVkIGNhbGxcIik7XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBmZXRjaFdhbGxldERldGFpbHMoKTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPE1vZGFsV3JhcHBlcj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtZGlhbG9nXCIgcm9sZT1cImRvY3VtZW50XCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtY29udGVudFwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtaGVhZGVyXCI+XG4gICAgICAgICAgICA8aDUgY2xhc3NOYW1lPVwibW9kYWwtdGl0bGVcIiBpZD1cImV4YW1wbGVNb2RhbExhYmVsXCI+XG4gICAgICAgICAgICAgIERldGFpbHNcbiAgICAgICAgICAgIDwvaDU+XG4gICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjbG9zZSBjbG9zZS1idG5cIlxuICAgICAgICAgICAgICBkYXRhLWRpc21pc3M9XCJtb2RhbFwiXG4gICAgICAgICAgICAgIGFyaWEtbGFiZWw9XCJDbG9zZSBjbG9zZS1idG5cIlxuICAgICAgICAgICAgICBvbkNsaWNrPXtjbG9zZVRyYW5zYWN0aW9uSGFuZGxlcn1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCI+PGkgY2xhc3NOYW1lPVwiZmEgZmEtdGltZXNcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+IENhbmNlbCA8L3NwYW4+XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1vZGFsLWJvZHlcIj5cbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgIHsvKiA8dHI+XG4gICAgICAgICAgICAgICAgPHRoPlVzZXIgSWQ8L3RoPlxuICAgICAgICAgICAgICAgIDx0aD5UcmFuc2FjdGlvbiBUeXBlPC90aD5cbiAgICAgICAgICAgICAgICA8dGg+QW1vdW50PC90aD5cbiAgICAgICAgICAgICAgICA8dGg+UmVtYXJrcyA8L3RoPlxuICAgICAgICAgICAgICAgIDx0aD5EYXRlPC90aD5cbiAgICAgICAgICAgICAgICA8dGg+SWQ8L3RoPlxuICAgICAgICAgICAgICA8L3RyPiAqL31cbiAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgIHtvYnRhaW5lZFdhbGxldERldGFpbHMubWFwKChkZXRhaWxzKSA9PiB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICAgICAge09iamVjdC5lbnRyaWVzKGRldGFpbHMpLm1hcCgoW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiA8bGk+e2Ake2tleX0gOiAke3ZhbHVlfWB9PC9saT47XG4gICAgICAgICAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICAgICAgIHsvKiA8bGk+e2RldGFpbC51c2VySWR9PC9saT5cbiAgICAgICAgICAgICAgICAgICAgICA8bGk+e2RldGFpbC50cmFuc2FjdGlvblR5cGV9PC9saT5cbiAgICAgICAgICAgICAgICAgICAgICA8bGk+e2RldGFpbC50cmFuc2FjdGlvbkFtb3V0fTwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgPGxpPntkZXRhaWwucmVtYXJrc308L2xpPlxuICAgICAgICAgICAgICAgICAgICAgIDxsaT57ZGV0YWlsLmNyZWF0ZWREYXRlfTwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgPGxpPntkZXRhaWwudHJhbnNhY3Rpb25JZH08L2xpPlxuICAgICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgICAgICAgICAgIDwvbGk+ICovfVxuICAgICAgICAgICAgICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvTW9kYWxXcmFwcGVyPlxuICApO1xufVxuZXhwb3J0IGRlZmF1bHQgV2FsbGV0RGV0YWlscztcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUmVxdWVzdCBmcm9tIFwiLi4vLi4vdXRpbHMvUmVxdWVzdFwiO1xuaW1wb3J0IEFQSVMgZnJvbSBcIi4uLy4uL3V0aWxzL3VybHNcIjtcbmltcG9ydCB7IGZldGNoVXNlcnNMaXN0IH0gZnJvbSBcIi4uLy4uL2FjdGlvbnMvdXNlcnNcIjtcbmltcG9ydCBTaWRlQmFyIGZyb20gXCIuLi8uLi9Db21wb25lbnRzL1NpZGVCYXIvU2lkZUJhclwiO1xuaW1wb3J0IEJyZWFkQ3J1bWIgZnJvbSBcIi4uLy4uL0NvbXBvbmVudHMvQnJlYWRDcnVtYi9CcmVhZENydW1iXCI7XG5pbXBvcnQgQWRkVXNlckZvcm0gZnJvbSBcIi4vQWRkVXNlckZvcm1cIjtcbmltcG9ydCBQZXJtaXNzaW9uRm9ybSBmcm9tIFwiLi9QZXJtaXNzaW9uRm9ybVwiO1xuaW1wb3J0IEFkbWluRnVuZEZvcm0gZnJvbSBcIi4vQWRtaW5GdW5kRm9ybVwiO1xuXG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQgeyBwcmludFBhZ2UsIGFkZE92ZXJsYXksIHJlbW92ZU92ZXJsYXkgfSBmcm9tIFwiLi4vLi4vdXRpbHMvY29tbW9uXCI7XG5pbXBvcnQgV2FsbGV0RGV0YWlscyBmcm9tIFwiLi9XYWxsZXREZXRhaWxzXCI7XG5pbXBvcnQge1xuICBBbGVydFdyYXBwZXIsXG4gIEJ1dHRvbixcbiAgQm9yZGVyQnRuLFxuICBUYWJsZVdyYXBwZXIsXG4gIFRvb2x0aXBXcmFwcGVyLFxufSBmcm9tIFwiLi4vLi4vQ29tcG9uZW50cy9VSS9TdHlsZWRDb25zdGFudHNcIjtcblxuY29uc3Qgcm9sZU1hcHBpbmcgPSB7XG4gIFBUTV9WRU5ET1I6IFwiVmVuZG9yXCIsXG4gIFBUTV9BRE1JTjogXCJBZG1pblwiLFxuICBQVE1fU1VCX0FETUlOOiBcIlN1YiBBZG1pblwiLFxufTtcblxuY29uc3Qgc3R5bGVzID0ge1xuICBpY29uQ29udGFpbmVyOiB7XG4gICAgcGFkZGluZzogXCIxMHB4XCIsXG4gICAgY3Vyc29yOiBcInBvaW50ZXJcIixcbiAgfSxcbiAgYnVsYkNvbnRhaW5lcjoge1xuICAgIE46IHtcbiAgICAgIGNvbG9yOiBcImdyYXlcIixcbiAgICAgIHBhZGRpbmc6IFwiMTBweFwiLFxuICAgIH0sXG4gICAgWTogeyBjb2xvcjogXCJncmVlblwiLCBwYWRkaW5nOiBcIjEwcHhcIiB9LFxuICB9LFxufTtcblxuY29uc3QgVXNlcnMgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgW2lzUG9wdXBWaXNpYmxlLCBoYW5kbGVQb3BVcF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFt1c2VyU3RhdHVzLCBzZXRVc2VyU3RhdHVzXSA9IHVzZVN0YXRlKHtcbiAgICB1c2VyTmFtZTogXCJcIixcbiAgICBtc2c6IFwiXCIsXG4gICAgc3RhdHVzOiBcIlwiLFxuICB9KTtcblxuICBjb25zdCBbdHJhbnNhdGlvblBvcHVwVmlzaWJsZSwgc2V0VHJhbnNhdGlvblBvcHVwVmlzaWJsZV0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFt1c2VyVHJhbnNhY3Rpb25EZXRhaWxzLCBzZXRVc2VyVHJhbnNhY3Rpb25EZXRhaWxzXSA9IHVzZVN0YXRlKHt9KTtcblxuICBjb25zdCBbc2hvd1Bob25lTnVtYmVyRmllbGQsIHNldFNob3dQaG9uZU51bWJlckZpZWxkXSA9IHVzZVN0YXRlKCk7XG4gIGNvbnN0IFtzdGF0dXNNc2csIHNldFN0YXR1c01zZ10gPSB1c2VTdGF0ZShcIlwiKTtcblxuICBjb25zdCBbdXNlclRvQmVFZGl0LCBzZXRVc2VySWRdID0gdXNlU3RhdGUoXCJcIik7XG4gIGNvbnN0IFtlZGl0VXNlckRhdGEsIHNldEVkaXRVc2VyRGF0YV0gPSB1c2VTdGF0ZShcIlwiKTtcbiAgY29uc3QgW3Blcm1pc3Npb25EYXRhLCBzZXRQZXJtaXNzaW9uRGF0YV0gPSB1c2VTdGF0ZSh7XG4gICAgaXNQb3B1cFZpc2libGU6IGZhbHNlLFxuICAgIHVzZXJJZDogXCJcIixcbiAgfSk7XG5cbiAgY29uc3QgW2FkbWluRm9ybURhdGEsIHNldEFkbWluRm9ybURhdGFdID0gdXNlU3RhdGUoXCJcIik7XG4gIGNvbnN0IFtpc1Rvb2x0aXAsIHNldFRvb2x0aXBdID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIGNvbnN0IHsgZGlzcGF0Y2ggfSA9IHByb3BzO1xuXG4gIGNvbnN0IGZldGNoVXNlcnNEYXRhID0gKCkgPT4ge1xuICAgIGRpc3BhdGNoKGZldGNoVXNlcnNMaXN0KCkpO1xuICB9O1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgZmV0Y2hVc2Vyc0RhdGEoKTtcbiAgfSwgW10pO1xuXG4gIGNvbnN0IHNob3dUcmFuc2FjdGlvbkhhbmRsZXIgPSAoaXRlbSkgPT4ge1xuICAgIHNldFVzZXJUcmFuc2FjdGlvbkRldGFpbHMoaXRlbSk7XG4gICAgc2V0VHJhbnNhdGlvblBvcHVwVmlzaWJsZSh0cnVlKTtcbiAgICBhZGRPdmVybGF5KCk7XG4gIH07XG4gIGNvbnN0IGNsb3NlVHJhbnNhY3Rpb25IYW5kbGVyID0gKCkgPT4ge1xuICAgIHNldFRyYW5zYXRpb25Qb3B1cFZpc2libGUoZmFsc2UpO1xuICAgIHJlbW92ZU92ZXJsYXkoKTtcbiAgfTtcblxuICBjb25zdCBlZGl0Q2xpY2tIYW5kbGVyID0gKHVzZXJJZCkgPT4ge1xuICAgIHNldFNob3dQaG9uZU51bWJlckZpZWxkKGZhbHNlKTtcbiAgICBoYW5kbGVQb3BVcCh0cnVlKTtcbiAgICBhZGRPdmVybGF5KCk7XG4gICAgc2V0VXNlcklkKHVzZXJJZCk7XG4gICAgY29uc3Qgc3VjY2Vzc0hhbmRsZXIgPSAocmVzcG9uc2UsIGhlYWRlcnMpID0+IHtcbiAgICAgIGlmIChyZXNwb25zZS5zdWNjZXNzID09IHRydWUpIHtcbiAgICAgICAgc2V0RWRpdFVzZXJEYXRhKHJlc3BvbnNlLmRhdGEpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBjb25zdCBlcnJvckhhbmRsZXIgPSAoZXJyb3IpID0+IHt9O1xuXG4gICAgY29uc3QgcmVxdWVzdCA9IG5ldyBSZXF1ZXN0KFwiXCIsIHN1Y2Nlc3NIYW5kbGVyLCBlcnJvckhhbmRsZXIsIGZhbHNlKTtcbiAgICByZXR1cm4gcmVxdWVzdC5nZXQoXG4gICAgICBgJHtBUElTLmxvZ2luLkJBU0VfVVJMfSR7QVBJUy5Vc2VyLkVESVRfVVNFUi5yZXBsYWNlKFwie3VzZXJJZH1cIiwgdXNlcklkKX1gXG4gICAgKTtcbiAgfTtcblxuICBjb25zdCBhZG1pbkZ1bmRGb3JtSGFuZGxlciA9ICh1c2VySWQpID0+IHtcbiAgICBhZGRPdmVybGF5KCk7XG4gICAgc2V0QWRtaW5Gb3JtRGF0YSh1c2VySWQpO1xuICB9O1xuXG4gIGNvbnN0IHBlcm1pc3Npb25DbGlja0hhbmRsZXIgPSAodXNlcklkKSA9PiB7XG4gICAgYWRkT3ZlcmxheSgpO1xuICAgIHNldFBlcm1pc3Npb25EYXRhKHsgaXNQb3B1cFZpc2libGU6IHRydWUsIHVzZXJJZDogdXNlcklkIH0pO1xuICB9O1xuXG4gIGNvbnN0IG9wZW5Qb3B1cEhhbmRsZXIgPSAoKSA9PiB7XG4gICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuYWRkKFwibW9kYWwtb3BlblwiKTtcbiAgICBzZXRTaG93UGhvbmVOdW1iZXJGaWVsZCh0cnVlKTtcbiAgICBoYW5kbGVQb3BVcCh0cnVlKTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVVc2VyU3RhdHVzID0gKHVzZXJJZCwgY3VyZW50U3RhdHVzKSA9PiB7XG4gICAgY29uc3Qgc3RhdHVzID0gY3VyZW50U3RhdHVzID09IFwiTlwiID8gXCJZXCIgOiBcIk5cIjtcbiAgICBzZXRUb29sdGlwKGZhbHNlKTtcbiAgICBjb25zdCBzdWNjZXNzSGFuZGxlciA9IChyZXNwb25zZSkgPT4ge1xuICAgICAgY29uc29sZS5sb2coXCJyZXNwb25zZXJlc3BvbnNlXCIsIHJlc3BvbnNlKTtcbiAgICAgIGlmIChyZXNwb25zZS5zdWNjZXNzKSB7XG4gICAgICAgIGNvbnN0IG1zZyA9IHN0YXR1cyA9PSBcIk5cIiA/IFwiZGVhY3RpdmF0ZWRcIiA6IFwiYWN0aXZhdGVkXCI7XG4gICAgICAgIHNldFRvb2x0aXAodHJ1ZSk7XG4gICAgICAgIHNldFVzZXJTdGF0dXMoe1xuICAgICAgICAgIHVzZXJOYW1lOiB1c2VySWQsXG4gICAgICAgICAgc3RhdHVzOiBzdGF0dXMsXG4gICAgICAgICAgbXNnOiAoXG4gICAgICAgICAgICA8PlxuICAgICAgICAgICAgICBUaGlzIHVzZXIgaXMgbm93IDxzdHJvbmc+e21zZ308L3N0cm9uZz5cbiAgICAgICAgICAgIDwvPlxuICAgICAgICAgICksXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBjb25zdCBlcnJvckhhbmRsZXIgPSAoZXJyb3IpID0+IHt9O1xuXG4gICAgY29uc3QgcmVxdWVzdCA9IG5ldyBSZXF1ZXN0KFwiXCIsIHN1Y2Nlc3NIYW5kbGVyLCBlcnJvckhhbmRsZXIsIGZhbHNlKTtcbiAgICBjb25zdCBwYXJhbXMgPSBgP3VzZXJJZD0ke3VzZXJJZH0mc3RhdHVzPSR7c3RhdHVzfWA7XG4gICAgcmV0dXJuIHJlcXVlc3QucHV0KFxuICAgICAgYCR7QVBJUy5sb2dpbi5CQVNFX1VSTH0ke0FQSVMuVXNlci5NQU5BR0VfVVNFUl9TVEFUVVN9JHtwYXJhbXN9YFxuICAgICk7XG4gIH07XG5cbiAgY29uc3QgY2xvc2VBZG1pbkZ1bmRQb3BVcEhhbmRsZXIgPSAoKSA9PiB7XG4gICAgc2V0QWRtaW5Gb3JtRGF0YShcIlwiKTtcbiAgICByZW1vdmVPdmVybGF5KCk7XG4gICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKFwibW9kYWwtb3BlblwiKTtcbiAgfTtcblxuICBjb25zdCBjbG9zZVBvcFVwSGFuZGxlciA9ICgpID0+IHtcbiAgICBzZXRFZGl0VXNlckRhdGEoXCJcIik7XG4gICAgcmVtb3ZlT3ZlcmxheSgpO1xuICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnJlbW92ZShcIm1vZGFsLW9wZW5cIik7XG4gICAgaGFuZGxlUG9wVXAoZmFsc2UpO1xuICB9O1xuXG4gIGNvbnN0IGNsb3NlUGVybWlzc2lvblBvcHVwID0gKCkgPT4ge1xuICAgIHNldFBlcm1pc3Npb25EYXRhKHtcbiAgICAgIC4uLnBlcm1pc3Npb25EYXRhLFxuICAgICAgdXNlcklkOiBcIlwiLFxuICAgICAgaXNQb3B1cFZpc2libGU6IGZhbHNlLFxuICAgIH0pO1xuICAgIHJlbW92ZU92ZXJsYXkoKTtcbiAgfTtcblxuICBjb25zdCB7IHVzZXJzIH0gPSBwcm9wcztcblxuICBsZXQgdXNlckRhdGEgPSB1c2VycyAmJiB1c2Vycy51c2Vyc0xpc3QgJiYgdXNlcnMudXNlcnNMaXN0LmRhdGE7XG5cbiAgaWYgKHVzZXJEYXRhKSB7XG4gICAgdXNlckRhdGEgPSB1c2VyRGF0YS5tYXAoKGl0ZW0pID0+IHtcbiAgICAgIGlmIChpdGVtLnVzZXJOYW1lID09IHVzZXJTdGF0dXMudXNlck5hbWUpIHtcbiAgICAgICAgaXRlbS5pc0FjdGl2ZSA9IHVzZXJTdGF0dXMuc3RhdHVzO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGl0ZW07XG4gICAgfSk7XG4gIH1cblxuICAvLyB1c2VFZmZlY3QoKCkgPT4ge1xuICAvLyAgIGlmKGlzVG9vbHRpcCkge1xuICAvLyAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gIC8vICAgICAgIHNldFRvb2x0aXAoZmFsc2UpO1xuICAvLyAgICAgfSwgMjAwMClcbiAgLy8gICB9XG4gIC8vIH0sIFtpc1Rvb2x0aXBdKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHN0YXR1c01zZykge1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHNldFN0YXR1c01zZyhcIlwiKTtcbiAgICAgIH0sIDMwMDApO1xuICAgIH1cbiAgfSwgW3N0YXR1c01zZ10pO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxCcmVhZENydW1iIGhlYWRpbmc9XCJVc2Vyc1wiIHZhbHVlPVwiVXNlcnNcIiAvPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkLXdyYXBwZXIgZmxleC1jb2x1bW4gbWItNFwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtaGVhZGVyIGZsZXggaXRlbS1jZW50ZXIgc3BhY2UtYmV0d2VlblwiPlxuICAgICAgICAgIDxoNCBjbGFzc05hbWU9XCJjYXJkLXRpdGxlXCI+VXNlcnMgTGlzdDwvaDQ+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGdhcDRcIj5cbiAgICAgICAgICAgIDxCb3JkZXJCdG4gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0bi1zb2Z0LXN1Y2Nlc3NcIj5cbiAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtZG93bmxvYWRcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+IENTVlxuICAgICAgICAgICAgPC9Cb3JkZXJCdG4+XG4gICAgICAgICAgICA8Qm9yZGVyQnRuXG4gICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJidG4tc29mdC1zdWNjZXNzIG1sMTBcIlxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBwcmludFBhZ2UoKX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtcHJpbnRcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+IFByaW50XG4gICAgICAgICAgICA8L0JvcmRlckJ0bj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZC1ib2R5XCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IHNwYWNlLWJldHdlZW4gcHgxNlwiPlxuICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYnRuLXN1Y2Nlc3NcIlxuICAgICAgICAgICAgICBvbkNsaWNrPXtvcGVuUG9wdXBIYW5kbGVyfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICBBZGQgVXNlclxuICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPFRhYmxlV3JhcHBlcj5cbiAgICAgICAgICAgIHtzdGF0dXNNc2cgJiYgKFxuICAgICAgICAgICAgICA8QWxlcnRXcmFwcGVyIGNsYXNzTmFtZT1cImFsZXJ0IGFsZXJ0LW5vcm1hbFwiPlxuICAgICAgICAgICAgICAgIHtzdGF0dXNNc2d9XG4gICAgICAgICAgICAgIDwvQWxlcnRXcmFwcGVyPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDx0YWJsZSBjbGFzc05hbWU9XCJ0YWJsZVwiPlxuICAgICAgICAgICAgICA8dGhlYWQ+XG4gICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgPHRoPklkPC90aD5cbiAgICAgICAgICAgICAgICAgIDx0aD5Db21wYW55IE5hbWU8L3RoPlxuICAgICAgICAgICAgICAgICAgPHRoPk1vYmlsZTwvdGg+XG4gICAgICAgICAgICAgICAgICA8dGg+RW1haWw8L3RoPlxuICAgICAgICAgICAgICAgICAgPHRoPlJvbGU8L3RoPlxuICAgICAgICAgICAgICAgICAgPHRoPldhbGxldDwvdGg+XG4gICAgICAgICAgICAgICAgICA8dGg+SG9sZCBBbW91bnQ8L3RoPlxuICAgICAgICAgICAgICAgICAgPHRoPlN0YXR1czwvdGg+XG4gICAgICAgICAgICAgICAgICA8dGg+QWN0aW9uPC90aD5cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICA8L3RoZWFkPlxuXG4gICAgICAgICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgICAgICB7dXNlckRhdGEgJiYgQXJyYXkuaXNBcnJheSh1c2VyRGF0YSlcbiAgICAgICAgICAgICAgICAgID8gdXNlckRhdGEubWFwKChpdGVtLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgIGxldCB1c2VyQ2xhc3MgPSBcIlwiO1xuICAgICAgICAgICAgICAgICAgICAgIGlmIChpdGVtLnJvbGUgJiYgcm9sZU1hcHBpbmdbaXRlbS5yb2xlXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdXNlckNsYXNzID0gcm9sZU1hcHBpbmdbaXRlbS5yb2xlXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAudG9Mb3dlckNhc2UoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAucmVwbGFjZShcIiBcIiwgXCItXCIpO1xuICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgIGxldCBzdGF0dXMgPSBpdGVtLmlzQWN0aXZlO1xuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGFjdGl2ZVN0YXR1cyA9IGl0ZW0uaXNBY3RpdmUgPT0gXCJOXCIgPyBcIllcIiA6IFwiTlwiO1xuXG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ciBrZXk9e2l0ZW0udXNlck5hbWV9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e2luZGV4ICsgMX08L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e2Ake2l0ZW0uZmlyc3ROYW1lfSAke2l0ZW0ubGFzdE5hbWV9YH08L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e2l0ZW0udXNlck5hbWV9PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPntpdGVtLmVtYWlsfTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9e3VzZXJDbGFzc30+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3JvbGVNYXBwaW5nW2l0ZW0ucm9sZV0gfHwgXCJOQVwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUnMuIHtpdGVtLnVzZXJCYWxhbmNlIHx8IFwiMFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17c3R5bGVzLmljb25Db250YWluZXJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmYSBmYS1pbmZvLWNpcmNsZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT1cIlNob3cgVHJhbnNhY3Rpb25zXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNob3dUcmFuc2FjdGlvbkhhbmRsZXIoaXRlbSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPjwvaT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgey8qIDx0ZCBjbGFzc05hbWU9XCJkb25lXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtpdGVtLmlzQWN0aXZlID09IFwiWVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBcIkFjdGl2ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBcIkluIEFjdGl2ZVwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4gKi99XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7aXRlbS5ob2xkQmFsYW5jZSA/IFwiUnMuXCIgKyBpdGVtLmhvbGRCYWxhbmNlIDogXCItXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57YCR7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5pc0FjdGl2ZSA9PSBcIk5cIiA/IFwiQWN0aXZlXCIgOiBcIkluYWN0aXZlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfWB9PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbGV4RGlyZWN0aW9uOiBcInJvd1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXtzdHlsZXMuaWNvbkNvbnRhaW5lcn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZmEgZmEtcGVuY2lsLXNxdWFyZS1vXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdENsaWNrSGFuZGxlcihpdGVtLnVzZXJOYW1lKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17eyBjdXJzb3I6IFwicG9pbnRlclwiIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9XCJ1cGRhdGUgdXNlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID48L2k+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsvKiB8ICovfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17c3R5bGVzLmljb25Db250YWluZXJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZhIGZhLWtleVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBlcm1pc3Npb25DbGlja0hhbmRsZXIoaXRlbS51c2VyTmFtZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9XCJNYW5hZ2UgUGVybWlzc2lvbnNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7IGN1cnNvcjogXCJwb2ludGVyXCIgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPjwvaT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgey8qIHwgKi99XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXtzdHlsZXMuaWNvbkNvbnRhaW5lcn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZmEta2V5XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT1cIkFkZCBGdW5kXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcInN1Y2Nlc3NmdWxcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZG1pbkZ1bmRGb3JtSGFuZGxlcihpdGVtLnVzZXJOYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+PC9pPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7LyogfCAqL31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxUb29sdGlwV3JhcHBlclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17c3R5bGVzLmJ1bGJDb250YWluZXJbYWN0aXZlU3RhdHVzXX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVVc2VyU3RhdHVzKGl0ZW0udXNlck5hbWUsIHN0YXR1cylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZhIGZhLWxpZ2h0YnVsYi1vXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17eyBmb250V2VpZ2h0OiBcImJvbGRcIiB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPXtgJHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0uaXNBY3RpdmUgPT0gXCJOXCIgPyBcIkFjdGl2ZVwiIDogXCJJbmFjdGl2ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfWB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID48L2k+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3VzZXJTdGF0dXMudXNlck5hbWUgPT0gaXRlbS51c2VyTmFtZSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzVG9vbHRpcCAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRvb2x0aXAgdG9vbHRpcC1zdWNjZXNzXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt1c2VyU3RhdHVzPy5tc2d9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9Ub29sdGlwV3JhcHBlcj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgIDogXCJcIn1cbiAgICAgICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgICAgIDwvdGFibGU+XG4gICAgICAgICAgPC9UYWJsZVdyYXBwZXI+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG5cbiAgICAgIHthZG1pbkZvcm1EYXRhID8gKFxuICAgICAgICA8QWRtaW5GdW5kRm9ybVxuICAgICAgICAgIHVzZXJJZD17YWRtaW5Gb3JtRGF0YX1cbiAgICAgICAgICBjbG9zZUFkbWluRnVuZEZvcm09e2Nsb3NlQWRtaW5GdW5kUG9wVXBIYW5kbGVyfVxuICAgICAgICAgIHNldFN0YXR1c01zZz17c2V0U3RhdHVzTXNnfVxuICAgICAgICAgIHN1Y2Nlc3NDYWxsQmFjaz17ZmV0Y2hVc2Vyc0RhdGF9XG4gICAgICAgIC8+XG4gICAgICApIDogKFxuICAgICAgICBcIlwiXG4gICAgICApfVxuICAgICAge2lzUG9wdXBWaXNpYmxlID8gKFxuICAgICAgICA8QWRkVXNlckZvcm1cbiAgICAgICAgICBjbG9zZVBvcFVwSGFuZGxlcj17Y2xvc2VQb3BVcEhhbmRsZXJ9XG4gICAgICAgICAgZmV0Y2hVc2Vyc0RhdGE9e2ZldGNoVXNlcnNEYXRhfVxuICAgICAgICAgIHByb3BzPXtwcm9wc31cbiAgICAgICAgICBlZGl0VXNlckRhdGE9e2VkaXRVc2VyRGF0YX1cbiAgICAgICAgICB1c2VyVG9CZUVkaXQ9e3VzZXJUb0JlRWRpdH1cbiAgICAgICAgICBzaG93UGhvbmVOdW1iZXJGaWVsZD17c2hvd1Bob25lTnVtYmVyRmllbGR9XG4gICAgICAgIC8+XG4gICAgICApIDogKFxuICAgICAgICBcIlwiXG4gICAgICApfVxuXG4gICAgICB7dHJhbnNhdGlvblBvcHVwVmlzaWJsZSA/IChcbiAgICAgICAgPFdhbGxldERldGFpbHNcbiAgICAgICAgICB1c2VyV2FsbGV0PXt1c2VyVHJhbnNhY3Rpb25EZXRhaWxzfVxuICAgICAgICAgIGNsb3NlVHJhbnNhY3Rpb25IYW5kbGVyPXtjbG9zZVRyYW5zYWN0aW9uSGFuZGxlcn1cbiAgICAgICAgLz5cbiAgICAgICkgOiAoXG4gICAgICAgIFwiXCJcbiAgICAgICl9XG5cbiAgICAgIHtwZXJtaXNzaW9uRGF0YS5pc1BvcHVwVmlzaWJsZSA/IChcbiAgICAgICAgPFBlcm1pc3Npb25Gb3JtXG4gICAgICAgICAgY2xvc2VQb3BVcEhhbmRsZXI9e2Nsb3NlUGVybWlzc2lvblBvcHVwfVxuICAgICAgICAgIHVzZXJJZD17cGVybWlzc2lvbkRhdGEudXNlcklkfVxuICAgICAgICAvPlxuICAgICAgKSA6IChcbiAgICAgICAgXCJcIlxuICAgICAgKX1cbiAgICA8Lz5cbiAgKTtcbn07XG5cbmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9IChzdGF0ZSkgPT4ge1xuICByZXR1cm4ge1xuICAgIC4uLnN0YXRlLFxuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMpKFVzZXJzKTtcbiJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiUmVxdWVzdCIsInVybHMiLCJyZW1vdmVPdmVybGF5IiwiQnV0dG9uIiwiTW9kYWxXcmFwcGVyIiwiaW5pdGlhbEZvcm1EYXRhIiwiT2JqZWN0IiwiZnJlZXplIiwiYWRkcmVzczEiLCJhZGRyZXNzMiIsImRvYiIsImVtYWlsIiwiZmlyc3ROYW1lIiwibGFuZG1hcmsiLCJsYW5nS2V5IiwibGFzdE5hbWUiLCJvdHAiLCJwaG9uZU51bWJlciIsInBpbmNvZGUiLCJxckNvZGVJZCIsInJvbGUiLCJ0ZW5hbnRJZCIsInVzZXJOYW1lIiwiQWRkVXNlckZvcm0iLCJwcm9wcyIsImVkaXRVc2VyRGF0YSIsInVzZXJUb0JlRWRpdCIsImNsb3NlUG9wVXBIYW5kbGVyIiwiZmV0Y2hVc2Vyc0RhdGEiLCJfdXNlU3RhdGUiLCJfdXNlU3RhdGUyIiwiX3NsaWNlZFRvQXJyYXkiLCJmb3JtRGF0YSIsInVwZGF0ZUZvcm1EYXRhIiwiX3VzZVN0YXRlMyIsIl91c2VTdGF0ZTQiLCJlZGl0Rm9ybURhdGEiLCJ1cGRhdGVFZGl0Rm9ybURhdGEiLCJfdXNlU3RhdGU1IiwiX3VzZVN0YXRlNiIsImVycm9ycyIsInVwZGF0ZUVycm9yIiwiX3VzZVN0YXRlNyIsIl91c2VTdGF0ZTgiLCJzdWNjZXNzIiwidXBkYXRlU3VjY2VzcyIsIl9vYmplY3RTcHJlYWQiLCJoYW5kbGVDaGFuZ2UiLCJldmVudCIsIl9kZWZpbmVQcm9wZXJ0eSIsInRhcmdldCIsIm5hbWUiLCJ2YWx1ZSIsInVwZGF0ZVVzZXIiLCJhcGkiLCJzdWNjZXNzSGFuZGxlciIsImVycm9ySGFuZGxlciIsInBvc3QiLCJjb25jYXQiLCJsb2dpbiIsIkJBU0VfVVJMIiwiVXNlciIsIlVQREFURV9VU0VSIiwiZXJyb3IiLCJzdGF0dXMiLCJmaWVsZEVycm9ycyIsIkFycmF5IiwiZm9yRWFjaCIsIml0ZW0iLCJwdXNoIiwiZmllbGQiLCJtZXNzYWdlIiwibGVuZ3RoIiwid2luZG93Iiwic2Nyb2xsVG8iLCJkYXRhIiwibXNnIiwic3VibWl0Rm9ybUhhbmRsZXIiLCJwcmV2ZW50RGVmYXVsdCIsIkNSRUFURV9ORVdfVVNFUiIsImVycm9ySFRNTCIsImVycm9yU3R5bGVzIiwic3VjY2Vzc1N0eWxlcyIsIm1hcCIsInZhbCIsImNyZWF0ZUVsZW1lbnQiLCJrZXkiLCJjb2xvciIsImZvbnRTaXplIiwibWFyZ2luVG9wIiwiY29uc29sZSIsImxvZyIsImNsYXNzTmFtZSIsInR5cGUiLCJvbkNsaWNrIiwib25TdWJtaXQiLCJvbkNoYW5nZSIsInJlcXVpcmVkIiwibWluIiwibWF4Iiwic2VsZWN0ZWQiLCJnZXRBdXRoVG9rZW4iLCJheGlvcyIsIlBlcm1pc3Npb25Gb3JtIiwidXNlcklkIiwicGVybWlzc2lvbnMiLCJzZXRQZXJtaXNzaW9ucyIsInNldE1lc3NhZ2UiLCJmZXRjaFBlcm1pc3Npb25zIiwicmVzIiwiYWN0aXZlUGVybWlzc2lvbnMiLCJvcHRpb25zIiwiaGVhZGVycyIsIkF1dGhvcml6YXRpb24iLCJwcm9taXNlMSIsImdldCIsIkdFVF9BTExfUEVSTUlTSVNTSU9OUyIsInByb21pc2UyIiwiTUFOQUdFX1VTRVJfUEVSTUlTU0lPTlMiLCJhbGwiLCJ0aGVuIiwic3ByZWFkIiwiX2xlbiIsImFyZ3VtZW50cyIsInJlc3BvbnNlcyIsIl9rZXkiLCJhbGxQZXJtaXNzaW9ucyIsImhhbmRsZUNsaWNrIiwicGVybUtleSIsImFjdGl2ZVBlcm1pc3Npb25zQ29weSIsIkpTT04iLCJwYXJzZSIsInN0cmluZ2lmeSIsImNoZWNrZWQiLCJmaWx0ZXJlZEFycmF5IiwiZmlsdGVyIiwibmV3UGVybWlzc2lvbnMiLCJrZXlzIiwiYWRkQXBpQ29kZSIsInN1Ym1pdFN1Y2Nlc3MiLCJzdWJtaXRFcnJvciIsInBlcm1LZXlzIiwiaWQiLCJpc0FycmF5IiwiRnJhZ21lbnQiLCJpbmNsdWRlcyIsInN0eWxlIiwibWFyZ2luUmlnaHQiLCJyZXBsYWNlIiwibWFyZ2luIiwidGV4dEFsaWduIiwidXNlUmVmIiwiQVBJUyIsIkFkbWluRnVuZEZvcm0iLCJfcmVmIiwiY2xvc2VBZG1pbkZ1bmRGb3JtIiwic2V0U3RhdHVzTXNnIiwic3VjY2Vzc0NhbGxCYWNrIiwiYW1vdW50IiwicmVtYXJrIiwiZXdhbGxldFR5cGUiLCJzZXRGb3JtRGF0YSIsIndhbGxldFNlbGVjdCIsIndhbGxldEFjdGlvbiIsImN1cnJlbnQiLCJyZXF1ZXN0Iiwid2FsbGV0QVBJIiwiV2FsbGV0IiwiTUFOQUdFX1dBTExFVCIsInBhcnNlSW50IiwicmVzcG9uc2UiLCJwcmV2U3RhdGUiLCJyZWYiLCJXYWxsZXREZXRhaWxzIiwiY2xvc2VUcmFuc2FjdGlvbkhhbmRsZXIiLCJ1c2VyV2FsbGV0IiwiZmV0Y2hXYWxsZXREZXRhaWxzIiwiVklFV19UUkFOU0FDVElPTlMiLCJzZXRPYnRhaW5lZFdhbGxldERldGFpbHMiLCJvYnRhaW5lZFdhbGxldERldGFpbHMiLCJkZXRhaWxzIiwiZW50cmllcyIsIl9yZWYyIiwiX3JlZjMiLCJmZXRjaFVzZXJzTGlzdCIsIlNpZGVCYXIiLCJCcmVhZENydW1iIiwiY29ubmVjdCIsInByaW50UGFnZSIsImFkZE92ZXJsYXkiLCJBbGVydFdyYXBwZXIiLCJCb3JkZXJCdG4iLCJUYWJsZVdyYXBwZXIiLCJUb29sdGlwV3JhcHBlciIsInJvbGVNYXBwaW5nIiwiUFRNX1ZFTkRPUiIsIlBUTV9BRE1JTiIsIlBUTV9TVUJfQURNSU4iLCJzdHlsZXMiLCJpY29uQ29udGFpbmVyIiwicGFkZGluZyIsImN1cnNvciIsImJ1bGJDb250YWluZXIiLCJOIiwiWSIsIlVzZXJzIiwiaXNQb3B1cFZpc2libGUiLCJoYW5kbGVQb3BVcCIsInVzZXJTdGF0dXMiLCJzZXRVc2VyU3RhdHVzIiwidHJhbnNhdGlvblBvcHVwVmlzaWJsZSIsInNldFRyYW5zYXRpb25Qb3B1cFZpc2libGUiLCJ1c2VyVHJhbnNhY3Rpb25EZXRhaWxzIiwic2V0VXNlclRyYW5zYWN0aW9uRGV0YWlscyIsIl91c2VTdGF0ZTkiLCJfdXNlU3RhdGUxMCIsInNob3dQaG9uZU51bWJlckZpZWxkIiwic2V0U2hvd1Bob25lTnVtYmVyRmllbGQiLCJfdXNlU3RhdGUxMSIsIl91c2VTdGF0ZTEyIiwic3RhdHVzTXNnIiwiX3VzZVN0YXRlMTMiLCJfdXNlU3RhdGUxNCIsInNldFVzZXJJZCIsIl91c2VTdGF0ZTE1IiwiX3VzZVN0YXRlMTYiLCJzZXRFZGl0VXNlckRhdGEiLCJfdXNlU3RhdGUxNyIsIl91c2VTdGF0ZTE4IiwicGVybWlzc2lvbkRhdGEiLCJzZXRQZXJtaXNzaW9uRGF0YSIsIl91c2VTdGF0ZTE5IiwiX3VzZVN0YXRlMjAiLCJhZG1pbkZvcm1EYXRhIiwic2V0QWRtaW5Gb3JtRGF0YSIsIl91c2VTdGF0ZTIxIiwiX3VzZVN0YXRlMjIiLCJpc1Rvb2x0aXAiLCJzZXRUb29sdGlwIiwiZGlzcGF0Y2giLCJzaG93VHJhbnNhY3Rpb25IYW5kbGVyIiwiZWRpdENsaWNrSGFuZGxlciIsIkVESVRfVVNFUiIsImFkbWluRnVuZEZvcm1IYW5kbGVyIiwicGVybWlzc2lvbkNsaWNrSGFuZGxlciIsIm9wZW5Qb3B1cEhhbmRsZXIiLCJkb2N1bWVudCIsImJvZHkiLCJjbGFzc0xpc3QiLCJhZGQiLCJoYW5kbGVVc2VyU3RhdHVzIiwiY3VyZW50U3RhdHVzIiwicGFyYW1zIiwicHV0IiwiTUFOQUdFX1VTRVJfU1RBVFVTIiwiY2xvc2VBZG1pbkZ1bmRQb3BVcEhhbmRsZXIiLCJyZW1vdmUiLCJjbG9zZVBlcm1pc3Npb25Qb3B1cCIsInVzZXJzIiwidXNlckRhdGEiLCJ1c2Vyc0xpc3QiLCJpc0FjdGl2ZSIsInNldFRpbWVvdXQiLCJoZWFkaW5nIiwiaW5kZXgiLCJ1c2VyQ2xhc3MiLCJ0b0xvd2VyQ2FzZSIsImFjdGl2ZVN0YXR1cyIsInVzZXJCYWxhbmNlIiwidGl0bGUiLCJob2xkQmFsYW5jZSIsImRpc3BsYXkiLCJmbGV4RGlyZWN0aW9uIiwiZm9udFdlaWdodCIsIm1hcFN0YXRlVG9Qcm9wcyIsInN0YXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///30694\n");

/***/ })

}]);